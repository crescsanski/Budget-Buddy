{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/alerts/status-update/status-update.component.ts","./src/app/alerts/status-update/status-update.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/helpers/auth.guard.ts","./src/app/helpers/authInterceptor.service.ts","./src/app/helpers/budget.guard.ts","./src/app/helpers/error.interceptor.ts","./src/app/home/budget-creator/budget-adjuster/budget-adjuster.component.ts","./src/app/home/budget-creator/budget-adjuster/budget-adjuster.component.html","./src/app/home/budget-creator/budget-advisor/budget-advisor.component.ts","./src/app/home/budget-creator/budget-advisor/budget-advisor.component.html","./src/app/home/budget-creator/budget-algorithm/budget-algorithm.component.ts","./src/app/home/budget-creator/budget-algorithm/budget-algorithm.component.html","./src/app/home/budget-creator/budget-panel/budget-panel.component.ts","./src/app/home/budget-creator/budget-panel/budget-panel.component.html","./src/app/home/budget-creator/new-budget/new-budget.component.ts","./src/app/home/budget-creator/new-budget/new-budget.component.html","./src/app/home/home.module.ts","./src/app/home/main-page/main-page.component.ts","./src/app/home/main-page/main-page.component.html","./src/app/home/main-page/menu/menu.component.ts","./src/app/home/main-page/menu/menu.component.html","./src/app/login/login-nav/login-nav.component.ts","./src/app/login/login-nav/login-nav.component.html","./src/app/login/login-page/login-page.component.ts","./src/app/login/login-page/login-page.component.html","./src/app/login/login-panel/login-panel.component.ts","./src/app/login/login-panel/login-panel.component.html","./src/app/models/alert.ts","./src/app/primeng/primeng.module.ts","./src/app/register/register-nav/register-nav.component.ts","./src/app/register/register-nav/register-nav.component.html","./src/app/register/register-page/register-page.component.ts","./src/app/register/register-page/register-page.component.html","./src/app/register/register-panel/register-panel.component.ts","./src/app/register/register-panel/register-panel.component.html","./src/app/resolvers/dataResolver.resolver.ts","./src/app/resolvers/newBudgetResolver.resolver.ts","./src/app/services/alert.service.ts","./src/app/services/auth.service.ts","./src/app/services/badgesEarned.service.ts","./src/app/services/budget.service.ts","./src/app/services/budget_score.service.ts","./src/app/services/category.service.ts","./src/app/services/challenges.service.ts","./src/app/services/color.service.ts","./src/app/services/income-history.service.ts","./src/app/services/message.service.ts","./src/app/services/receipt-upload.service.ts","./src/app/services/receipt.service.ts","./src/app/services/savings-history.service.ts","./src/app/services/spending-history.service.ts","./src/app/services/time.service.ts","./src/app/services/trigger.service.ts","./src/app/widget/actual-vs-est-income/actual-vs-est-income.component.ts","./src/app/widget/actual-vs-est-income/actual-vs-est-income.component.html","./src/app/widget/available-challenges/available-challenges.component.ts","./src/app/widget/available-challenges/available-challenges.component.html","./src/app/widget/avatar-editor/avatar-editor.component.ts","./src/app/widget/avatar-editor/avatar-editor.component.html","./src/app/widget/badges-widget/badges-widget.component.ts","./src/app/widget/badges-widget/badges-widget.component.html","./src/app/widget/basic-widget/basic-widget.component.ts","./src/app/widget/basic-widget/basic-widget.component.html","./src/app/widget/budget-breakdown-chart/budget-breakdown-chart.component.ts","./src/app/widget/budget-breakdown-chart/budget-breakdown-chart.component.html","./src/app/widget/budget-slider/budget-slider.component.ts","./src/app/widget/budget-slider/budget-slider.component.html","./src/app/widget/budget-vs-spending/budget-vs-spending.component.ts","./src/app/widget/budget-vs-spending/budget-vs-spending.component.html","./src/app/widget/challenge-progress/challenge-progress.component.ts","./src/app/widget/challenge-progress/challenge-progress.component.html","./src/app/widget/income-tracking/income-tracking.component.ts","./src/app/widget/income-tracking/income-tracking.component.html","./src/app/widget/letter-grade/letter-grade.component.ts","./src/app/widget/letter-grade/letter-grade.component.html","./src/app/widget/receipt-tracking/receipt-tracking.component.ts","./src/app/widget/receipt-tracking/receipt-tracking.component.html","./src/app/widget/savings-over-time/savings-over-time.component.ts","./src/app/widget/savings-over-time/savings-over-time.component.html","./src/app/widget/services/receipt-track.service.ts","./src/app/widget/small-widget/small-widget.component.ts","./src/app/widget/small-widget/small-widget.component.html","./src/app/widget/spending-by-category/spending-by-category.component.ts","./src/app/widget/spending-by-category/spending-by-category.component.html","./src/app/widget/spending-vs-income/spending-vs-income.component.ts","./src/app/widget/spending-vs-income/spending-vs-income.component.html","./src/app/widget/tracking-type/tracking-type.component.ts","./src/app/widget/tracking-type/tracking-type.component.html","./src/app/widget/tracking/tracking.component.ts","./src/app/widget/tracking/tracking.component.html","./src/app/widget/trophies/trophies.component.ts","./src/app/widget/trophies/trophies.component.html","./src/app/widget/weekly-spending-small/weekly-spending-small.component.ts","./src/app/widget/weekly-spending-small/weekly-spending-small.component.html","./src/app/widget/weekly-spending/weekly-spending.component.ts","./src/app/widget/weekly-spending/weekly-spending.component.html","./src/app/widget/widget.module.ts","./src/app/widget/widget.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DialogService, DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { Challenge } from 'src/app/models/Challenge';\r\nimport { ChallengesService } from 'src/app/services/challenges.service';\r\n\r\n@Component({\r\n  selector: 'app-status-update',\r\n  templateUrl: './status-update.component.html',\r\n  styleUrls: ['./status-update.component.scss']\r\n})\r\nexport class StatusUpdateComponent implements OnInit {\r\n\r\n  completedChallenge: Challenge\r\n  value1: number;\r\n  value2: number;\r\n  curExper: number;\r\n  requiredExper: number;\r\n  origPerc: number;\r\n  targetPerc1: number;\r\n  target1: number;\r\n  target2: number;\r\n  gainedLevel: boolean = false;\r\n  targetPerc2: number;\r\n  curLevel: number;\r\n  origExper: number;\r\n  needed1: number;\r\n  needed2: number;\r\n  oldLevel: number;\r\n  \r\n  constructor(private challServ: ChallengesService, public ref: DynamicDialogRef, public config: DynamicDialogConfig) { \r\n    this.completedChallenge = this.config.data.completedChallenge\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.origExper = this.challServ.preLev_Prog.experience_points\r\n    this.needed1 = this.challServ.preLev_Prog.required_experience\r\n    this.curExper = this.challServ.levProgress.experience_points\r\n    this.oldLevel = this.challServ.preLev_Prog.level\r\n    this.curLevel = this.challServ.levProgress.level\r\n\r\n    if (this.curLevel > this.oldLevel)\r\n    {\r\n      this.gainedLevel = true;\r\n      this.targetPerc1 = 100\r\n      this.target1 = this.needed1\r\n      this.target2 = this.curExper\r\n      this.needed2 = this.challServ.levProgress.required_experience\r\n      this.targetPerc2 = this.curExper / this.needed2 * 100\r\n    }\r\n    else\r\n    {\r\n      this.target1 = this.curExper\r\n      this.targetPerc1 = this.curExper / this.needed1 * 100\r\n    }\r\n\r\n    this.value1 = Math.round(this.challServ.preLev_Prog.experience_points / this.challServ.preLev_Prog.required_experience * 100)\r\n    this.value2 = 0\r\n\r\n    let interval = setInterval(() => {\r\n      this.value1 = this.value1 + 1;\r\n      if (this.value1 >= this.targetPerc1) {\r\n          this.value1 = Math.round(this.targetPerc1);\r\n      }\r\n  }, 70);\r\n\r\n  if (this.gainedLevel)\r\n  {\r\n      let interval2 = setInterval(() => {\r\n        this.value2 = this.value2 + 1;\r\n        if (this.value2 >= this.targetPerc2) {\r\n            this.value2 = Math.round(this.targetPerc2);\r\n        }\r\n    }, 70);\r\n  }\r\n\r\n\r\n  \r\n  }\r\n\r\n}\r\n","<div>\r\n        <h1>Congratulations!  You've completed a challenge.</h1>\r\n        <p>Experience Gained: {{this.completedChallenge.rewardPoints}}</p>\r\n        <div *ngIf=\"!completedChallenge.no_badge\">\r\n            <p >Badge Earned: {{this.completedChallenge.name}}</p>\r\n        </div>\r\n        <div class=\"grid\">\r\n            <div class=\"col-2\" style=\"float: right\">\r\n                <span style=\"font-weight:bold; font-size: 3em;\">Level {{oldLevel}}</span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n                <p-progressBar class=\"progress-bar\" [value]=\"value1\"></p-progressBar>\r\n                <p class=\"subtitle\">{{ target1 }} XP / <span style=\"font-weight:bold\">{{ needed1 }} XP</span></p>\r\n            </div>\r\n            <div class=\"col-2\" style=\"float: left\">\r\n                <span style=\"font-weight:bold; font-size: 3em;\">Level {{oldLevel + 1}}</span>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n        <div *ngIf=\"gainedLevel\">\r\n            <p>Wow!  You've earned enough experience to advance to the next level</p>\r\n\r\n            <div class=\"grid\">\r\n                <div class=\"col-2\" style=\"float: right\">\r\n                    <span style=\"font-weight:bold; font-size: 3em;\">Level {{curLevel}}</span>\r\n                </div>\r\n                <div class=\"col-8\">\r\n                    <p-progressBar class=\"progress-bar\" [value]=\"value2\"></p-progressBar>\r\n                    <p class=\"subtitle\">{{ target2 }} XP / <span style=\"font-weight:bold\">{{ needed2 }} XP</span></p>\r\n                </div>\r\n                <div class=\"col-2\" style=\"float: left\">\r\n                    <span style=\"font-weight:bold; font-size: 3em;\">Level {{curLevel + 1}}</span>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n</div>","import { NewBudgetComponent } from './home/budget-creator/new-budget/new-budget.component';\r\nimport { LoginPageComponent } from './login/login-page/login-page.component';\r\nimport { MainPageComponent } from './home/main-page/main-page.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './helpers/auth.guard';\r\nimport { RegisterPageComponent } from './register/register-page/register-page.component';\r\nimport { DataResolver } from './resolvers/dataResolver.resolver';\r\nimport { NewBudgetResolver } from './resolvers/newBudgetResolver.resolver';\r\nimport { BudgetGuard } from './helpers/budget.guard';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/main-page', pathMatch: 'full' },\r\n  {path: 'main-page', component: MainPageComponent, canActivate: [AuthGuard, BudgetGuard],\r\n        resolve: {dataPackage: DataResolver}\r\n  },\r\n  {path: 'login-page', component: LoginPageComponent},\r\n  {path: 'new-budget', component: NewBudgetComponent, canActivate: [AuthGuard],\r\n    resolve: {dataPackage: NewBudgetResolver}\r\n  },\r\n  {path: 'register-page', component: RegisterPageComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, HostListener, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from './services/auth.service';\r\nimport { User } from './models/user';\r\nimport { WidgetService } from './widget/widget.service';\r\nimport { CategoryService } from './services/category.service';\r\nimport {DialogService} from 'primeng/dynamicdialog';\r\nimport { BudgetService } from './services/budget.service';\r\nimport { SpendingHistoryService } from './services/spending-history.service';\r\nimport { BadgesEarnedService } from './services/badgesEarned.service';\r\nimport { ChallengesService } from './services/challenges.service';\r\nimport { TriggerService } from './services/trigger.service';\r\nimport { Challenge } from './models/Challenge';\r\nimport { StatusUpdateComponent } from './alerts/status-update/status-update.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent {\r\n  user: User | null = null;\r\n\r\n  constructor(private authServ: AuthService, \r\n    private budServ: BudgetService,\r\n    private spenTot: SpendingHistoryService,\r\n    private trigServ: TriggerService,\r\n    private dialogService: DialogService,\r\n    private badServ: BadgesEarnedService,\r\n    private catService: CategoryService)\r\n  {\r\n    this.authServ.currentUser.subscribe(x => this.user = <User>x);\r\n\r\n    this.trigServ.challCompletedAnnounced$.subscribe((val: Challenge) =>\r\n    {\r\n      this.show(val)\r\n    })\r\n\r\n  }\r\n\r\n  cleanLogout() {\r\n    this.authServ.cleanLogout().subscribe();\r\n  }\r\n\r\n  private show(val: Challenge)\r\n  {\r\n    const ref = this.dialogService.open(StatusUpdateComponent, {\r\n      data: {\r\n        completedChallenge: val\r\n      },\r\n      header: 'Progress Update!',\r\n      width: '70%'\r\n  });\r\n  }\r\n}\r\n\r\n\r\n","<p-toast position=\"top-center\"></p-toast>\r\n<!-- main app container -->\r\n<div class=\"app-container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { WidgetModule } from './widget/widget.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { LoginPageComponent } from './login/login-page/login-page.component';\r\nimport { LoginNavComponent } from './login/login-nav/login-nav.component';\r\nimport { LoginPanelComponent } from './login/login-panel/login-panel.component';\r\nimport { AuthInterceptor } from './helpers/authInterceptor.service';\r\nimport { ErrorInterceptor } from './helpers/error.interceptor';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RegisterPanelComponent } from './register/register-panel/register-panel.component';\r\nimport { RegisterNavComponent } from './register/register-nav/register-nav.component';\r\nimport { RegisterPageComponent } from './register/register-page/register-page.component';\r\nimport { PrimengModule } from './primeng/primeng.module';\r\nimport { CurrencyPipe, DatePipe, DecimalPipe, PercentPipe } from '@angular/common';\r\nimport {TooltipModule} from 'primeng/tooltip';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport { StatusUpdateComponent } from './alerts/status-update/status-update.component';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginPageComponent,\r\n    LoginNavComponent,\r\n    LoginPanelComponent,\r\n    RegisterPanelComponent,\r\n    RegisterNavComponent,\r\n    RegisterPageComponent,\r\n    StatusUpdateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    PrimengModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      // Register the ServiceWorker as soon as the app is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    }),\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    HomeModule,\r\n    WidgetModule,\r\n    TooltipModule,\r\n    FormsModule,\r\n    DialogModule\r\n  ],\r\n  exports: [\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    DatePipe, CurrencyPipe, PercentPipe, DecimalPipe, ConfirmationService, DialogService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthService } from '../services/auth.service'\r\nimport { BudgetService } from '../services/budget.service';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { TimeService } from '../services/time.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private budgServ: BudgetService,\r\n        private catServ: CategoryService,\r\n        private timeServ: TimeService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.authService.currentUserValue\r\n        if (user && user.token) {\r\n            // authorised so return true\r\n            console.log(\"User: \", user)\r\n            return true;\r\n        }\r\n   \r\n              // not logged in so redirect to login page\r\n                this.router.navigate(['login-page']);\r\n                return false;\r\n\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const user = this.authService.currentUserValue;\r\n    const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith('api');\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Token ${user!.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { Budget } from '../models/budget';\r\nimport { BudgetCategory } from '../models/formModels/budgetCategory';\r\n\r\nimport { AuthService } from '../services/auth.service'\r\nimport { BudgetService } from '../services/budget.service';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { TimeService } from '../services/time.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BudgetGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private budgServ: BudgetService,\r\n        private catServ: CategoryService,\r\n        private timeServ: TimeService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.authService.currentUserValue\r\n        if (user && user.token) {\r\n        return this.budgServ.getBudByCat().pipe(\r\n            map((val: Budget[]) => {\r\n                let cur = val.filter(value => value.year == this.timeServ.year \r\n                    && value.month == this.timeServ.month)\r\n                if (cur.length == 23)\r\n                {\r\n                    return true;\r\n                }\r\n                this.router.navigate(['new-budget']);\r\n                return false;\r\n            })\r\n        )}\r\n             // not logged in so redirect to login page\r\n             this.router.navigate(['login-page']);\r\n             return false;\r\n    } \r\n    \r\n\r\n \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && this.authService.currentUserValue) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.authService.expireLogout();\r\n            }\r\n            const error = err.error || err.statusText;\r\n            console.error(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { newBudgetPrompt } from './../../../models/newBudgetPrompt';\r\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { UIChart } from 'primeng/chart';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport { Budget } from 'src/app/models/budget';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-budget-adjuster',\r\n  templateUrl: './budget-adjuster.component.html',\r\n  styleUrls: ['./budget-adjuster.component.scss', './../../../widget/basic-widget/basic-widget.component.scss']\r\n})\r\nexport class BudgetAdjusterComponent implements OnInit {\r\n  stackedData: any;\r\n  stackedOptions: any;\r\n  wantsValue: number = 0;\r\n  loading: boolean = false;\r\n  needsValue: number = 0;\r\n  debtValue: number = 0;\r\n  dropdownPrompts = [];\r\n  max: number = 0;\r\n  wantsRecommend = 0;\r\n  needsRecommend = 0;\r\n  debtRecommend = 0;\r\n\r\n  actualWantsPercent=0;\r\n  actualNeedsPercent=0;\r\n  actualDebtPercent=0;\r\n\r\n  errorValue = 0;\r\n  errorPercent = 0;\r\n  errorDifference = 0;\r\n  errorCategory = '';\r\n\r\n  overBudget: boolean = false;\r\n\r\n  categories = ['want', 'need', 'saving']\r\n\r\n  selectedCategory = \"\";\r\n\r\n  @Input() prompts: newBudgetPrompt[];\r\n  @Input() dat: any;\r\n  @Input() totalIncome: number;\r\n  @Input() totalExpenses: number;\r\n  @Input() incomes: any[];\r\n  @Input() expenses: any[];\r\n  @Input() availableBudget: number;\r\n  @Input() breakdown: {want: number, need: number, debt: number}\r\n  @ViewChild('chart') chart: UIChart; \r\n\r\n  constructor(private budServ: BudgetService, private router: Router) { }\r\n\r\n  onChange(){\r\n    //this.dropdownPrompts = [];\r\n    this.expenses.forEach(x => {\r\n      if(x.category  == (this.selectedCategory.toLowerCase())) {\r\n        //this.dropdownPrompts.push(x);\r\n        x.visible = true;\r\n      }\r\n      else\r\n      {\r\n        x.visible = false;\r\n      }\r\n  });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.recalculate();\r\n    this.max = this.availableBudget;\r\n\r\n\r\n    this.stackedData = {\r\n      labels: ['My Budget Breakdown'],\r\n      datasets: [{\r\n          type: 'bar',\r\n          label: 'Needs',\r\n          backgroundColor: '#4ec5ca',\r\n          data: [this.breakdown.need]\r\n      }, {\r\n          type: 'bar',\r\n          label: 'Wants',\r\n          backgroundColor: '#003486',\r\n          data: [this.wantsValue]\r\n      }, {\r\n          type: 'bar',\r\n          label: 'Savings',\r\n          backgroundColor: '#4eca9f',\r\n          data: [this.debtValue]\r\n      }, {\r\n        type: 'bar',\r\n        label: 'Available',\r\n        backgroundColor: '#00000020',\r\n        data: [this.availableBudget]\r\n    }]\r\n  };\r\n\r\n  \r\n\r\n\r\n this.stackedOptions = {\r\n            plugins: {\r\n                datalabels: {\r\n                  display: false\r\n                },\r\n                tooltips: {\r\n                    mode: 'index',\r\n                    intersect: false\r\n                },\r\n                legend: {display: true}\r\n            },\r\n            indexAxis: 'y',\r\n            scales: {\r\n                x: {\r\n                    stacked: true,\r\n                    ticks: {\r\n                        color: '#00000000'\r\n                    },\r\n                    grid: {\r\n                        color: 'white'\r\n                    }\r\n                },\r\n                y: {\r\n                    stacked: true,\r\n                    ticks: {\r\n                        color: '#003486'\r\n                    },\r\n                    grid: {\r\n                        color: 'white'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    recalculate(){\r\n      this.wantsValue = 0;\r\n      this.debtValue = 0;\r\n      this.needsValue = 0;\r\n\r\n      this.expenses.forEach(x => {\r\n         if(x.category == 'saving') {\r\n            this.debtValue += x.amount;\r\n          } else if (x.category == 'want'){\r\n            this.wantsValue += x.amount;\r\n\r\n          } else if (x.category == 'need'){\r\n            this.needsValue += x.amount;\r\n\r\n          }\r\n      });\r\n      this.breakdown = {want: this.wantsValue, need: this.needsValue, debt: this.debtValue}\r\n      this.totalExpenses = this.debtValue + this.wantsValue + this.needsValue;\r\n      this.availableBudget = this.totalIncome-this.totalExpenses;\r\n      this.max = this.availableBudget;\r\n      if (this.max >= 0)\r\n      {\r\n        this.expenses.forEach(x => {\r\n          x.max = x.amount + this.max;\r\n       });\r\n      }\r\n      else\r\n      {\r\n        this.expenses.forEach(x => {\r\n          x.max = x.amount;\r\n       });\r\n      }\r\n \r\n    }\r\n\r\n    getErrPerc(x: number): number\r\n    {\r\n      return Math.round(x);\r\n    }\r\n  \r\n    update(event: Event) {\r\n      this.recalculate();\r\n      this.makeRecommendations();\r\n       this.stackedData = {\r\n         labels: ['Budget'],\r\n        datasets: [{\r\n          type: 'bar',\r\n          label: 'Needs',\r\n          backgroundColor: '#4ec5ca',\r\n          data: [this.breakdown.need]\r\n      }, {\r\n          type: 'bar',\r\n          label: 'Wants',\r\n          backgroundColor: '#003486',\r\n          data: [this.breakdown.want]\r\n      }, {\r\n          type: 'bar',\r\n          label: 'Savings',\r\n          backgroundColor: '#4eca9f',\r\n          data: [this.breakdown.debt]\r\n      }, {\r\n        type: 'bar',\r\n        label: 'Available',\r\n        backgroundColor: '#00000020',\r\n        data: [this.availableBudget]\r\n    }]}\r\n  }\r\n\r\n  submit()\r\n  {\r\n    this.loading = true;\r\n    var post: Budget[] = []\r\n    this.incomes.forEach((obj) =>\r\n    {\r\n      post.push({category: obj.category_id, \r\n      user_category_budget_estimated_amount: Math.round(obj.amount),\r\n    user_category_budget_altered_amount: Math.round(obj.amount)});\r\n    })\r\n    this.expenses.forEach((obj) =>\r\n      {\r\n        post.push({category: obj.category_id, \r\n          user_category_budget_estimated_amount: Math.round(obj.amount),\r\n        user_category_budget_altered_amount: Math.round(obj.amount)});\r\n      })\r\n    \r\n    this.budServ.setInitialBudget(post).subscribe((val) =>\r\n    {\r\n      if (val != \"error\")\r\n      {\r\n        this.router.navigate(['main-page'], {state: {newUser: true}})\r\n      }\r\n    })\r\n  }\r\n\r\n  makeRecommendations(){\r\n    this.wantsRecommend = this.totalIncome *this.dat.want;\r\n    this.needsRecommend = this.totalIncome *this.dat.need;\r\n    this.debtRecommend = this.totalIncome *this.dat.saving;\r\n\r\n    this.actualWantsPercent = this.breakdown.want/this.totalIncome\r\n    this.actualNeedsPercent = this.breakdown.need/this.totalIncome\r\n    this.actualDebtPercent = this.breakdown.debt/this.totalIncome\r\n\r\n    if(this.actualWantsPercent>this.dat.want) {\r\n      this.overBudget = true;\r\n      this.errorCategory = \"wants\"\r\n      this.errorPercent = (this.actualWantsPercent-this.dat.want) *100;\r\n      this.errorValue = this.breakdown.want;\r\n      this.errorDifference = this.breakdown.want-this.wantsRecommend;\r\n    } else if(this.actualNeedsPercent>this.dat.need) {\r\n      this.overBudget = true;\r\n      this.errorCategory = \"needs\"\r\n      this.errorPercent = (this.actualNeedsPercent - this.dat.need)*100;\r\n      this.errorValue = this.breakdown.need;\r\n      this.errorDifference = this.breakdown.need-this.needsRecommend;\r\n    } else if(this.actualDebtPercent>this.dat.saving) {\r\n      this.overBudget = true;\r\n      this.errorCategory = \"savings\"\r\n      this.errorPercent = (this.actualDebtPercent-this.dat.saving) *100;\r\n      this.errorValue = this.breakdown.debt;\r\n      this.errorDifference = this.breakdown.debt-this.debtRecommend;\r\n    }\r\n\r\n  }\r\n\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n\r\n","<div class=\"panel\">\r\n    <h1>Understanding Your Budget</h1>\r\n    <p style=\"font-weight: bolder; text-align: center;\">Use the sliders to adjust your budget. We recommend your budget follow the {{this.dat.need * 100 | number:'1.0-0'}}-{{this.dat.want * 100| number:'1.0-0'}}-{{this.dat.saving * 100| number:'1.0-0'}} Rule</p>\r\n    <p-chart #chart id=\"chart\" type=\"bar\" [data]=\"stackedData\" [options]=\"stackedOptions\" height=\"100px\" style=\"text-align: center; margin-left: -200px\"></p-chart>\r\n    <p style=\"margin-top: -10px\">Total: {{totalExpenses | currency}}/<span style=\"font-weight: bold;\">{{totalIncome | currency}}</span></p>\r\n    <p-dropdown [options]=\"categories\" [(ngModel)]=selectedCategory [showClear]=\"true\" [placeholder]=\"'Select a Category'\" (onChange)=\"onChange()\"></p-dropdown>\r\n    <div *ngFor=\"let cat of expenses\">\r\n        <div *ngIf=\"cat.visible\">\r\n            <p style=\"color: #003486; text-align: left; font-weight: bold;\">{{cat.categoryTitle}}: <span style=\"font-weight: lighter;\">{{cat.amount | currency}}</span></p>\r\n            <p-slider [(ngModel)]=cat.amount [min]=\"0\" [max]=cat.max [animate]=\"true\" [step]=\"5\" (onSlideEnd)=\"update($event)\"></p-slider>\r\n        </div>\r\n    </div>\r\n    <button pButton style=\"margin-left: 2.5em; margin-top: 3em; width: 88%\" type=\"submit\" label='Submit Final Budget' (click)=\"submit()\"></button>\r\n    <p-dialog header=\"Over Budget!\" [(visible)]=\"overBudget\">\r\n        <h3>It looks like you are {{getErrPerc(errorPercent)}}% over budget in the {{errorCategory}} category.</h3>\r\n        <h3>We recommend you reduce your budget in this category by {{(getErrPerc(errorDifference)) | currency}}.</h3>\r\n\r\n    </p-dialog>\r\n\r\n    <p-progressSpinner *ngIf=\"loading\"></p-progressSpinner>\r\n    \r\n</div>\r\n","import { CurrencyPipe, PercentPipe } from '@angular/common';\r\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { RouteConfigLoadEnd } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { ColorService } from 'src/app/services/color.service';\r\nimport { newBudgetPrompt } from './../../../models/newBudgetPrompt';\r\nimport {Chart, ChartItem} from 'chart.js';\r\n\r\n@Component({\r\n  selector: 'app-budget-advisor',\r\n  templateUrl: './budget-advisor.component.html',\r\n  styleUrls: ['./budget-advisor.component.scss', './../../../widget/basic-widget/basic-widget.component.scss']\r\n})\r\nexport class BudgetAdvisorComponent implements OnInit {\r\n  data: any;\r\n  data2: any;\r\n  options: any;\r\n  options2: any;\r\n  load: boolean = false;\r\n  displayType: string;\r\n  needs: newBudgetPrompt[] = [];\r\n  wantIcons: any;\r\n  needIcons: any;\r\n  debtIcons: any;\r\n  wants: newBudgetPrompt[] = [];\r\n  debt: newBudgetPrompt[] = [];\r\n  displayItems: newBudgetPrompt[] = [];\r\n  title = '';\r\n\r\n  @Output() pageForward  = new EventEmitter();\r\n\r\n  @Input() dat: any;\r\n\r\n  nextPage() {\r\n\r\n      this.pageForward.emit();\r\n   \r\n\r\n  }\r\n\r\n  \r\n  displayNeeds = false;\r\n\r\n  constructor(public cp: CurrencyPipe, private colServ: ColorService, private cs: CategoryService, private pp: PercentPipe) { \r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   \r\n    console.log(\"Breakdown: \" + this.dat)\r\n    this.data = {\r\n        labels: ['Needs', 'Wants', 'Savings'],\r\n        datasets: [\r\n            {\r\n                data: [(this.dat.need * 100), (this.dat.want * 100), (this.dat.saving * 100)],\r\n                backgroundColor: [\r\n                    \"#003486\",\r\n                    \"#4ec5ca\",\r\n                    \"#4eca9f\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#00348680\",\r\n                    \"#4ec5ca80\",\r\n                    \"#4eca9f80\"\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n\r\n    let labels = ['Housing', 'Transportation', 'Food/Grocery Essential', 'Medical', 'Utilities', 'Debt Payment',\r\n    'Insurance', 'Lifestyle Essential', 'Pet', 'Tax Payment', 'Miscellaneous Expense Essential']\r\n    let yValues = [this.dat['Housing'].amount, this.dat['Transportation'].amount,\r\n    this.dat['Food/Grocery Essential'].amount, this.dat['Medical'].amount, \r\n  this.dat['Utilities'].amount, this.dat['Debt Payment'].amount,\r\nthis.dat['Insurance'].amount, this.dat['Lifestyle Essential'].amount,\r\nthis.dat['Pet'].amount, this.dat['Tax Payment'].amount, this.dat['Miscellaneous Expense Essential'].amount]\r\n\r\n    this.data2 = {\r\n      labels: labels,\r\n      datasets: [\r\n          {\r\n              data: yValues,\r\n      backgroundColor: this.colServ.configureDefaultColors(yValues),\r\n    hoverBackgroundColor: this.colServ.configureDefaultColors(yValues)\r\n    }\r\n      ]\r\n  };\r\n\r\n    let cp = this.cp\r\n    let pp = this.pp\r\n    let dat = this.dat\r\n\r\n    this.options2 = {\r\n\r\n      plugins: {\r\n        tooltip: {\r\n          enabled: true,\r\n          titleFont: \r\n          {\r\n            size: 30\r\n          },\r\n          bodyFont: {\r\n            size: 30\r\n          },\r\n          callbacks: {\r\n              label: function(context) {\r\n                  let lab = labels[context.dataset.index]\r\n                  let val: number = yValues[context.dataset.index]\r\n                  return [context.label, \"Amount: \" + cp.transform(context.raw), \r\n                  \"Percentage: \" + pp.transform(dat[context.label].percen)] \r\n              }\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    this.options = {\r\n      plugins: {\r\n        datalabels: { display: false },\r\n      },  \r\n      responsive: false,\r\n      maintainAspectRatio: false\r\n    };\r\n\r\n    this.wantIcons ={\r\n      'Restaurants': {icon: '../../../../assets/icons/budget-icons/restaraunts.png', categoryTitle: 'Restaurants',  amount: 0, type: 'Expense'},\r\n      'Entertainment': {icon: '../../../../assets/icons/budget-icons/entertainment.png', categoryTitle: 'Entertainment',  amount: 0, type: 'Expense'},\r\n      'Lifestyle Non-Essential': {icon: '../../../../assets/icons/budget-icons/clothing.png', categoryTitle: 'Clothing',  amount: 0, type: 'Expense'},\r\n      'Furnishings': {icon: '../../../../assets/icons/budget-icons/furnishings.png', categoryTitle: 'Furnishings',  amount: 0, type: 'Expense'},\r\n      'Food/Grocery Non-Essential': {icon: '../../../../assets/icons/budget-icons/non-essential-groceries.png', categoryTitle: 'Non-Essential Groceries',  amount: 0, type: 'Expense'},\r\n      'Gift': {icon: '../../../../assets/icons/budget-icons/gift.png', categoryTitle: 'Gifts',  amount: 0, type: 'Expense'},\r\n      'Miscellaneous Expense Non-Essential': {icon: '../../../../assets/icons/budget-icons/misc-income.png', categoryTitle: 'Miscellaneous Expense',  amount: 0, type: 'Expense'},\r\n  \r\n     }\r\n    this.debtIcons = {\r\n      'Investment/Savings': {icon: '../../../../assets/icons/budget-icons/investment.png', categoryTitle: 'Investment/Savings',  amount: 0, type: 'Expense'},\r\n    };\r\n    this.needIcons = {\r\n      'Tax Payment': {icon: '../../../../assets/icons/budget-icons/tax-payment.png', categoryTitle: 'Tax Payment', amount: 0, type: 'Expense'},\r\n      'Debt Payment': {icon: '../../../../assets/icons/budget-icons/tax-payment.png', categoryTitle: 'Tax Payment', amount: 0, type: 'Expense'},\r\n      'Utilities': {icon: '../../../../assets/icons/budget-icons/utilities.png', categoryTitle: 'Utilities',  amount: 0, type: 'Expense'},\r\n      'Insurance': {icon: '../../../../assets/icons/budget-icons/insurance.png', categoryTitle: 'Insurance',  amount: 0, type: 'Expense'},\r\n      'Medical': {icon: '../../../../assets/icons/budget-icons/medical.png', categoryTitle: 'Medical',  amount: 0, type: 'Expense'},\r\n      'Pet': {icon: '../../../../assets/icons/budget-icons/pet.png', categoryTitle: 'Pets',  amount: 0, type: 'Expense'},\r\n      'Lifestyle Essential': {icon: '../../../../assets/icons/budget-icons/clothing.png', categoryTitle: 'Clothing',  amount: 0, type: 'Expense'},\r\n      'Housing': {icon: '../../../../assets/icons/budget-icons/housing.png', categoryTitle: 'Housing',  amount: 0, type: 'Expense'},\r\n      'Transportation': {icon: '../../../../assets/icons/budget-icons/transportation.png', categoryTitle: 'Transportation',  amount: 0, type: 'Expense'},\r\n      'Food/Grocery Essential': {icon: '../../../../assets/icons/budget-icons/essential-groceries.png', categoryTitle: 'Essential Groceries',  amount: 0, type: 'Expense'},\r\n      'Miscellaneous Expense Essential': {icon: '../../../../assets/icons/budget-icons/misc-income.png', categoryTitle: 'Miscellaneous Expense',  amount: 0, type: 'Expense'},\r\n    };\r\n\r\n    this.wants = this.cs.expenseCats.map(obj => ({...obj, visible: true, max: 0, amount: 0, category: obj.category_type, categoryTitle: obj.category_name})).filter(obj => obj.category_type == \"want\")\r\n      .map(obj => ({...obj, icon: this.wantIcons.hasOwnProperty(obj.category_name) ? this.wantIcons[obj.category_name].icon : undefined}));\r\n    this.debt = this.cs.expenseCats.map(obj => ({...obj, visible: true, max: 0, amount: 0, category: obj.category_type, categoryTitle: obj.category_name})).filter(obj => obj.category_type == \"saving\")\r\n      .map(obj => ({...obj, icon: this.debtIcons.hasOwnProperty(obj.category_name) ? this.debtIcons[obj.category_name].icon : undefined}));\r\n    this.needs = this.cs.expenseCats.map(obj => ({...obj, visible: true, max: 0, \r\n        target: this.dat.hasOwnProperty(obj.category_name) ? this.dat[obj.category_name].amount : undefined, \r\n        break: this.dat.hasOwnProperty(obj.category_name) ? this.dat[obj.category_name].percen : undefined,\r\n         amount: 0, category: obj.category_type, categoryTitle: obj.category_name})).filter(obj => obj.category_type == \"need\")\r\n         .map(obj => ({...obj, icon: this.needIcons.hasOwnProperty(obj.category_name) ? this.needIcons[obj.category_name].icon : undefined}));\r\n\r\n    \r\n\r\n    \r\n\r\n    this.load = true;\r\n\r\n  }\r\n\r\n  setDisplay(selected) {\r\n    this.displayItems = selected;\r\n    if (this.displayItems == this.needs) {\r\n      this.displayType = \"need\"\r\n      this.title = this.pp.transform(this.dat.need) + ' Needs';\r\n    } else if (this.displayItems == this.debt) {\r\n      this.displayType = \"saving\"\r\n      this.title = this.pp.transform(this.dat.saving) + \" Savings\";\r\n    } else  if (this.displayItems == this.wants) {\r\n      this.displayType = \"want\"\r\n      this.title = this.pp.transform(this.dat.want) + ' Wants';\r\n    } else {\r\n      this.title = 'Error'\r\n    }\r\n    this.displayNeeds = true;\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"load\" class=\"panel\">\r\n    <h1>Understanding Your Budget</h1>\r\n    <br>\r\n    <div>\r\n        <h3>Budget Buddy recommends the {{this.dat.need | percent}}, {{this.dat.want | percent}}, {{this.dat.saving | percent}} rule.</h3>\r\n        <p-chart type=\"doughnut\" [data]=\"data\"  [style]=\"{'width': '30%'}\" [options]=\"options\"></p-chart>\r\n        <br>\r\n        <h3>Click on the categories below to see our recommendations for each.</h3>\r\n        <div class=\"card-area\">\r\n            <div class=\"card\" (click)=\"setDisplay(needs)\">\r\n                <h1>{{this.dat.need | percent}} <br> Needs</h1>\r\n            </div>\r\n            <div class=\"card\" (click)=\"this.setDisplay(wants)\">\r\n                <h1>{{this.dat.want | percent}} <br> Wants</h1>\r\n            </div>\r\n            <div class=\"card\" (click)=\"this.setDisplay(debt)\">\r\n                <h1>{{this.dat.saving | percent}} <br> Savings</h1>\r\n            </div>  \r\n        </div>\r\n    </div>\r\n    <br>\r\n    <div style=\"display:inline-block; text-align: center; justify-content: center; width: 100%\">\r\n    <br>\r\n        <p-button style=\"text-align: center\" (onClick)=\"this.nextPage()\">Got it!</p-button>\r\n    </div>\r\n    <p-dialog header=\"{{title}}\" [(visible)]=\"displayNeeds\">\r\n        <div *ngIf=\"displayType != 'need'\">\r\n            <div *ngFor=\"let item of displayItems\" style=\"display: block; width: 100%; justify-content: left; height: 2vw; margin-bottom: 3vh\">\r\n                <div style=\"display: inline-flex;\">\r\n                    <img [src]=\"item.icon\" style=\"width: 2vw; height: 2vw; margin-right: 2em\">\r\n                    <p>{{item.categoryTitle}} <span *ngIf=\"item.category == 'need'\">{{\" (Target Percentage: \"}} {{item.break | percent}})</span> </p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"displayType == 'need'\">\r\n            <h3>The Budget Buddy recommends the following breakdown for your spending on needs.  Hover over each slice to see the \r\n                corresponding amount and percentage for the selected category.\r\n            </h3>\r\n            <p-chart type=\"pie\" [data]=\"data2\"  [style]=\"{'width': '20%'}\" [options]=\"options2\"></p-chart>\r\n        </div>\r\n        \r\n        \r\n    </p-dialog>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-budget-algorithm',\r\n  templateUrl: './budget-algorithm.component.html',\r\n  styleUrls: ['./budget-algorithm.component.scss']\r\n})\r\nexport class BudgetAlgorithmComponent implements OnInit {\r\n\r\n  userAttributes: SelectItem<boolean>[];\r\n  load: boolean = false;\r\n  answers: SelectItem<boolean>[];\r\n  income: number;\r\n\r\n  @Output() pageForward  = new EventEmitter();\r\n\r\n  @Input() monthlyIncome: number;\r\n\r\n  nextPage(pack: any) {\r\n    this.pageForward.emit(pack);\r\n  }\r\n\r\n  \r\n  constructor() { \r\n\r\n    this.answers = [{label: \"Yes\", value: true}, {label: \"No\", value: false}]\r\n    this.userAttributes = [\r\n      {label: \"Are you independent?\", value: undefined},\r\n      {label: \"Are you retired?\", value: undefined},\r\n      {label: \"Are you married?\", value: undefined},\r\n      {label: \"Do you have multiple incomes?\", value: undefined},\r\n      {label: \"Do you have children?\", value: undefined},\r\n      {label: \"Do you live in a city?\", value: undefined},\r\n      {label: \"Do you own a pet?\", value: undefined},\r\n      {label: \"Do you receive a tax refund?\", value: undefined}\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.income = this.monthlyIncome * 12\r\n  }\r\n\r\n  runSpendingRec()\r\n  {\r\n    // Test Values\r\n    // Yearly Income (Put total from front end here)\r\n    let income = this.income\r\n\r\n    // category starts       \r\n    let need = 50\r\n    let want = 30\r\n    let saving = 20\r\n\r\n    // user characteristics (Have user select these and update their data upon submition)\r\n    let independent = this.userAttributes[0].value\r\n    let retired = this.userAttributes[1].value\r\n    let married = this.userAttributes[2].value\r\n    let multipleIncomes = this.userAttributes[3].value\r\n    let children = this.userAttributes[4].value\r\n    let city = this.userAttributes[5].value\r\n    let pet = this.userAttributes[6].value\r\n// tax refund\r\n    let noRefund = this.userAttributes[7].value\r\n    \r\n    // categories regular (base values are independent rural)\r\n    let housing = 30\r\n    let transportation = 16.5\r\n    let foodGroceryEssential = 12.5\r\n    let medical = 11.5\r\n    let utilities = 7.5\r\n    let debtPayment = 5\r\n    let insurance = 4\r\n    let lifestyleEssential = 3\r\n    let petCost = 0\r\n    let taxPayment = 0\r\n    let miscellaneousExpenseEssential = 10\r\n    let housing2 = 0.0\r\n    let transportation2 = 0.0\r\n    let foodGroceryEssential2 = 0.0\r\n    let medical2 = 0.0\r\n    let utilities2 = 0.0\r\n    let debtPayment2 = 0.0\r\n    let insurance2 = 0.0\r\n    let lifestyleEssential2 = 0.0\r\n    let petCost2 = 0.0\r\n    let taxPayment2 = 0.0\r\n    let miscellaneousExpenseEssential2 = 0.0\r\n    //        //categories retired\r\n    //        housing = 30;\r\n    //        transportation = 9.5;\r\n    //        foodGroceryEssential = 9.5;\r\n    //        medical = 30;\r\n    //        utilities = 7.5;\r\n    //        debtPayment = 2.5;\r\n    //        insurance = 4;\r\n    //        lifestyleEssential = 3;\r\n    //        petCost = 0;\r\n    //        taxPayment = 0;\r\n    //        miscellaneousExpenseEssential = 4;\r\n\r\n    //        //categories city\r\n    //        housing = 38.25;\r\n    //        transportation = 8.25;\r\n    //        foodGroceryEssential = 12.5;\r\n    //        medical = 11.5;\r\n    //        utilities = 7.5;\r\n    //        debtPayment = 5;\r\n    //        insurance = 4;\r\n    //        lifestyleEssential = 3;\r\n    //        petCost = 0;\r\n    //        taxPayment = 0;\r\n    //        miscellaneousExpenseEssential = 10;\r\n\r\n    //        //categories dependent\r\n    //        housing = 0;\r\n    //        transportation = 16.5;\r\n    //        foodGroceryEssential = 0;\r\n    //        medical = 0;\r\n    //        utilities = 2.5;\r\n    //        debtPayment = 5;\r\n    //        insurance = 0;\r\n    //        lifestyleEssential = 0;\r\n    //        petCost = 0;\r\n    //        taxPayment = 0;\r\n    //        miscellaneousExpenseEssential = 76;\r\n\r\n    // Retired\r\n    if (retired) {\r\n        need = 90\r\n        want = 0\r\n        saving = 10\r\n        // category spending\r\n        housing = 30\r\n        transportation = 9.5\r\n        foodGroceryEssential = 9.5\r\n        medical = 30\r\n        utilities = 7.5\r\n        debtPayment = 2.5\r\n        insurance = 4\r\n        lifestyleEssential = 3\r\n        petCost = 0\r\n        taxPayment = 0\r\n        miscellaneousExpenseEssential = 4\r\n        // minor adjustments\r\n        if (city){\r\n            housing = 38.25\r\n            transportation = 4.75\r\n            miscellaneousExpenseEssential = 0.5\r\n        }\r\n        if (pet){\r\n            petCost = 0.5\r\n            miscellaneousExpenseEssential = miscellaneousExpenseEssential - 0.5\r\n        }\r\n        // Retired Married\r\n        if (married){\r\n            // Retired Married Multiple Incomes\r\n            if (multipleIncomes){\r\n                // Retired Married Multiple Incomes City\r\n                if (city){\r\n                    need = 95\r\n                    want = 0\r\n                    saving = 5\r\n                }\r\n            }\r\n            else {\r\n                need = 95\r\n                want = 0\r\n                saving = 5\r\n                // Retired Married One Income No Children City\r\n                if (city){\r\n                    need = 100\r\n                    want = 0\r\n                    saving = 0\r\n                }\r\n        else{\r\n            need = 90\r\n            want = 0\r\n            saving = 10\r\n            // Retired Not Married City\r\n            if (city){\r\n                need = 95\r\n                want = 0\r\n                saving = 5\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else{\r\n        // Indepentent\r\n        if (independent){\r\n            if (city){\r\n                housing = 38.25\r\n                transportation = 8.25\r\n            }\r\n            if (pet){\r\n                petCost = 0.5\r\n                miscellaneousExpenseEssential = miscellaneousExpenseEssential - 0.5\r\n            }\r\n            if (noRefund){\r\n                taxPayment = 2\r\n                miscellaneousExpenseEssential = miscellaneousExpenseEssential - 2\r\n            }\r\n            // Independent Married\r\n            if (married){\r\n                // Independent Married Multiple Incomes\r\n                if (multipleIncomes){\r\n                    // Independent Married Multiple Incomes Children\r\n                    if (children){\r\n                        need = 65\r\n                        want = 15\r\n                        saving = 20\r\n                        // Independent Married Multiple Incomes Children City\r\n                        if (city){\r\n                            need = 70\r\n                            want = 10\r\n                            saving = 20\r\n                        }\r\n                    else{\r\n                        if (city){\r\n                            need = 55\r\n                            want = 30\r\n                            saving = 20\r\n                        }\r\n                    }\r\n                  }\r\n                }\r\n                else{\r\n                    need = 65\r\n                    want = 15\r\n                    saving = 20\r\n                    // Independent Married Single Income Children\r\n                    if (children){\r\n                        need = 80\r\n                        want = 5\r\n                        saving = 15\r\n                        // Independent Married Single Income Children City\r\n                        if (city){\r\n                            need = 85\r\n                            want = 5\r\n                            saving = 10\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Independent Married Single Income City\r\n                        if (city){\r\n                            need = 70\r\n                            want = 10\r\n                            saving = 20\r\n                        }\r\n                    }\r\n                  }\r\n                }\r\n            else{\r\n                // Single Children\r\n                if (children){\r\n                    need = 65\r\n                    want = 15\r\n                    saving = 20\r\n                \r\n                    // Single Children City\r\n                    if (city){\r\n                        need = 70\r\n                        want = 10\r\n                        saving = 20\r\n                    }\r\n                else{\r\n                    // Single City\r\n                    if (city){\r\n                        need = 55\r\n                        want = 25\r\n                        saving = 20\r\n                      }\r\n                    }     \r\n                }       \r\n        else{\r\n            need = 10\r\n            want = 30\r\n            saving = 60\r\n            housing = 0\r\n            transportation = 16.5\r\n            foodGroceryEssential = 0\r\n            medical = 0\r\n            utilities = 2.5\r\n            debtPayment = 5\r\n            insurance = 0\r\n            lifestyleEssential = 0\r\n            petCost = 0\r\n            taxPayment = 0\r\n            miscellaneousExpenseEssential = 76\r\n        \r\n            // Not Independent City\r\n            if (city){\r\n                need = 15\r\n                want = 30\r\n                saving = 55\r\n                transportation = 8.25\r\n                miscellaneousExpenseEssential = 84.25\r\n            }\r\n            if (pet){\r\n                petCost = 0.5\r\n                miscellaneousExpenseEssential = miscellaneousExpenseEssential - 0.5\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    // VALUES THAT ARE REPORTED TO USER\r\n    want = want * 0.01\r\n    need = need * 0.01\r\n    saving = saving * 0.01\r\n    income = income / 12\r\n    housing2 = income * need * (housing * 0.01)\r\n    transportation2 = income * need * (transportation * 0.01)\r\n    foodGroceryEssential2 = income * need * (foodGroceryEssential * 0.01)\r\n    medical2 = income * need * (medical * 0.01)\r\n    utilities2 = income * need * (utilities * 0.01)\r\n    debtPayment2 = income * need * (debtPayment * 0.01)\r\n    insurance2 = income * need * (insurance * 0.01)\r\n    lifestyleEssential2 = income * need * (lifestyleEssential * 0.01)\r\n    petCost2 = income * need * (petCost * 0.01)\r\n    taxPayment2 = income * need * (taxPayment * 0.01)\r\n    miscellaneousExpenseEssential2 = income * need * (miscellaneousExpenseEssential * 0.01)\r\n\r\n    this.nextPage({\r\n        want: want,\r\n        need: need,\r\n        saving: saving,\r\n        income: income,\r\n        \"Housing\": {amount: housing2,\r\n                  percen: housing * 0.01,\r\n                  cat: \"Housing\"},\r\n        \"Transportation\": {amount: transportation2, percen: transportation * 0.01, cat: \"Transportation\"},\r\n        \"Food/Grocery Essential\": {amount: foodGroceryEssential2, percen: foodGroceryEssential * 0.01, cat: \"Food/Grocery Essential\"},\r\n        \"Medical\": {amount: medical2, percen: medical * 0.01, cat: \"Medical\"},\r\n        \"Utilities\": {amount: utilities2, percen: utilities * 0.01, cat: \"Utilities\"},\r\n        \"Debt Payment\": {amount: debtPayment2, percen: debtPayment * 0.01, cat: \"Debt Payment\"},\r\n        \"Insurance\": {amount: insurance2, percen: insurance * 0.01, cat: \"Insurance\"},\r\n        \"Lifestyle Essential\": {amount: lifestyleEssential2, percen: lifestyleEssential * 0.01, cat: \"Lifestyle Essential\"},\r\n        \"Pet\": {amount: petCost2, percen: petCost * 0.01, cat: \"Pet\"},\r\n        \"Tax Payment\": {amount: taxPayment2, percen: taxPayment * 0.01, cat: \"Tax Payment\"},\r\n        \"Miscellaneous Expense Essential\": {amount: miscellaneousExpenseEssential2, percen: miscellaneousExpenseEssential * 0.01, cat: \"Miscellaneous Expense Essential\"}\r\n    })\r\n\r\n    /*\r\n    console.log(\"BudgetReport\")\r\n    console.log(\"\")\r\n    console.log(\"Monthly Income: $\" + income)\r\n    console.log(\"\")\r\n    console.log(\"Indepentent: \" + independent + \" /Retired: \" + retired + \" /Married: \" + married + \" /Multiple Incomes: \" + multipleIncomes + \" /Children: \" + children + \" /City: \" + city + \" /Pet: \" + pet + \" /Tax Payment: \" + noRefund)\r\n    console.log(\"\")\r\n    console.log(\"Needs: \" + (need * 100) + \"%\")\r\n    console.log(\"Wants: \" + (want * 100) + \"%\")\r\n    console.log(\"Savings: \" + (saving * 100) + \"%\")\r\n    console.log(\"\")\r\n    console.log(\"Housing Percent: \" + housing + \"%\")\r\n    console.log(\"Transportation Percent: \" + transportation + \"%\")\r\n    console.log(\"Food/Grocery Essential Percent: \" + foodGroceryEssential + \"%\")\r\n    console.log(\"Medical Percent: \" + medical + \"%\")\r\n    console.log(\"Utilities Percent: \" + utilities + \"%\")\r\n    console.log(\"Debt Payment Percent: \" + debtPayment + \"%\")\r\n    console.log(\"Insurance Percent: \" + insurance + \"%\")\r\n    console.log(\"Lifestyle Essential Percent: \" + lifestyleEssential + \"%\")\r\n    console.log(\"Pet Percent: \" + petCost + \"%\")\r\n    console.log(\"Tax Payment Percent: \" + taxPayment + \"%\")\r\n    console.log(\"Miscellaneous Essential Percent: \" + miscellaneousExpenseEssential + \"%\")\r\n    console.log(\"\")\r\n    console.log(\"Total Percent: \" + (housing + transportation + foodGroceryEssential + medical + utilities + debtPayment + insurance + lifestyleEssential + petCost + taxPayment + miscellaneousExpenseEssential) + \"%\")\r\n    console.log(\"\")\r\n    console.log(\"Housing Cost: $\" + housing2)\r\n    console.log(\"Transportation Cost: $\" + transportation2)\r\n    console.log(\"Food/Grocery Essential Cost: $\" + foodGroceryEssential2)\r\n    console.log(\"Medical Cost: $\" + medical2)\r\n    console.log(\"Utilities Cost: $\" + utilities2)\r\n    console.log(\"Debt Payment Cost: $\" + debtPayment2)\r\n    console.log(\"Insurance Cost: $\" + insurance2)\r\n    console.log(\"Lifestyle Essential Cost: $\" + lifestyleEssential2)\r\n    console.log(\"Pet Cost: $\" + petCost2)\r\n    console.log(\"Tax Payment Cost: $\" + taxPayment2)\r\n    console.log(\"Miscellaneous Essential Cost: $\" + miscellaneousExpenseEssential2)\r\n    console.log(\"\")\r\n    */\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <h1>Optimizing Your Budget</h1>\r\n    <br>\r\n    <div style=\"display: contents\" *ngIf=\"!load\">\r\n        <h3>The Budget Buddy can provide personalized budget recommendations.</h3>\r\n        <h3>Please answer the questions below to get started.</h3>\r\n        <br>\r\n        <div class=\"questions grid\">\r\n           \r\n            <div *ngFor=\"let item of userAttributes; let i=index\" class=\"col-12 custom2\">\r\n             \r\n                <label class=\"label\" >{{item.label}}</label>\r\n                <p-selectButton class=\"custom\" [options]=\"answers\" [(ngModel)]=\"item.value\" optionLabel=\"label\" optionValue=\"value\"></p-selectButton>\r\n           \r\n            </div>\r\n            \r\n            <br>\r\n        </div>\r\n       \r\n        <div style=\"display:inline-block; text-align: center; justify-content: center; width: 100%\">\r\n        <br>\r\n        <br>\r\n            <p-button style=\"text-align: center\" (onClick)=\"runSpendingRec(); load = true;\">Submit</p-button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { BudgetBreakdown } from './../../../models/budgetBreakdown';\r\nimport { newBudgetPrompt } from './../../../models/newBudgetPrompt';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Form, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Category } from 'src/app/models/category';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport {SelectItem} from 'primeng/api';\r\nimport { WidgetService } from 'src/app/widget/widget.service';\r\nimport { trigger, transition, animate, style } from '@angular/animations'\r\nimport { delay, first, flatMap, map, mergeMap } from 'rxjs/operators';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport { Budget } from 'src/app/models/budget';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n\r\n@Component({\r\n  selector: 'app-budget-panel',\r\n  templateUrl: './budget-panel.component.html',\r\n  styleUrls: ['./budget-panel.component.scss'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({transform: 'translateX(20%)',\r\n      opacity: 0}),\r\n        animate('600ms ease-in', style({transform: 'translateX(0%)', opacity: 1}))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('600ms ease-in', style({transform: 'translateX(-20%)', opacity: 0}))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BudgetPanelComponent implements OnInit {\r\n  \r\n  prompts: newBudgetPrompt[];\r\n  catOptions: Category[];\r\n  runSpenRecAlg: boolean = true;\r\n  advisorPackage: any;\r\n  form: FormArray\r\n  currentPanel: any;\r\n  exisBudgets: Budget[]\r\n  panelNumber: number = 0;\r\n  visible=true;\r\n  val = 0;\r\n  animationDirection: string = \"forward\";\r\n  totalIncome: number = 0;\r\n  totalExpenses: number = 0;\r\n  availableBudget: number = 0;\r\n  advisorVisible: boolean;\r\n  wantsValue: number;\r\n  debtValue: number;\r\n  needsValue: number;\r\n  panels: string[];\r\n  income: any[];\r\n  expenses: any[];\r\n  \r\n\r\n  constructor(private ws: WidgetService, private fb: FormBuilder,\r\n    private bs: BudgetService,\r\n    private as: AuthService,\r\n    private cs: CategoryService,\r\n    private ms: MessageService) {\r\n\r\n      \r\n\r\n  this.panels = [\r\n    'Income', 'Optimizer', 'Advisor', 'Expenses', 'Finalization'\r\n  ]\r\n\r\n  this.income = this.cs.incomeCats.map(obj => ({...obj, amount: 0, category: obj.category_type, categoryTitle: obj.category_name}));\r\n  this.expenses = this.cs.expenseCats.map(obj => ({...obj, amount: 0, category: obj.category_type, categoryTitle: obj.category_name}));\r\n  /*\r\n\r\n  this.income = [\r\n    {icon: '../../../../assets/icons/budget-icons/job-income.png', categoryTitle: 'Job Income',  amount: 0, type: 'Income'},\r\n    {icon: '../../../../assets/icons/budget-icons/gift.png', categoryTitle: 'Received Gift',  amount: 0, type: 'Income'},\r\n    {icon: '../../../../assets/icons/budget-icons/interest.png', categoryTitle: 'Interest',  amount: 0, type: 'Income'},\r\n    {icon: '../../../../assets/icons/budget-icons/gov-payment.png', categoryTitle: 'Government Payment',  amount: 0, type: 'Income'},\r\n    {icon: '../../../../assets/icons/budget-icons/tax-refund.png', categoryTitle: 'Tax Refund',  amount: 0, type: 'Income'},\r\n    {icon: '../../../../assets/icons/budget-icons/misc-income.png', categoryTitle: 'Miscellaneous Income',  amount: 0, type: 'Income'}\r\n  ]\r\n\r\n  this.expenses = [\r\n    {icon: '../../../../assets/icons/budget-icons/housing.png', categoryTitle: 'Housing',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/transportation.png', categoryTitle: 'Transportation',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/essential-groceries.png', categoryTitle: 'Essential Groceries',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/non-essential-groceries.png', categoryTitle: 'Non-Essential Groceries',  amount: 0, type: 'Expense'},\r\n      {icon: '../../../../assets/icons/budget-icons/utilities.png', categoryTitle: 'Utilities',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/insurance.png', categoryTitle: 'Insurance',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/medical.png', categoryTitle: 'Medical',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/investment.png', categoryTitle: 'Investment',  amount: 0, type: 'Expense', category: 'debt'},\r\n      {icon: '../../../../assets/icons/budget-icons/restaraunts.png', categoryTitle: 'Restaurants',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/entertainment.png', categoryTitle: 'Entertainment',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/clothing.png', categoryTitle: 'Clothing',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/gift.png', categoryTitle: 'Gifts',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/furnishings.png', categoryTitle: 'Furnishings',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/pet.png', categoryTitle: 'Pets',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/tax-payment.png', categoryTitle: 'Tax Payment', amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/misc-income.png', categoryTitle: 'Miscellaneous Expense',  amount: 0, type: 'Expense', category: 'debt'},\r\n  ]\r\n  */\r\n\r\n    \r\n  this.prompts = [\r\n    //toggle comments to show finalization page first\r\n      //{icon: 'null', categoryTitle: 'Advisor', amount: null},\r\n\r\n      //{icon: '../../../../assets/icons/budget-icons/help.png', categoryTitle: 'What\\'s Your Budget?', amount: null},\r\n      {icon: '../../../../assets/icons/budget-icons/job-income.png', categoryTitle: 'Job Income',  amount: 0, type: 'Income'},\r\n      //toggle for debugging\r\n      //{icon: '../../../../assets/icons/budget-icons/help.png', categoryTitle: 'Finalization', amount: null}, \r\n      {icon: '../../../../assets/icons/budget-icons/gift.png', categoryTitle: 'Received Gift',  amount: 0, type: 'Income'},\r\n      {icon: '../../../../assets/icons/budget-icons/interest.png', categoryTitle: 'Interest',  amount: 0, type: 'Income'},\r\n      {icon: '../../../../assets/icons/budget-icons/gov-payment.png', categoryTitle: 'Government Payment',  amount: 0, type: 'Income'},\r\n      {icon: '../../../../assets/icons/budget-icons/tax-refund.png', categoryTitle: 'Tax Refund',  amount: 0, type: 'Income'},\r\n      {icon: '../../../../assets/icons/budget-icons/misc-income.png', categoryTitle: 'Miscellaneous Income',  amount: 0, type: 'Income'},\r\n      {icon: '../../../../assets/icons/budget-icons/smile.png', categoryTitle: 'Halfway There!', amount: null},\r\n      {icon: '../../../../assets/icons/budget-icons/housing.png', categoryTitle: 'Housing',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/transportation.png', categoryTitle: 'Transportation',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/essential-groceries.png', categoryTitle: 'Essential Groceries',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/non-essential-groceries.png', categoryTitle: 'Non-Essential Groceries',  amount: 0, type: 'Expense'},\r\n      {icon: '../../../../assets/icons/budget-icons/utilities.png', categoryTitle: 'Utilities',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/insurance.png', categoryTitle: 'Insurance',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/medical.png', categoryTitle: 'Medical',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/investment.png', categoryTitle: 'Investment',  amount: 0, type: 'Expense', category: 'debt'},\r\n      {icon: '../../../../assets/icons/budget-icons/restaraunts.png', categoryTitle: 'Restaurants',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/entertainment.png', categoryTitle: 'Entertainment',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/clothing.png', categoryTitle: 'Clothing',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/gift.png', categoryTitle: 'Gifts',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/furnishings.png', categoryTitle: 'Furnishings',  amount: 0, type: 'Expense', category: 'want'},\r\n      {icon: '../../../../assets/icons/budget-icons/pet.png', categoryTitle: 'Pets',  amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/tax-payment.png', categoryTitle: 'Tax Payment', amount: 0, type: 'Expense', category: 'need'},\r\n      {icon: '../../../../assets/icons/budget-icons/misc-income.png', categoryTitle: 'Miscellaneous Expense',  amount: 0, type: 'Expense', category: 'debt'},\r\n  \r\n      //{icon: '../../../../assets/icons/budget-icons/help.png', categoryTitle: 'Finalization', amount: null},\r\n      //{icon: '../../../../assets/icons/budget-icons/thumbs-up.png', categoryTitle: 'All Done!', amount: null},\r\n    ]\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.currentPanel = this.panels[this.panelNumber];  \r\n    console.log(this.currentPanel)\r\n    this.advisorVisible = true;  \r\n  }\r\n\r\n  pageForward(){\r\n    this.panelNumber+=1;\r\n    this.currentPanel = this.panels[this.panelNumber];\r\n    \r\n    console.log(this.currentPanel)\r\n  }\r\n\r\n  pageForwardSpec(data: any)\r\n  {\r\n    this.advisorPackage = data;\r\n    console.log(\"To send to advisor: \", this.advisorPackage)\r\n    this.expenses.forEach((val) =>\r\n    {\r\n      if (val.category == \"need\")\r\n      {\r\n        val.amount = data[val.category_name].amount\r\n      }\r\n    })\r\n    setTimeout(() => this.pageForward(), 100);\r\n  }\r\n\r\n  pageForwardStep2(){\r\n    this.currentPanel = this.panels[this.panelNumber];\r\n    this.visible = true;\r\n  }\r\n\r\n  pageBackward(){\r\n    if(this.panelNumber>0){\r\n      this.animationDirection = \"backwards\";\r\n      this.visible = false;\r\n    }\r\n    \r\n  }\r\n\r\n  pageBackwardStep2(){\r\n    this.panelNumber--;\r\n    this.currentPanel = this.panels[this.panelNumber];\r\n    this.visible = true;\r\n  }\r\n\r\n  slideInOutStart(event) {\r\n\r\n  }\r\n  \r\n  slideInOutEnd(event) {\r\n    if (this.animationDirection == 'forward') {\r\n      this.pageForwardStep2();\r\n    } else {\r\n      this.pageBackwardStep2();\r\n    }\r\n  }\r\n\r\ngetBreakdown(): BudgetBreakdown {\r\n  return {want: this.wantsValue, need: this.needsValue, debt: this.debtValue};\r\n}\r\n\r\nrecalculate() {\r\n  this.wantsValue = 0;\r\n  this.debtValue = 0;\r\n  this.needsValue = 0;\r\n\r\n  this.totalIncome = this.income.reduce(function (accumulator, item) {\r\n    return accumulator + item.amount;\r\n  }, 0);\r\n  console.log(\"Total Income: \", this.totalIncome)\r\n\r\n  this.expenses.forEach(x => {\r\n      if(x.category == 'saving') {\r\n        this.debtValue += x.amount;\r\n      } else if (x.category == 'want'){\r\n        this.wantsValue += x.amount;\r\n\r\n      } else if (x.category == 'need'){\r\n        this.needsValue += x.amount;\r\n      }\r\n  });\r\n  this.totalExpenses = this.debtValue + this.wantsValue + this.needsValue;\r\n  this.availableBudget = this.totalIncome - this.totalExpenses;\r\n  console.log(\"Available Budget: \", this.availableBudget)\r\n}\r\n\r\nisNaN(num: number)\r\n{\r\n  return isNaN(num)\r\n}\r\n\r\n}","\r\n\r\n<div *ngIf=\"currentPanel == 'Optimizer'\" class=\"panel panel2\">\r\n    <app-budget-algorithm *ngIf=\"totalIncome && !isNaN(totalIncome)\"[monthlyIncome]=\"totalIncome\" (pageForward)=\"pageForwardSpec($event);\"></app-budget-algorithm>\r\n</div>\r\n\r\n<div [hidden]=\"!(currentPanel == 'Advisor' && advisorVisible)\">\r\n    <app-budget-advisor *ngIf=\"advisorPackage\" [dat]=\"advisorPackage\" (pageForward)=\"pageForward(); \"></app-budget-advisor>\r\n</div>\r\n<div *ngIf=\"currentPanel == 'Income'\" class=\"panel container\" style=\"padding:2em; height: 65vh;\">\r\n    \r\n    <div class=\"header\">\r\n        <h1>Income</h1> \r\n        <p>Please enter your expected monthly income from the following categories.</p>\r\n        <br>\r\n    </div>\r\n    <div class=\"subContainer\">\r\n        <div class=\"scroll\">\r\n            <div *ngFor=\"let item of income; let i=index\" >\r\n                <div *ngIf=\"i<10\" style=\"width: 40%; display: block\" class=\"column\">\r\n                    <h3>{{item.categoryTitle}}</h3>\r\n                    <p-inputNumber placeholder=\"$0.00\" mode=\"currency\" [(ngModel)]=\"item.amount\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                </div>\r\n            </div>\r\n            <div *ngFor=\"let item of income; let i=index\">\r\n                <div *ngIf=\"i>=10\" style=\"width: 40%; display: block\" class=\"column\">\r\n                    <h3>{{item.categoryTitle}}</h3>\r\n                    <p-inputNumber placeholder=\"$0.00\" mode=\"currency\" [(ngModel)]=\"item.amount\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button pButton style=\"margin-left: 2.5em; margin-top: 3em; width: 88%\" type=\"submit\" label='Track' (click)=\"recalculate(); pageForward()\"></button>\r\n</div>\r\n\r\n<div *ngIf=\"currentPanel == 'Expenses'\" class=\"panel container\" style=\"padding:2em; height: 75vh\">\r\n   \r\n        <div class=\"header\">\r\n            <h1>Expenses</h1> \r\n            <p>Please enter your expected monthly expenses from the following categories.</p>\r\n\r\n            <p>We've preloaded the recommended values for the need categories, but you are free to modify them as desired.</p>\r\n            <br>\r\n        </div>\r\n        <div class=\"subContainer2\">\r\n            <div class=\"scroll\">\r\n                <div *ngFor=\"let item of expenses; let i=index\">\r\n                    <div *ngIf=\"i<10\" style=\"width: 40%; display: block\" class=\"column\">\r\n                        <h3>{{item.categoryTitle}}</h3>\r\n                        <p-inputNumber placeholder=\"$0.00\" mode=\"currency\" [(ngModel)]=\"item.amount\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                    </div>\r\n                </div>\r\n                <div *ngFor=\"let item of expenses; let i=index\">\r\n                    <div *ngIf=\"i>=10\" style=\"width: 40%; display: block\" class=\"column\">\r\n                        <h3>{{item.categoryTitle}}</h3>\r\n                        <p-inputNumber placeholder=\"$0.00\" mode=\"currency\" [(ngModel)]=\"item.amount\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    <button pButton style=\"margin-left: 2.5em; margin-top: 3em; width: 88%\" type=\"submit\" label='Track' (click)=\"recalculate(); pageForward()\"></button>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"currentPanel =='Finalization' \" style=\"top:20vh\">\r\n    <app-budget-adjuster [prompts]=\"prompts\" [expenses]=\"expenses\" [incomes]=\"income\" [totalIncome]=\"totalIncome\" [totalExpenses]=\"totalExpenses\" \r\n    [dat]=\"advisorPackage\" [availableBudget]=\"availableBudget\" [breakdown]=\"getBreakdown()\"></app-budget-adjuster>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-budget',\r\n  templateUrl: './new-budget.component.html',\r\n  styleUrls: ['./new-budget.component.scss'],\r\n})\r\nexport class NewBudgetComponent implements OnInit {\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <app-budget-panel></app-budget-panel>\r\n</div>\r\n","import { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { WidgetModule } from '../widget/widget.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { MenuComponent } from './main-page/menu/menu.component';\r\nimport {MenuModule} from 'primeng/menu';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { NewBudgetComponent } from './budget-creator/new-budget/new-budget.component';\r\nimport { BudgetPanelComponent } from './budget-creator/budget-panel/budget-panel.component';\r\nimport { PrimengModule } from '../primeng/primeng.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport { BudgetAdvisorComponent } from './budget-creator/budget-advisor/budget-advisor.component';\r\nimport {ChartModule} from 'primeng/chart';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport { BudgetAdjusterComponent } from './budget-creator/budget-adjuster/budget-adjuster.component';\r\nimport {ListboxModule} from 'primeng/listbox';\r\nimport { BudgetAlgorithmComponent } from './budget-creator/budget-algorithm/budget-algorithm.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainPageComponent,\r\n    MenuComponent,\r\n    NewBudgetComponent,\r\n    BudgetPanelComponent,\r\n    BudgetAdvisorComponent,\r\n    BudgetAdjusterComponent,\r\n    BudgetAlgorithmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MenuModule,\r\n    ButtonModule,\r\n    RippleModule,\r\n    WidgetModule,\r\n    PrimengModule,\r\n    ReactiveFormsModule,\r\n    SliderModule,\r\n    FormsModule,\r\n    ChartModule,\r\n    DialogModule,\r\n    MultiSelectModule,\r\n    DropdownModule,\r\n    OverlayPanelModule,\r\n    ListboxModule\r\n    ],\r\n \r\n})\r\nexport class HomeModule { }\r\n","import { BudgetCategory } from './../../models/formModels/budgetCategory';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport {MenuItem} from 'primeng/api';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Category } from 'src/app/models/category';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport { TimeService } from 'src/app/services/time.service';\r\nimport { Budget } from 'src/app/models/budget';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport { ChallengesService } from 'src/app/services/challenges.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.scss'],\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n  pageLabel: String = '';\r\n  currentPage: String = '';\r\n  settings: MenuItem[] = [];\r\n  loading: boolean = false;\r\n  dashboardWidgets: any[] | undefined;\r\n  budgetWidgets: any[] | undefined;\r\n  trackingWidgets: any[] | undefined;\r\n  analyticsWidgets: any[] | undefined;\r\n  rewardsWidgets: any[] | undefined;\r\n  roomWidgets: any[] | undefined;\r\n  hidden: boolean = true;\r\n  name: string = undefined;\r\n  level: number = undefined;\r\n  favoriteMenu: boolean = false;\r\n  budgetCategories: Category[];\r\n  selectedCategories: Category[];\r\n  welcomeMessage: boolean = false; \r\n  avatarEditor: boolean = false;\r\n  trackingType: string = \"income\";\r\n\r\n\r\n\r\n  constructor(private challServ: ChallengesService, private confServ: ConfirmationService, private authService: AuthService, private trigServ: TriggerService, private ts: TimeService, private budServ: BudgetService, private catServ: CategoryService, private messageService: MessageService, private router: Router) { \r\n    \r\n    this.trigServ.levelGained$.subscribe(() =>\r\n    {\r\n      this.level = this.challServ.levProgress.level\r\n    })\r\n\r\n    try{\r\n      this.router.getCurrentNavigation().extras.state.newUser;\r\n      this.welcomeMessage = true;\r\n      }\r\n    catch(e) {}\r\n    \r\n\r\n    //this.currentPage = 'Dashboard';\r\n    this.currentPage = 'Tracking';\r\n   if (authService.currentUserValue)\r\n    {\r\n      this.name = authService.currentUserValue.user_first_name + \" \" + authService.currentUserValue.user_last_name;\r\n      this.level = authService.currentUserValue.user_level;\r\n    }   \r\n\r\n    this.budgetCategories = this.catServ.expenseCats.concat(this.catServ.incomeCats)\r\n   //this.currentPage = 'Tracking';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.settings = [\r\n      { label: 'New', icon: 'pi pi-fw pi-plus'},\r\n      { label: 'Open', icon: 'pi pi-fw pi-download'},\r\n      { label: 'Undo', icon: 'pi pi-fw pi-refresh'}\r\n  ];\r\n\r\n  //obtain list of widgets via http request\r\n    this.dashboardWidgets = [\r\n     //retrieve list of dashboard widgets\r\n    ]\r\n\r\n    this.budgetWidgets = [\r\n      \r\n    ]\r\n\r\n    this.trackingWidgets = [\r\n     //retrieve list of tracking widgets\r\n    ]\r\n\r\n    this.analyticsWidgets = [\r\n     \r\n    ]\r\n\r\n    this.rewardsWidgets = [\r\n    ]\r\n    this.roomWidgets = [\r\n      \r\n    ]\r\n\r\n    let fetch = this.budServ.exBudByCat.concat(this.budServ.inBudByCat).filter(val => val.year == this.ts.year && \r\n      val.month == this.ts.month && val.is_favorite == true)\r\n      //console.log(fetch)\r\n    this.selectedCategories = this.budgetCategories.filter((val) => \r\n    {\r\n        return fetch.find(val2 => val.category_id == val2.category_id)\r\n    }\r\n    \r\n    )\r\n  }\r\n\r\n  onNotify(page:string) {\r\n    this.currentPage = page;\r\n  }\r\n\r\n  toggleHidden() {\r\n    this.hidden = !this.hidden;\r\n  }\r\n\r\n  cleanLogout() {\r\n    this.authService.cleanLogout().pipe(first())\r\n    .subscribe({\r\n        next: () => {\r\n            this.messageService.addSuccess('Logout successful', \"\");\r\n        },\r\n        error: error => {\r\n            for (const key in error)\r\n            {\r\n              this.messageService.addError(`Logout error: ${key}`, error[key]);\r\n            }\r\n        }\r\n    });\r\n  }\r\n\r\n  \r\n \r\n\r\n  goToNewBudget(){\r\n    //First, we'll wipe the user's current budgets.\r\n    this.budServ.resetBudget().subscribe((out: string) => {\r\n      if (out != \"error\")\r\n      {\r\n        this.router.navigateByUrl('/new-budget')\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  showFavorites(){\r\n    this.favoriteMenu = true;\r\n  }\r\n\r\n  setFavorites(event){\r\n    //TODO: API TO SET FAVORITES\r\n    this.confServ.confirm({\r\n      target: event.target,\r\n      message: 'Would you like to filter all widgets to only display your newly selected favorites in the current session? \\n (All widgets use favorites as the default selection in their category filter.)',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.updateFavorites(true)\r\n      },\r\n      reject: () => {\r\n        this.updateFavorites(false)\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  updateFavorites(shouldUpWid: boolean)\r\n  {\r\n    this.loading = true;\r\n    var post: Budget[] = []\r\n    this.budgetCategories.forEach((val) => {\r\n      if (this.selectedCategories.find(val2 => val2.category_id == val.category_id))\r\n      {\r\n        post.push({\r\n          user_category_budget_favorite: true,\r\n          category: val.category_id,\r\n        });\r\n      }\r\n      else\r\n      {\r\n        post.push({\r\n          user_category_budget_favorite: false,\r\n          category: val.category_id,\r\n        })\r\n      }\r\n    })\r\n   \r\n    this.budServ.updateBudget(post).subscribe(() => {\r\n      this.favoriteMenu = false;\r\n      this.loading = false;\r\n      this.trigServ.announceFavoritesChange(this.selectedCategories, shouldUpWid)\r\n    })\r\n  }\r\n\r\n  openAvatarEditor(){\r\n    this.avatarEditor = true;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"app-content\" style=\"background-color: white; border-color:white; margin: 0; position: absolute; top: 0px; left: 0px; height: 105%; width: 100%\">\r\n  <div><app-menu class=\"scroll-lock\" (notify)='onNotify($event)'></app-menu></div>\r\n  <div class=\"placeholder\"></div>\r\n  <p-menu #menu [popup]=\"true\" [model]=\"settings\"></p-menu>\r\n  <div class=\"widget-area\">\r\n    <div class=\"title-bar\">\r\n      <h1 style=\"text-align: left; margin-left: 2vw; margin-top: 4vh; \">{{ currentPage }} \r\n        <button  style=\"position: absolute; right: 2vw; top: 3em;\"pButton pRipple pTooltip=\"Logout\" tooltipPosition=\"bottom\" type=\"button\" icon=\"pi pi-power-off\" class=\"p-button-rounded p-button-outlined\" (click)=\"cleanLogout()\" ></button>\r\n        <button  style=\"position: absolute; right: 5.5vw; top: 3em;\"pButton pRipple pTooltip=\"Settings\" tooltipPosition=\"bottom\" type=\"button\" icon=\"pi pi-cog\" class=\"p-button-rounded p-button-outlined\" (click)=\"op.toggle($event)\"></button>\r\n    </h1>\r\n    <p-overlayPanel #op>\r\n      <ng-template pTemplate>\r\n          <h2 style=\"width:100%; text-align: center;\" class=\"setting-item\">Account</h2>\r\n          <div>\r\n            <div style=\"float: left; width: 30%\">\r\n              <img style=\"width: 5em; height: 5em; display: block; text-align: right;\" src=\"../../assets/budget-buddy-avatar.png\" alt=\"Budget Buddy Logo\">\r\n            </div>\r\n            <div class=\"setting-item\" style=\"float: left; width: 60%; margin-left: 1em; display: block\" >\r\n              <h3 style=\"margin-top: .5em; white-space: nowrap !important;\">{{name}}</h3>\r\n              <p style=\"margin-top: -1em\">Level: {{level}}</p>\r\n              <p class=\"edit-button\"(click)=\"openAvatarEditor()\"><img src=\"../../../assets/icons/edit-icon.png\" \r\n                style=\"width:1em\">Edit Avatar</p>\r\n              \r\n            </div>\r\n          </div>\r\n          <div class=\"setting-item\" style=\"display: block\">\r\n            <h2>Login Information</h2>\r\n            <p style=\"margin-top: -.75em;\">Change username or password</p>\r\n          </div>\r\n          \r\n          <div class=\"setting-item\" style=\"display: block\" (click)=\"goToNewBudget()\">\r\n            <h2>New Budget</h2>\r\n            <p style=\"margin-top: -.75em;\">Reset your budget</p>\r\n         \r\n          </div>\r\n          <div class=\"setting-item\" style=\"display: block\">\r\n            <h2>Privacy</h2>\r\n            <p style=\"margin-top: -.75em;\">Edit your privacy settings</p>\r\n          </div>\r\n          <div class=\"setting-item\" style=\"display: block\">\r\n            <h2>Alerts</h2>\r\n            <p style=\"margin-top: -.75em;\">Manage alert preferences</p>\r\n          </div>\r\n          <div class=\"setting-item\" style=\"display: block\">\r\n            <h2>Friends</h2>\r\n            <p style=\"margin-top: -.75em;\">View your friends list</p>\r\n          </div>\r\n          <div class=\"setting-item\" style=\"display: block\" (click)=\"showFavorites()\">\r\n            <h2>Favorites</h2>\r\n            <p style=\"margin-top: -.75em;\">Set your favorite categories</p>\r\n          </div>\r\n      </ng-template>\r\n  </p-overlayPanel>\r\n\r\n  <p-dialog header=\"Favorites\" [(visible)]=\"favoriteMenu\">\r\n    <p-progressSpinner *ngIf=\"loading\"></p-progressSpinner>\r\n    <div style=\"display: contents;\" *ngIf=\"!loading\">\r\n      <p-listbox [options]=\"budgetCategories\" [(ngModel)]=\"selectedCategories\"  [listStyle]=\"{'max-height':'20vh'}\" optionLabel=\"category_name\" [multiple]=\"true\"  [filter]=\"true\" [filterPlaceHolder]=\"'Search'\" [checkbox]=\"true\"></p-listbox>\r\n      <button  pButton pRipple  type=\"button\" (click)=\"setFavorites($event)\" style=\"display: block; text-align: center; width: 99%; margin-top: 2em\" >Submit</button>\r\n      <p-confirmPopup></p-confirmPopup>\r\n    </div>\r\n</p-dialog>\r\n\r\n<p-dialog header=\"Avatar Editor\" [(visible)]=\"avatarEditor\">\r\n  <app-avatar-editor></app-avatar-editor>\r\n</p-dialog>\r\n\r\n<p-dialog header=\"Welcome\" [(visible)]=\"welcomeMessage\" [style]=\"{width: '50vw'}\">\r\n  <h2 style=\"text-align: center;\">Welcome!</h2>\r\n  <p style=\"text-align: center;\">Now that we've set up your budget, let's learn about Budget Buddy!<br>In the menu to the left, we have several options.</p>\r\n  <h2>Dashboard</h2>\r\n  <p>This is where we keep your favorite widgets</p>\r\n  <h2>Budget</h2>\r\n  <p>Here you can adjust your budget and view your spending for the week</p>\r\n  <h2>Analytics</h2>\r\n  <p>Looking for more insights of your spending over time? Check out Analytics.</p>\r\n  <h2>My Room</h2>\r\n  <p>As you earn rewards, customize your Budget Buddy's room!</p>\r\n  <h2>Competitions</h2>\r\n  <p>Add friends and challenge them to competitions here! May the best Budget Buddy win!</p>\r\n\r\n\r\n</p-dialog>\r\n\r\n\r\n    <p-menu #menu [popup]=\"true\" [model]=\"settings\"></p-menu>\r\n    </div>\r\n    <div *ngIf='hidden === false'>\r\n      <app-small-widget style=\"position: absolute; backdrop-filter: blur; top: 30vh; left: 45vw;\"[title]=\" 'Track Spending' \" [image]=\" '../../assets/prototype-images/spending-log.png' \" (click)=\"toggleHidden()\"></app-small-widget>\r\n    </div>\r\n    \r\n\r\n    <div *ngIf=\"currentPage === 'Dashboard'\" class=\"widget-container\" style=\"width: 73vw;\"> \r\n        <div class=\"large-widgets\">\r\n          <app-weekly-spending></app-weekly-spending>\r\n          <app-spending-vs-income></app-spending-vs-income>\r\n      </div>\r\n      <div class=\"small-widgets\">\r\n        <app-letter-grade></app-letter-grade>\r\n        <app-weekly-spending-small></app-weekly-spending-small>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"currentPage === 'Budget'\" class=\"widget-container\" style=\"width: 73vw;\"> \r\n      <div class=\"large-widgets\">\r\n        <app-budget-slider></app-budget-slider>\r\n        <app-budget-vs-spending></app-budget-vs-spending>\r\n      </div>\r\n      <div class=\"small-widgets\">\r\n       \r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"currentPage === 'Tracking'\" class=\"widget-container\" style=\"width: 73vw;\"> \r\n      \r\n      <div class=\"small-widgets\" style=\"margin-left: 2em;\">\r\n        <app-tracking-type></app-tracking-type>\r\n      </div>\r\n      <div class=\"large-widgets\"style=\"margin-left: 5em;\">\r\n         <app-receipt-tracking></app-receipt-tracking>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"currentPage === 'Analytics'\" class=\"widget-container\" style=\"width: 73vw;\"> \r\n      <div class=\"large-widgets\" style=\"width: 75vw; justify-content: center;\">\r\n        <app-actual-vs-est-income></app-actual-vs-est-income>\r\n        <app-savings-over-time></app-savings-over-time>\r\n        <app-spending-by-category></app-spending-by-category>\r\n      </div>\r\n      <div class=\"small-widgets\">\r\n      \r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"currentPage === 'Rewards' || currentPage === 'Competitions'\" class=\"widget-container\" style=\"width: 73vw;\"> \r\n      <div class=\"large-widgets\">\r\n        <app-challenge-progress></app-challenge-progress>\r\n\r\n      </div>\r\n      <div class=\"small-widgets\">\r\n        <app-trophies></app-trophies>\r\n        <app-badges-widget></app-badges-widget>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"currentPage === 'My Room'\" class=\"widget-container\" style=\"width: 73vw;\"> \r\n      <div class=\"large-widgets\">\r\n    \r\n      </div>\r\n      <div class=\"small-widgets\">\r\n      \r\n      </div>\r\n    </div>\r\n  </div>\r\n <img class=\"back-to-top\" src=\"../../assets/prototype-images/back-to-top.png\">\r\n  \r\n</div>","\r\nimport { MainPageComponent } from './../main-page.component';\r\nimport { ThrowStmt } from '@angular/compiler';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ChallengesService } from 'src/app/services/challenges.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  name: string = 'John Doe';\r\n  level: number;\r\n  selected: string = '';\r\n  main: MainPageComponent | undefined;\r\n  \r\n  @Output()\r\n  notify: EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  constructor(private trigServ: TriggerService, private challServ: ChallengesService, authServ: AuthService) {\r\n\r\n    this.trigServ.levelGained$.subscribe(() =>\r\n    {\r\n      this.level = this.challServ.levProgress.level\r\n    })\r\n\r\n    if (authServ.currentUserValue)\r\n    {\r\n      this.name = authServ.currentUserValue.user_first_name + \" \" + authServ.currentUserValue.user_last_name;\r\n      this.level = authServ.currentUserValue.user_level;\r\n    }      \r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.selected = 'Dashboard';\r\n    \r\n  }\r\n\r\n  onClick(item: string){\r\n    this.selected = item;\r\n    this.notify.emit(this.selected);\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div style=\"margin-top: 3.5vh\"></div>\r\n    <div class=\"user-info\">\r\n        <h1 style=\"margin-left: 1vw\">{{name}}</h1>\r\n        <img src=\"../../assets/budget-buddy-avatar.png\" alt=\"Budget Buddy Logo\">\r\n        <p style=\"margin-left: 1vw\">Level {{ level }}</p>\r\n    </div>\r\n    <div style=\"margin-top: 6vh\"></div>\r\n    <div class=\"menu-options\" style=\"margin-left: -1vw\">\r\n        <ul>\r\n            <li (click)=\"onClick('Dashboard')\" [ngClass]=\"{'selected' : selected=='Dashboard'}\">Dashboard</li>\r\n            <li (click)=\"onClick('Budget')\" [ngClass]=\"{'selected' : selected=='Budget'}\">Budget</li>\r\n            <li (click)=\"onClick('Tracking')\" [ngClass]=\"{'selected' : selected=='Tracking'}\">Tracking</li>\r\n            <li (click)=\"onClick('Analytics')\" [ngClass]=\"{'selected' : selected=='Analytics'}\">Analytics</li>\r\n            <li (click)=\"onClick('My Room')\" [ngClass]=\"{'selected' : selected=='My Room'}\" class=\"hide\">My Room</li>\r\n            <li (click)=\"onClick('Rewards')\" [ngClass]=\"{'selected' : selected=='Rewards'}\">Rewards</li>\r\n            <li (click)=\"onClick('Competitions')\" [ngClass]=\"{'selected' : selected=='Competitions'}\" class=\"hide\">Competitions</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-nav',\r\n  templateUrl: './login-nav.component.html',\r\n  styleUrls: ['./login-nav.component.scss']\r\n})\r\nexport class LoginNavComponent implements OnInit {\r\n  aboutVisible = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  viewAbout(){\r\n    this.aboutVisible = true;\r\n  }\r\n\r\n}\r\n","<div class=\"bounds\">\r\n    <span class=\"link\">\r\n        <img src=\"../../assets/budget-buddy-logo.png\" alt=\"Budget Buddy Logo\">\r\n        <div class=\"text-box\"><h1>Budget Buddy</h1></div>\r\n    </span>\r\n    <div class=\"text-box-left link\" (click)=\"viewAbout()\">About</div>\r\n</div>\r\n\r\n<p-dialog class=\"customdialog\" header=\"About\" [(visible)]=\"aboutVisible\" [style]=\"{width: '50vw'}\" style=\"text-align: center\">\r\n    <h1 style=\"color: #4ec5ca !important\">Welcome to Budget Buddy!</h1>\r\n    <h2 style=\"color: #003486 !important\">Our Goal:</h2>\r\n    <p style=\"color: #003486 !important\">Make budgeting fun and easy! </p>\r\n    <img style=\"width: 20vw; height: 20vw;\" src=\"../../../assets/budget-buddy-avatar.png\">\r\n    <p style=\"color: #003486 !important\">We are gamifying the budgeting experience, making it fun and engaging while you track your spending, earn badges, and watch your savings grow.</p>\r\n    <p style=\"color: #003486 !important; font-size: 1em\">This project was created by Charles Rescanski, Stephen Ippolito, and Kara Kachmar for Quinnipiac University.</p>\r\n</p-dialog>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-login-nav></app-login-nav>\r\n<div class=\"panel\">\r\n    <app-login-panel></app-login-panel>\r\n</div>\r\n\r\n\r\n\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from 'src/app/services/message.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-panel',\r\n  templateUrl: './login-panel.component.html',\r\n  styleUrls: ['./login-panel.component.scss']\r\n})\r\nexport class LoginPanelComponent implements OnInit {\r\n\r\n  loginAttempt: boolean = false;\r\n  loading: boolean = false;\r\n  form: FormGroup = <FormGroup>{};\r\n\r\n  constructor(private router: Router, \r\n    private messageService: MessageService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n  });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  login(){\r\n  \r\n    this.loginAttempt = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n        this.messageService.addInfo(`Invalid Entry`, `Please fill out both the username and password fields.`);\r\n        return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authService.login(this.f.username.value, this.f.password.value)\r\n        .pipe(first())\r\n        .subscribe({\r\n            next: (user) => {\r\n                // redirect to main page of app if login was successful\r\n                if (user)\r\n                {\r\n                    console.log('to main page');\r\n                    this.router.navigateByUrl('/main-page');\r\n                }\r\n            },\r\n            error: error => {\r\n              for (const key in error)\r\n              {\r\n                this.messageService.addError(`Login Error: ${key}`, error[key]);\r\n              }\r\n                this.loading = false;\r\n            }\r\n        });\r\n  }\r\n\r\n  register() {\r\n    this.router.navigateByUrl('/register-page');\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content\" [formGroup]=\"form\">\r\n        <h1>Login</h1>\r\n        <p>Username</p>\r\n        <input type=\"text\" formControlName=\"username\" class=\"field\" pInputText />\r\n        <p>Password</p>\r\n        <p-password [feedback]=\"false\" formControlName=\"password\"></p-password>\r\n        <br>\r\n        <br>\r\n        <div class=\"button-container\">\r\n            <button class=\"button\" pButton type=\"button\" label=\"Login\" (click)=\"login()\"></button>\r\n            <br>\r\n            <button class=\"button button-secondary\" pButton type=\"button\" (click)=\"register()\" label=\"Sign Up\" ></button>\r\n        </div>\r\n            \r\n       \r\n    </div>\r\n</div>","export class Alert {\r\n    id: string = \"\";\r\n    type: AlertType = <AlertType>{};\r\n    message: string = \"\";\r\n    autoClose: boolean = true;\r\n    keepAfterRouteChange?:boolean = true;\r\n    fade:boolean = true;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport {InputMaskModule} from 'primeng/inputmask';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport { MessageService } from 'primeng/api';\r\nimport {DynamicDialogModule} from 'primeng/dynamicdialog';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport {MultiSelectModule} from 'primeng/multiselect';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport {TabViewModule} from 'primeng/tabview';\r\nimport {ProgressSpinnerModule} from 'primeng/progressspinner';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\nimport {ConfirmPopupModule} from 'primeng/confirmpopup';\r\nimport {SelectButtonModule} from 'primeng/selectbutton';\r\n\r\n@NgModule({\r\n  declarations: [  ],\r\n  imports: [\r\n    InputNumberModule,\r\n    ProgressSpinnerModule,\r\n    ConfirmPopupModule,\r\n    DynamicDialogModule,\r\n    ProgressBarModule,\r\n    CalendarModule,\r\n    MultiSelectModule,\r\n    MessagesModule, \r\n    DropdownModule,\r\n    PasswordModule,\r\n    ButtonModule,\r\n    InputMaskModule,\r\n    CheckboxModule,\r\n    ToastModule,\r\n    SliderModule,\r\n    InputTextModule,\r\n    TabViewModule,\r\n    SelectButtonModule\r\n  ],\r\n  exports: [\r\n    InputNumberModule,\r\n    CalendarModule,\r\n    ProgressBarModule,\r\n    MessagesModule,\r\n    PasswordModule,\r\n    ProgressSpinnerModule,\r\n    ConfirmPopupModule,\r\n    DynamicDialogModule,\r\n    ButtonModule,\r\n    InputMaskModule,\r\n    CheckboxModule,\r\n    MultiSelectModule,\r\n    ToastModule,\r\n    DropdownModule,\r\n    SliderModule,\r\n    InputTextModule,\r\n    TabViewModule,\r\n    SelectButtonModule\r\n  ],\r\n  providers: [\r\n    MessageService\r\n  ],\r\n  bootstrap: []\r\n})\r\nexport class PrimengModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register-nav',\r\n  templateUrl: './register-nav.component.html',\r\n  styleUrls: ['./register-nav.component.scss']\r\n})\r\nexport class RegisterNavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bounds\">\r\n    <span class=\"link\">\r\n        <img src=\"../../assets/budget-buddy-logo.png\" alt=\"Budget Buddy Logo\">\r\n        <div class=\"text-box\"><h1>Budget Buddy</h1></div>\r\n    </span>\r\n    <div class=\"text-box-left link\">About</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.scss']\r\n})\r\nexport class RegisterPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-register-nav></app-register-nav>\r\n<div class=\"panel\">\r\n    <app-register-panel></app-register-panel>\r\n</div>\r\n\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from 'src/app/services/message.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register-panel',\r\n  templateUrl: './register-panel.component.html',\r\n  styleUrls: ['./register-panel.component.scss']\r\n})\r\nexport class RegisterPanelComponent implements OnInit {\r\n\r\n  registerAttempt: boolean = false;\r\n  loading: boolean = false;\r\n  form: FormGroup = <FormGroup>{};\r\n\r\n  constructor(private router: Router, \r\n    private messageService: MessageService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      user_user_name: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      user_email: ['', Validators.compose([Validators.required, Validators.email])],\r\n      user_first_name: ['', Validators.compose([Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n      user_last_name: ['', Validators.compose([Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n      user_phone_number: ['', Validators.required],\r\n      user_birth_date: ['', Validators.required],\r\n      user_has_notifications: [false, Validators.required],\r\n  });\r\n\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  register() {\r\n    this.registerAttempt = true;\r\n \r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n        this.messageService.addInfo(\"Invalid Entry\", \"Some fields are incomplete or invalid.\")\r\n        return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authService.register(this.form.value)\r\n        .pipe(first())\r\n        .subscribe({\r\n            next: () => {\r\n                this.messageService.addSuccess('Registration successful', \"\");\r\n                //let's auto-log in the user with the inputted data\r\n                this.authService.login(this.form.get('user_user_name').value, this.form.get('password').value)\r\n                .pipe(first())\r\n                .subscribe({\r\n                    next: (user) => {\r\n                        // redirect to budget creation page if login was successful\r\n                        if (user)\r\n                        {\r\n                          this.router.navigateByUrl('/new-budget');\r\n                        }\r\n                    },\r\n                    error: error => {\r\n                      for (const key in error)\r\n                      {\r\n                        this.messageService.addError(`Login Error: ${key}`, error[key]);\r\n                      }\r\n                        this.loading = false;\r\n                    }\r\n                });\r\n            },\r\n            error: error => {\r\n                for (const key in error)\r\n                {\r\n                  this.messageService.addError(`Registration Error: ${key}`, error[key]);\r\n                }\r\n   \r\n                this.loading = false;\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content\" [formGroup]=\"form\">\r\n        <h1>Register</h1>\r\n        <div class=\"grid\">\r\n            <div class=\"row\">\r\n                <p>Username</p>\r\n                <input type=\"text\" formControlName=\"user_user_name\" class=\"field\" pInputText />\r\n                    <div class=\"validator\" *ngIf=\"f.user_user_name.invalid && (f.user_user_name.dirty || f.user_user_name.touched)\">\r\n                        Please enter a valid username.\r\n                    </div>\r\n                <p>Password</p>\r\n                <p-password formControlName=\"password\"></p-password>\r\n                    <div class=\"validator\" *ngIf=\"f.password.invalid && (f.password.dirty || f.password.touched)\">\r\n                        Please enter a valid password.\r\n                    </div>\r\n                <p>Email</p>\r\n                <input type=\"text\" formControlName=\"user_email\" class=\"field\" pInputText />\r\n                    <div class=\"validator\" *ngIf=\"f.user_email.invalid && (f.user_email.dirty || f.user_email.touched)\">\r\n                        Please enter a valid email.\r\n                    </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <p>First Name</p>\r\n                <input type=\"text\" formControlName=\"user_first_name\" class=\"field\" pInputText />\r\n                    <div class=\"validator\" *ngIf=\"f.user_first_name.invalid && (f.user_first_name.dirty || f.user_first_name.touched)\">\r\n                        Field is required\r\n                    </div>\r\n                <p>Last Name</p>\r\n                <input type=\"text\" formControlName=\"user_last_name\" class=\"field\" pInputText />\r\n                    <div class=\"validator\" *ngIf=\"f.user_last_name.invalid && (f.user_last_name.dirty || f.user_last_name.touched)\">\r\n                        Field is required\r\n                    </div>\r\n                <p>Phone Number</p>\r\n                <p-inputMask mask=\"(999) 999-9999\" formControlName=\"user_phone_number\" placeholder=\"(999) 999-9999\"></p-inputMask>\r\n                    <div class=\"validator\" *ngIf=\"f.user_phone_number.invalid && (f.user_phone_number.dirty || f.user_phone_number.touched)\">\r\n                        Field is required\r\n                    </div>\r\n            </div>\r\n        <div class=\"row\">\r\n                <p>Date of Birth</p>\r\n                <p-inputMask mask=\"9999-99-99\" formControlName=\"user_birth_date\" placeholder=\"1987-03-12\" slotChar=\"yyyy-mm-dd\"></p-inputMask>\r\n                    <div class=\"validator\" *ngIf=\"f.user_birth_date.invalid && (f.user_birth_date.dirty || f.user_birth_date.touched)\">\r\n                        Please enter a valid date.\r\n                    </div>\r\n                <p>Check to Enroll in Notifications</p>\r\n                <input type=\"checkbox\" formControlName=\"user_has_notifications\" class=\"field\">\r\n            </div>\r\n         </div>\r\n        <br>\r\n        <div class=\"button-container\">\r\n            <button class=\"button\" pButton type=\"button\" label=\"Register\" (click)=\"register()\"></button>\r\n        </div>\r\n            \r\n       \r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { forkJoin, Observable } from \"rxjs\";\r\nimport { BadgesEarnedService } from \"../services/badgesEarned.service\";\r\nimport { BudgetService } from \"../services/budget.service\";\r\nimport { BudgetScoreService } from \"../services/budget_score.service\";\r\nimport { CategoryService } from \"../services/category.service\";\r\nimport { ChallengesService } from \"../services/challenges.service\";\r\nimport { IncomeHistoryService } from \"../services/income-history.service\";\r\nimport { SavingsHistoryService } from \"../services/savings-history.service\";\r\nimport { SpendingHistoryService } from \"../services/spending-history.service\";\r\nimport { TimeService } from \"../services/time.service\";\r\nimport { ReceiptTrackService } from \"../widget/services/receipt-track.service\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DataResolver implements Resolve<any> {\r\n    constructor(private budServ: BudgetService,\r\n        private spenTot: SpendingHistoryService,\r\n        private budSco: BudgetScoreService,\r\n        private chalServ: ChallengesService,\r\n        private badServ: BadgesEarnedService,\r\n        private rs: ReceiptTrackService,\r\n        private incServ: IncomeHistoryService,\r\n        private savServ: SavingsHistoryService,\r\n        private ts: TimeService,\r\n        private catService: CategoryService) {}\r\n    \r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any | Observable<any> | Promise<any> {\r\n    \r\n    var observArray = []\r\n    if (this.catService.expenseCats == null || this.catService.incomeCats == null)\r\n    {\r\n        observArray.push(this.catService.getCategories())\r\n    }\r\n   \r\n    const observable = forkJoin( observArray.concat([\r\n    \r\n        //Fetch Weekly and Monthly Budgets for the app:\r\n        this.budServ.getBudgetTotals(),\r\n\r\n        //Fetch receipts for user:\r\n        this.rs.getReceipts(),\r\n\r\n        //Fetch challenges for user:\r\n        this.chalServ.getChallenges(),\r\n\r\n        //Fetch Default Display for Savings over Time Widget\r\n        this.savServ.getCumSavings(),\r\n\r\n        //Fetch Default Display for Spending over Time Widget\r\n        this.spenTot.getByMonthCumSpendings(),\r\n\r\n        //Fetch Default Display for Income over Time Widget\r\n        this.incServ.getByMonthCumIncome(),\r\n\r\n        this.incServ.getByMonthIncome(),\r\n\r\n        this.spenTot.getByMonthSpendings(),\r\n\r\n        this.spenTot.getSpendCatBreakdown(),\r\n\r\n        this.incServ.getIncomeCatBreakdown(),\r\n\r\n        //Fetch Income and Expense Budgets By Category\r\n        this.budServ.getBudByCat(),\r\n\r\n        //Fetch Weekly Spending Total\r\n        this.spenTot.getCurWeekSpend(),\r\n\r\n        //Fetch Badges\r\n        this.badServ.getBadgesEarned(),\r\n\r\n        //Fetch BudgetScore\r\n        this.budSco.getBudgetScore()\r\n    ]))\r\n\r\n    return observable;\r\n    \r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { EMPTY, forkJoin, Observable } from \"rxjs\";\r\nimport { BadgesEarnedService } from \"../services/badgesEarned.service\";\r\nimport { BudgetService } from \"../services/budget.service\";\r\nimport { CategoryService } from \"../services/category.service\";\r\nimport { SpendingHistoryService } from \"../services/spending-history.service\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NewBudgetResolver implements Resolve<any> {\r\n    constructor(\r\n        private catService: CategoryService) {}\r\n    \r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n    \r\n    var observArray = []\r\n    if (this.catService.expenseCats == null || this.catService.incomeCats == null)\r\n    {\r\n        observArray.push(this.catService.getCategories())\r\n    }\r\n\r\n    const observable = forkJoin(observArray)\r\n\r\n    if (observArray.length > 0)\r\n    {\r\n        return observable;\r\n    }\r\n    else\r\n    {\r\n        return {} as Observable<any>;\r\n    }\r\n  \r\n    \r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '../models/alert';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { catchError, first, map, tap } from 'rxjs/operators';\r\n\r\nimport { User } from '../models/user';\r\nimport { MessageService } from './message.service';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from './alert.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n  private authUrl = 'api/auth/';  // URL to web api\r\n  private logoutUrl = 'api/auth/logout/'\r\n  private registerUrl = 'api/auth/register/';\r\n  private userUrl = 'api/users/';\r\n  private currentUserSubject: BehaviorSubject<User | null>;\r\n  public currentUser: Observable<User | null>;\r\n\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private messageService: MessageService) { \r\n      //allows other components to easily get the current value of the logged in user without have to subscribe to the currentUser observable\r\n      this.currentUserSubject = new BehaviorSubject<User | null>(JSON.parse(sessionStorage.getItem('currentUser') || '{}'));\r\n      //exposes user as an observable, so any component can be notified when a user logs in, logs out, or updates their profile\r\n      this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n  \r\n  public get currentUserValue(): User | null {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  /** LOGIN user */\r\n  login(username: string, password: string) {\r\n    return this.http.post<User>(this.authUrl, {username, password}, this.httpOptions).pipe(\r\n     map((user) => {\r\n          // store user details and login token in local storage to keep user logged in\r\n          sessionStorage.setItem('currentUser', JSON.stringify(user))\r\n          console.log(`logged in successfully w/ token=${user.token}`);\r\n          this.currentUserSubject.next(user);\r\n          return user;\r\n          }\r\n        )\r\n    );\r\n  }\r\n\r\n  /** LOGOUT user */\r\n  cleanLogout()\r\n  {\r\n    // request that the user's token be deleted from the database\r\n    return this.http.post<User>(this.logoutUrl, {}, this.httpOptions).pipe(\r\n      map((x) => {\r\n          this.expireLogout();\r\n          return x;\r\n          }\r\n         )\r\n     );\r\n  }\r\n\r\n  //this is the logout procedure used when the token has expired\r\n  expireLogout()\r\n  {\r\n      // store user details and login token in local storage to keep user logged in\r\n      // remove user from local storage and set current user to null\r\n      sessionStorage.removeItem('currentUser');\r\n      this.currentUserSubject.next(null);\r\n\r\n      //return to login page\r\n      this.router.navigate(['login-page']);\r\n  }\r\n \r\n\r\n  /** REGISTER new user */\r\n  register(user: User)\r\n  {\r\n    return this.http.post(this.registerUrl, user, this.httpOptions);\r\n  }\r\n\r\n  /** UPDATE user information */\r\n  update(id: any, params: any)\r\n  {\r\n    return this.http.put(`${this.userUrl}/${id}`, params)\r\n      .pipe(map(x => {\r\n        //update stored user if the logged in user updated their own record\r\n        if (id == this.currentUserValue?.user_id)\r\n        {\r\n          // update local storage\r\n          const user = {...this.currentUserValue, ...params};\r\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n\r\n          //publish updated user to subscribers\r\n          this.currentUserSubject.next(user);\r\n        }\r\n        return x;\r\n      }))\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a UserService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`AuthService: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { BadgesEarned } from '../models/badgesEarned';\r\nimport { MessageService } from './message.service';\r\nimport { AuthService } from './auth.service';\r\nimport { User } from '../models/user';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BadgesEarnedService {\r\n\r\n  private badgesEarnedUrl = 'api/badges_earned';  // URL to web api\r\n  private badgesEarned: BadgesEarned[]\r\n  user: User | null = null;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService,\r\n    private authService: AuthService) { \r\n      this.authService.currentUser.subscribe(x => this.user = <User>x);\r\n    }\r\n  \r\n  get earnedBadges()\r\n  {\r\n    return this.badgesEarned;\r\n  }\r\n\r\n\r\n  /** GET badges earned by user_id. Will 404 if id not found */\r\n  getBadgesEarned(): Observable<BadgesEarned[]> {\r\n    const url = `${this.badgesEarnedUrl}/${this.user.user_id}/`;\r\n    return this.http.get<BadgesEarned[]>(url).pipe(\r\n      tap((out: BadgesEarned[]) => \r\n      {\r\n        this.badgesEarned = out;\r\n        console.log(`fetched badges for user`)\r\n      }),\r\n      catchError(this.handleError<BadgesEarned[]>(`getBadgesEarned id=${this.user.user_id}`))\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a badgesEarnedervice message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`badgesEarnedervice: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Budget } from '../models/budget';\r\nimport { MessageService } from './message.service';\r\nimport { AuthService } from './auth.service';\r\nimport { BudgetTotals } from '../models/spendBudget';\r\nimport { User } from '../models/user';\r\nimport { BudgetCategory } from '../models/formModels/budgetCategory';\r\nimport { TimeService } from './time.service';\r\nimport { Category } from '../models/category';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BudgetService {\r\n\r\n  private budgetsUrl = 'api/budget/';  // URL to web api\r\n  user: User | null = null;\r\n  private bud_Calcs: BudgetTotals[] = [];\r\n  private curMonthCalcs: BudgetTotals;\r\n  noIncFavorites: boolean = false; //represent whether user has no favorites\r\n  noExpFavorites: boolean = false;\r\n  private exBudCat: Budget[]\r\n  private inBudCat: Budget[]\r\n\r\n  get budCalcs()\r\n  {\r\n    return this.bud_Calcs;\r\n  }\r\n\r\n  get curBudCalcs()\r\n  {\r\n    return this.curMonthCalcs;\r\n  }\r\n\r\n  get exBudByCat()\r\n  {\r\n    return this.exBudCat;\r\n  }\r\n\r\n  get inBudByCat()\r\n  {\r\n    return this.inBudCat;\r\n  }\r\n\r\n  types = [\r\n    {label: 'Want', value: 'want'},\r\n    {label: 'Need', value: 'need'},\r\n    {label: 'Savings', value: 'saving'}\r\n  ]\r\n\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService,\r\n    private authServ: AuthService, private ts: TimeService) { \r\n      this.authServ.currentUser.subscribe(x => this.user = <User>x);\r\n    }\r\n\r\n  updateFavorites(selected: Category[])\r\n  {\r\n    this.inBudByCat.forEach((val) =>\r\n    {\r\n      if(selected.find(val2 => val.category_id == val2.category_id))\r\n      {\r\n        val.is_favorite = true;\r\n      }\r\n      else\r\n      {\r\n        val.is_favorite = false;\r\n      }\r\n    })\r\n    this.exBudByCat.forEach((val) =>\r\n    {\r\n      if(selected.find(val2 => val.category_id == val2.category_id))\r\n      {\r\n        val.is_favorite = true;\r\n      }\r\n      else\r\n      {\r\n        val.is_favorite = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  updateFavoriteStatus()\r\n  {\r\n    let num = this.inBudCat.filter(val => val.is_favorite)\r\n    let num2 = this.exBudCat.filter(val => val.is_favorite)\r\n    if (num.length == 0)\r\n    {\r\n      this.noIncFavorites = true;\r\n    }\r\n    if (num2.length == 0)\r\n    {\r\n      this.noExpFavorites = true;\r\n    }\r\n  }\r\n\r\n  updateValues(budgets: Budget[])\r\n  {\r\n    this.inBudCat = budgets.filter(val => val.category_type == \"income\")\r\n    this.exBudCat = budgets.filter(val => val.category_type != \"income\")\r\n    this.updateFavoriteStatus();\r\n\r\n    let sum = this.exBudCat.reduce(function (accumulator, item) {\r\n      return accumulator + item.altered_amount;\r\n    }, 0);\r\n\r\n    if (this.inBudCat.length > 0)\r\n    {\r\n      let sum2 = this.inBudCat.reduce(function (accumulator, item) {\r\n        return accumulator + item.altered_amount;\r\n      }, 0);\r\n      this.curMonthCalcs.monthlyEstIncome = sum2;\r\n    }\r\n    \r\n    this.curMonthCalcs.monthlyBudgetTotal = sum;\r\n\r\n    let numDays = this.ts.getNumDays(this.ts.year, this.ts.month)\r\n    this.curMonthCalcs.weeklyBudgetTotal = sum * (7 / numDays)\r\n\r\n    \r\n\r\n    let index = this.bud_Calcs.findIndex((val) => val.month == this.ts.month && val.year == this.ts.year)\r\n    if (index >= 0)\r\n    {\r\n      this.bud_Calcs[index] = this.curMonthCalcs;\r\n    }\r\n    else\r\n    {\r\n      this.bud_Calcs.push(this.curMonthCalcs)\r\n    }\r\n  \r\n\r\n  }\r\n\r\n  /**Update altered amounts in budget */\r\n  updateBudget(budgets: Budget[]): Observable<any> {\r\n    const url = `${this.budgetsUrl}users/${this.user.user_id}/`\r\n    const object = {\r\n      budgets: budgets\r\n    }\r\n    return this.http.put(url, object, this.httpOptions)\r\n    .pipe(\r\n      tap(_ => console.log('updated budgets')),\r\n      catchError(this.handleError<any>('updateBudgets', 'error'))\r\n    )\r\n  }\r\n\r\n  /**Reset budget for current month (delete all budget entries for current month) */\r\n  resetBudget(): Observable<any> {\r\n    const url = `${this.budgetsUrl}users/${this.user.user_id}/`\r\n    return this.http.delete(url, this.httpOptions)\r\n    .pipe(\r\n      tap(_ => console.log('reset budget')),\r\n      catchError(this.handleError<any>('deleteBudgets', 'error'))\r\n    )\r\n  }\r\n\r\n  /**Set initial budget */\r\n  setInitialBudget(budgets: Budget[]): Observable<any> {\r\n    const object = {\r\n      user_id: this.user.user_id,\r\n      budgets: budgets\r\n    }\r\n    return this.http.post(this.budgetsUrl, object, this.httpOptions)\r\n    .pipe(\r\n      tap(_ => console.log('set initial budgets')),\r\n      catchError(this.handleError<any>('initBudgets', 'error'))\r\n    )\r\n  }\r\n\r\n  /**GET User's Budgets */\r\n  getBudByCat(): Observable<Budget[]>\r\n  {\r\n    const url = `${this.budgetsUrl}users/${this.user.user_id}/`\r\n    return this.http.get<Budget[]>(url).pipe(\r\n      tap((out: Budget[]) => \r\n      {\r\n        console.log(`Fetched budgets by category`)\r\n        let inc = out.filter(value => value.category_type == \"income\")  \r\n        let exp = out.filter(value => value.category_type != \"income\")\r\n        this.exBudCat = exp;\r\n        this.inBudCat = inc;\r\n        this.updateFavoriteStatus();\r\n      }),\r\n      catchError(this.handleError<Budget[]>(`getBudByCat`))\r\n    )\r\n  }\r\n\r\n  /**GET User's Budget Totals */\r\n  getBudgetTotals(): Observable<BudgetTotals[]> {\r\n    return this.http.get<BudgetTotals[]>(`${this.budgetsUrl}users/${this.user.user_id}/totals`).pipe(\r\n    tap((out: BudgetTotals[]) => \r\n      {\r\n        console.log(`Fetched budget totals`)\r\n        if (out && out.length > 0)\r\n        {\r\n          this.bud_Calcs = out;\r\n          let temp = out.filter(val => val.year == this.ts.year && val.month == this.ts.month)\r\n          temp && temp.length > 0 ? this.curMonthCalcs = temp[0] : this.curMonthCalcs = {weeklyBudgetTotal: 0, monthlyBudgetTotal: 0, monthlyEstIncome: 0, month: this.ts.month, year: this.ts.year}\r\n        }\r\n        else\r\n        {\r\n          this.bud_Calcs = [{weeklyBudgetTotal: 0, monthlyBudgetTotal: 0, monthlyEstIncome: 0, month: 0, year: 0}]\r\n          this.curMonthCalcs = {weeklyBudgetTotal: 0, monthlyBudgetTotal: 0, monthlyEstIncome: 0, month: 0, year: 0}\r\n        }\r\n        \r\n      }),\r\n    catchError(this.handleError<BudgetTotals[]>(`getBudgetTotals`))\r\n  );\r\n}\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for budget consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a BudgetService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`BudgetService: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Budget } from '../models/budget';\r\nimport { MessageService } from './message.service';\r\nimport { AuthService } from './auth.service';\r\nimport { BudgetTotals } from '../models/spendBudget';\r\nimport { User } from '../models/user';\r\nimport { BudgetCategory } from '../models/formModels/budgetCategory';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BudgetScoreService {\r\n\r\n  private budgetsUrl = 'api/budget_score/';  // URL to web api\r\n  user: User | null = null;\r\n  private budgetScore: number;\r\n  private budgetGrade: string;\r\n\r\n  get rawScore()\r\n  {\r\n    return this.budgetScore;\r\n  }\r\n\r\n  get letterGrade()\r\n  {\r\n    return this.budgetGrade;\r\n  }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService,\r\n    private authServ: AuthService) { \r\n      this.authServ.currentUser.subscribe(x => this.user = <User>x);\r\n    }\r\n\r\n  /** GET budget score from the server */\r\n  getBudgetScore(): Observable<number> {\r\n    let url = `${this.budgetsUrl}${this.user.user_id}/`\r\n    return this.http.get<number>(url)\r\n      .pipe(\r\n        tap((score: number) => {this.setScore(score); console.log('fetched budget score')}),\r\n        catchError(this.handleError<number>('getBudgetScore'))\r\n      );\r\n  }\r\n\r\n  setScore(score: number)\r\n  {\r\n    this.budgetScore = score;\r\n    if (this.budgetScore < 60)\r\n    {\r\n      this.budgetGrade = \"F\"\r\n    }\r\n    else if (this.budgetScore < 62)\r\n    {\r\n      this.budgetGrade = \"D-\"\r\n    }\r\n    else if (this.budgetScore < 68)\r\n    {\r\n      this.budgetGrade = \"D\"\r\n    }\r\n    else if (this.budgetScore < 70)\r\n    {\r\n      this.budgetGrade = \"D+\"\r\n    }\r\n    else if (this.budgetScore < 72)\r\n    {\r\n      this.budgetGrade = \"C-\"\r\n    }\r\n    else if (this.budgetScore < 78)\r\n    {\r\n      this.budgetGrade = \"C\"\r\n    }\r\n    else if (this.budgetScore < 80)\r\n    {\r\n      this.budgetGrade = \"C+\"\r\n    }\r\n    else if (this.budgetScore < 82)\r\n    {\r\n      this.budgetGrade = \"B-\"\r\n    }\r\n    else if (this.budgetScore < 88)\r\n    {\r\n      this.budgetGrade = \"B\"\r\n    }\r\n    else if (this.budgetScore < 90)\r\n    {\r\n      this.budgetGrade = \"B+\"\r\n    }\r\n    else if (this.budgetScore < 92)\r\n    {\r\n      this.budgetGrade = \"A-\"\r\n    }\r\n    else if (this.budgetScore < 98)\r\n    {\r\n      this.budgetGrade = \"A\"\r\n    }\r\n    else\r\n    {\r\n      this.budgetGrade = \"A+\"\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for budget consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a BudgetService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`BudgetService: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Category } from '../models/category';\r\nimport { MessageService } from './message.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CategoryService {\r\n\r\n  \r\n  private categoriesUrl = 'api/category/';  // URL to web api\r\n  \r\n  private incomeCategories: BehaviorSubject<Category[] | null>;\r\n  private expenseCategories: BehaviorSubject<Category[] | null>;\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService) {\r\n      this.incomeCategories = new BehaviorSubject<Category[] | null>(null);\r\n      this.expenseCategories = new BehaviorSubject<Category[] | null>(null);\r\n    }\r\n  \r\n  public get incomeCats(): Category[] | null {\r\n    return this.incomeCategories.value;\r\n  }\r\n\r\n  public get expenseCats(): Category[] | null {\r\n    return this.expenseCategories.value;\r\n  }\r\n\r\n   /** GET categories from the server */\r\n   getCategories(): Observable<Category[]> {\r\n    return this.http.get<Category[]>(`${this.categoriesUrl}`)\r\n      .pipe(\r\n        tap((cats: Category[]) => {\r\n          console.log('fetched categories');\r\n\r\n          let inc = cats.filter(value => value.category_type == \"income\")\r\n          let exp = cats.filter(value => value.category_type != \"income\")\r\n          this.incomeCategories.next(inc);\r\n          this.expenseCategories.next(exp)\r\n        }),\r\n        catchError(this.handleError<Category[]>('getCategories', []))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for category consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a CategoryService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`CategoryService: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Challenge } from '../models/Challenge';\r\nimport { MessageService } from './message.service';\r\nimport { AuthService } from './auth.service';\r\nimport { User } from '../models/user';\r\nimport { ChallengeInventoryPackage } from '../models/ChallengeInventoryPackage';\r\nimport { LevelProgress } from '../models/LevelProgress';\r\nimport { TriggerService } from './trigger.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChallengesService {\r\n\r\n  private apiUrl = 'api/chall_inv';  // URL to web api\r\n  private challInvs: Challenge[]\r\n  private preInv: Challenge[]\r\n  private levelProgress: LevelProgress;\r\n  private preLevProg: LevelProgress;\r\n  private triggers: Set<string>;\r\n  user: User | null = null;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService,\r\n    private authService: AuthService) { \r\n      this.authService.currentUser.subscribe(x => this.user = <User>x);\r\n    }\r\n  \r\n get pre_Inv()\r\n  {\r\n    return this.preInv;\r\n  }\r\n\r\n  get preLev_Prog()\r\n  {\r\n    return this.preLevProg\r\n  }\r\n\r\n  get challenges()\r\n  {\r\n    return this.challInvs;\r\n  }\r\n\r\n  get levProgress()\r\n  {\r\n    return this.levelProgress;\r\n  }\r\n\r\n  get trigs()\r\n  {\r\n    return this.triggers;\r\n  }\r\n\r\n\r\n  /** GET challenges earned by user_id. Will 404 if id not found */\r\n  getChallenges(): Observable<ChallengeInventoryPackage> {\r\n    const url = `${this.apiUrl}/${this.user.user_id}/`;\r\n    return this.http.get<ChallengeInventoryPackage>(url).pipe(\r\n      tap((out: ChallengeInventoryPackage) => \r\n      {\r\n        this.preInv = this.challInvs;\r\n        this.challInvs = out.inventory;\r\n        this.preLevProg = this.levelProgress;\r\n        this.levelProgress = out.levelProgress;\r\n        this.setTriggers(out.inventory);\r\n        console.log(`fetched challenges for user`)\r\n      }),\r\n      catchError(this.handleError<ChallengeInventoryPackage>(`getChallenges id=${this.user.user_id}`))\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  setTriggers(inv: Challenge[])\r\n  {\r\n    let trig: Set<string> = new Set()\r\n    inv.forEach((val: Challenge) => trig.add(val.trigger))\r\n    this.triggers = trig;\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a badgesEarnedervice message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`badgesEarnedervice: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { WeeklySpendingComponent } from '../widget/weekly-spending/weekly-spending.component';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ColorService {\r\n\r\n  DEFAULT_COLORS = ['#3B3EAC', '#0099C6', '#DD4477', '#66AA00', '#B82E2E',\r\n'#3366CC', '#316395', '#994499', '#109618', '#990099',\r\n'#22AA99', '#AAAA11', '#6633CC','#DC3912', '#FF9900',\r\n'#E67300', '#8B0707', '#329262', '#5574A6', '#3B3EAC'];\r\n\r\n  constructor(private authServ: AuthService) { \r\n    \r\n  }\r\n\r\n  configureDefaultColors(data: number[]): string[] {\r\n    let customColours = []\r\n     if (data.length) {\r\n     customColours = data.map((element, idx) => {\r\n        return this.DEFAULT_COLORS[idx % this.DEFAULT_COLORS.length];\r\n      });\r\n     }\r\n    return customColours;\r\n    }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport { User } from '../models/user';\r\nimport { TimeService } from './time.service';\r\nimport { IncomeOverTime } from '../models/incomeOverTime';\r\nimport { ReceiptTrackService } from '../widget/services/receipt-track.service';\r\nimport { Receipt } from '../models/receipt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IncomeHistoryService {\r\n\r\n  private apiUrl = 'api/income_history';  // URL to web api\r\n  private cumUrl = 'api/cum_income_history';\r\n  user: User | null = null;\r\n  private weeklyIncomeTotal: number;\r\n  private cumIncByMonth: IncomeOverTime[]\r\n  private incByMonth: IncomeOverTime[]\r\n  private catIncByMonth: IncomeOverTime[]\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(private http: HttpClient, private rs: ReceiptTrackService, private auServ: AuthService, private tiServ: TimeService) { \r\n    this.auServ.currentUser.subscribe(x => this.user = <User>x);\r\n\r\n\r\n  }\r\n\r\n  //Update amounts given new receipt\r\n  updateValues(re: Receipt, mode: string)\r\n  {\r\n    let date = new Date(re.receipt.receipt_date)\r\n    let month = date.getMonth() + 1\r\n    let total = this.rs.getTotal(re)\r\n    switch (mode)\r\n    {\r\n      case \"delete\":\r\n        total = -1 * total;\r\n        break;\r\n      case \"update\":\r\n        total = total - re.preTotal\r\n        break;\r\n    }\r\n\r\n    if (re.receipt.receipt_is_income)\r\n    {\r\n      \r\n      for (let inc of re.incomes)\r\n      {\r\n        let i = this.catIncByMonth.findIndex(val => val.category_id == inc.category_id && val.year == date.getFullYear()\r\n          && val.month == month)\r\n        if (i >= 0)\r\n        {\r\n          this.catIncByMonth[i].totalIncomeReceived += inc.income_amount;\r\n        }\r\n        else\r\n        {\r\n          this.catIncByMonth.push({category_id: inc.category_id, year: date.getFullYear(), month: month, totalIncomeReceived: inc.income_amount})\r\n        }\r\n      }\r\n      \r\n      let i = this.incByMonth.findIndex(val => val.year == date.getFullYear() && val.month == month)\r\n      if (i >= 0)\r\n      {\r\n        this.incByMonth[i].totalIncomeReceived += total;\r\n      }\r\n      else\r\n      {\r\n        this.incByMonth.push({year: date.getFullYear(), month: month, totalIncomeReceived: total})\r\n      }\r\n\r\n\r\n      var found = false;\r\n      for (let i in this.cumIncByMonth)\r\n      {\r\n        if ((this.cumIncByMonth[i].year == date.getFullYear() && this.cumIncByMonth[i].month >= month)\r\n          || this.cumIncByMonth[i].year > date.getFullYear())\r\n        {\r\n          found = true;\r\n          this.cumIncByMonth[i].totalIncomeReceived += total;\r\n        }\r\n      }\r\n      if (!found)\r\n      {\r\n        this.cumIncByMonth.push({year: date.getFullYear(), month: month, totalIncomeReceived: total})\r\n      }\r\n      \r\n    }\r\n  \r\n  }\r\n\r\n  get weekIncome()\r\n  {\r\n    return this.weeklyIncomeTotal;\r\n  }\r\n\r\n  get cumIncomeByMonth()\r\n  {\r\n    return this.cumIncByMonth;\r\n  }\r\n\r\n  get incomeByMonth()\r\n  {\r\n    return this.incByMonth;\r\n  }\r\n\r\n  get catIncomeByMonth()\r\n  {\r\n    return this.catIncByMonth;\r\n  }\r\n\r\n    /**GET income by category within each month */\r\n    getIncomeCatBreakdown(): Observable<IncomeOverTime[]>\r\n    {\r\n      const url = `${this.apiUrl}/${this.user.user_id}/?period=monthly&category_breakdown=true`\r\n  \r\n      return this.http.get<IncomeOverTime[]>(url).pipe(\r\n        tap(out => \r\n          {\r\n            console.log(`Fetched income totals with category breakdown by month`);\r\n            this.catIncByMonth = out;\r\n          }\r\n        \r\n          ),\r\n        catchError(this.handleError<IncomeOverTime[]>(`getIncomeHistory`))\r\n      );\r\n    }\r\n\r\n  /**GET cumulative income growth by month.*/\r\n  getByMonthCumIncome(): Observable<IncomeOverTime[]>\r\n  {\r\n    const url = `${this.cumUrl}/${this.user.user_id}/?period=monthly`\r\n\r\n    return this.http.get<IncomeOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {\r\n          console.log(`Fetched cumulative income totals by month`);\r\n          this.cumIncByMonth = out;\r\n        }\r\n      \r\n        ),\r\n      catchError(this.handleError<IncomeOverTime[]>(`getIncomeHistoryByMonth`))\r\n    );\r\n  }\r\n\r\n  /**GET income received by month.*/\r\n  getByMonthIncome(): Observable<IncomeOverTime[]>\r\n  {\r\n    const url = `${this.apiUrl}/${this.user.user_id}/?period=monthly`\r\n\r\n    return this.http.get<IncomeOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {\r\n          console.log(`Fetched income totals by month`);\r\n          this.incByMonth = out;\r\n        }\r\n      \r\n        ),\r\n      catchError(this.handleError<IncomeOverTime[]>(`getIncomeHistoryByMonth`))\r\n    );\r\n  }\r\n\r\n  /** GET total income received for current week */\r\n  getCurWeeklyIncome(): Observable<IncomeOverTime[]> {\r\n\r\n    const url = `${this.apiUrl}/${this.user.user_id}/?year=${this.tiServ.year}&month=${this.tiServ.month}&week=${this.tiServ.week}`\r\n    console.log(url)\r\n\r\n    return this.http.get<IncomeOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {console.log(`Fetched current weekly spending total`);\r\n        if (out.length > 0)\r\n        {\r\n          this.weeklyIncomeTotal = out[0].totalIncomeReceived;\r\n        }\r\n        else\r\n        {\r\n          this.weeklyIncomeTotal = 0;\r\n        }   \r\n      \r\n        }),\r\n      catchError(this.handleError<IncomeOverTime[]>(`getIncomeHistoryForCurrentWeek`))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n   private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for receipt consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {MessageService as MS} from 'primeng/api';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessageService {\r\n\r\n  constructor(private messageService: MS) {}\r\n\r\n\r\n  addError(summary: string, details: any) {\r\n    this.messageService.add({severity:'error', life: 10000, summary:summary, detail:details});\r\n  }\r\n\r\n  addSuccess(summary: string, detail: string) {\r\n    this.messageService.add({severity:'success', life: 10000, summary:summary, detail:detail});\r\n  }\r\n\r\n  addInfo(summary: string, detail: string) {\r\n    this.messageService.add({severity:'info', life: 10000, summary:summary, detail:detail});\r\n  }\r\n\r\n  clear() {\r\n    this.messageService.clear()\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport { User } from '../models/user';\r\nimport { TimeService } from './time.service';\r\nimport { SavingsOverTime } from '../models/savingsOverTime';\r\nimport { Receipt } from '../models/receipt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReceiptUploadService {\r\n\r\n  private apiUrl = 'api/receipt_upload/';  // URL to web api\r\n\r\n  user: User | null = null;\r\n\r\n  get recUplURL()\r\n  {\r\n    return this.apiUrl\r\n  }\r\n\r\n  constructor(private http: HttpClient, private auServ: AuthService, private tiServ: TimeService) { \r\n    this.auServ.currentUser.subscribe(x => this.user = <User>x);\r\n\r\n\r\n  }\r\n\r\n  /**Send a batch of receipts images or PDFs to Django to be converted into digital receipt records.*/\r\n  convertReceiptBatch(files: any[]): Observable<Receipt[]> {\r\n    return this.http.post<any[]>(this.apiUrl, files).pipe(\r\n      tap((convertedReceipts: Receipt[]) => console.log(`Received converted receipts: ${convertedReceipts}.`)),\r\n      catchError(this.handleError<Receipt[]>('convertBatchReceipt'))\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n   private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for receipt consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Receipt } from '../models/receipt';\r\nimport { MessageService } from './message.service';\r\nimport { QuickReceipt } from '../models/simReceipt';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ReceiptService {\r\n\r\n  private receiptsUrl = 'api/receipts/';  // URL to web api\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService) { }\r\n\r\n  /** GET receipts from the server */\r\n  getReceipts(): Observable<Receipt[]> {\r\n    return this.http.get<Receipt[]>(this.receiptsUrl)\r\n      .pipe(\r\n        tap(_ => console.log('fetched receipts')),\r\n        catchError(this.handleError<Receipt[]>('getReceipts', []))\r\n      );\r\n  }\r\n\r\n  /** GET receipt by id. Return `undefined` when id not found */\r\n  getReceiptNo404<Data>(id: number): Observable<Receipt> {\r\n    const url = `${this.receiptsUrl}/?id=${id}`;\r\n    return this.http.get<Receipt[]>(url)\r\n      .pipe(\r\n        map(receipts => receipts[0]), // returns a {0|1} element array\r\n        tap(h => {\r\n          const outcome = h ? `fetched` : `did not find`;\r\n          console.log(`${outcome} receipt id=${id}`);\r\n        }),\r\n        catchError(this.handleError<Receipt>(`getReceipt id=${id}`))\r\n      );\r\n  }\r\n\r\n  /** GET receipt by id. Will 404 if id not found */\r\n  getReceipt(id: number): Observable<Receipt> {\r\n    const url = `${this.receiptsUrl}/${id}`;\r\n    return this.http.get<Receipt>(url).pipe(\r\n      tap(_ => console.log(`fetched receipt id=${id}`)),\r\n      catchError(this.handleError<Receipt>(`getReceipt id=${id}`))\r\n    );\r\n  }\r\n\r\n  /* GET receipts whose name contains search term */\r\n  searchReceipts(term: string): Observable<Receipt[]> {\r\n    if (!term.trim()) {\r\n      // if not search term, return empty receipt array.\r\n      return of([]);\r\n    }\r\n    return this.http.get<Receipt[]>(`${this.receiptsUrl}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n         console.log(`found receipts matching \"${term}\"`) :\r\n         console.log(`no receipts matching \"${term}\"`)),\r\n      catchError(this.handleError<Receipt[]>('searchReceipts', []))\r\n    );\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new itemized receipt with multiple expenses and incomes to the server */\r\n  addReceipt(receipt: Receipt): Observable<Receipt> {\r\n    return this.http.post<Receipt>(this.receiptsUrl, receipt, this.httpOptions).pipe(\r\n      tap((newReceipt: Receipt) => console.log(`added receipt w/ id=${newReceipt.receipt_id}`)),\r\n      catchError(this.handleError<Receipt>('addReceipt'))\r\n    );\r\n  }\r\n\r\n  /** POST: add a new simple receipt with only a total amount */\r\n  addQuickReceipt(receipt: QuickReceipt): Observable<QuickReceipt> {\r\n    return this.http.post<QuickReceipt>(`${this.receiptsUrl}Simple`, receipt, this.httpOptions).pipe(\r\n      tap((newReceipt: QuickReceipt) => console.log(`added receipt w/ id=${newReceipt.receipt_id}`)),\r\n      catchError(this.handleError<QuickReceipt>('addReceipt'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the receipt from the server */\r\n  deleteReceipt(id: number): Observable<Receipt> {\r\n    const url = `${this.receiptsUrl}/${id}`;\r\n\r\n    return this.http.delete<Receipt>(url, this.httpOptions).pipe(\r\n      tap(_ => console.log(`deleted receipt id=${id}`)),\r\n      catchError(this.handleError<Receipt>('deleteReceipt'))\r\n    );\r\n  }\r\n\r\n  /** PUT: update the receipt on the server */\r\n  updateReceipt(receipt: Receipt): Observable<any> {\r\n    return this.http.put(this.receiptsUrl, receipt, this.httpOptions).pipe(\r\n      tap(_ => console.log(`updated receipt id=${receipt.receipt_id}`)),\r\n      catchError(this.handleError<any>('updateReceipt'))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for receipt consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a ReceiptService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`ReceiptService: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport { User } from '../models/user';\r\nimport { TimeService } from './time.service';\r\nimport { SavingsOverTime } from '../models/savingsOverTime';\r\nimport { ReceiptTrackService } from '../widget/services/receipt-track.service';\r\nimport { Receipt } from '../models/receipt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SavingsHistoryService {\r\n\r\n  private apiUrl = 'api/savings_history';  // URL to web api\r\n  private cumUrl = 'api/cum_savings_history';\r\n  user: User | null = null;\r\n  private weeklySavingsTotal: number;\r\n  private cumSav: SavingsOverTime[]\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(private http: HttpClient, private rs: ReceiptTrackService, private auServ: AuthService, private tiServ: TimeService) { \r\n    this.auServ.currentUser.subscribe(x => this.user = <User>x);\r\n\r\n\r\n  }\r\n\r\n    //Update amounts given new receipt\r\n    updateValues(re: Receipt, mode: string)\r\n    {\r\n      let date = new Date(re.receipt.receipt_date)\r\n      let month = date.getMonth() + 1\r\n      let week = this.tiServ.getWeek(date)\r\n      let total = this.rs.getTotal(re)\r\n      switch (mode)\r\n      {\r\n        case \"delete\":\r\n          total = -1 * total;\r\n          break;\r\n        case \"update\":\r\n          total = total - re.preTotal\r\n          break;\r\n      }\r\n  \r\n     \r\n      \r\n        if (date.getFullYear() == this.tiServ.year && month == this.tiServ.month)\r\n        {\r\n          if (this.tiServ.getWeek(date) == this.tiServ.week)\r\n          {\r\n            re.receipt.receipt_is_income ? this.weeklySavingsTotal += total : this.weeklySavingsTotal -= total;\r\n          }    \r\n        }\r\n        \r\n        var found = false;\r\n        for (let i in this.cumSav)\r\n        {\r\n          let itDate = this.tiServ.getDate(this.cumSav[i].week, this.cumSav[i].year)\r\n          let comDate = this.tiServ.getDate(this.tiServ.getWeek(date), date.getFullYear())\r\n\r\n          if (itDate >= comDate)\r\n          {\r\n            found = true;\r\n            re.receipt.receipt_is_income ? this.cumSav[i].totalSavings += total : this.cumSav[i].totalSavings -= total;\r\n          }\r\n        }\r\n        if (!found)\r\n        {\r\n          if (re.receipt.receipt_is_income)\r\n          {\r\n            this.cumSav.push({year: date.getFullYear(), month: month, week: week, totalSavings: total});\r\n          }\r\n          else\r\n          {\r\n            this.cumSav.push({year: date.getFullYear(), month: month, week: week, totalSavings: -1 * total});\r\n          }\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n  get weekSavings()\r\n  {\r\n    return this.weeklySavingsTotal;\r\n  }\r\n\r\n  get cumSavings()\r\n  {\r\n    return this.cumSav;\r\n  }\r\n\r\n  /**GET cumulative savings growth.*/\r\n  getCumSavings(): Observable<SavingsOverTime[]>\r\n  {\r\n    const url = `${this.cumUrl}/${this.user.user_id}/?period=weekly`\r\n\r\n    return this.http.get<SavingsOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {\r\n          console.log(`Fetched cumulative savings totals by week`);\r\n          this.cumSav = out;\r\n        }\r\n      \r\n        ),\r\n      catchError(this.handleError<SavingsOverTime[]>(`getSavingsHistoryForCurrentWeek`))\r\n    );\r\n  }\r\n\r\n  /** GET total savings received for current week */\r\n  getCurWeeklySavings(): Observable<SavingsOverTime[]> {\r\n\r\n    const url = `${this.apiUrl}/${this.user.user_id}/?year=${this.tiServ.year}&month=${this.tiServ.month}&week=${this.tiServ.week}`\r\n\r\n    return this.http.get<SavingsOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {console.log(`Fetched current weekly spending total`);\r\n        if (out.length > 0)\r\n        {\r\n          this.weeklySavingsTotal = out[0].totalSavings;\r\n        }\r\n        else\r\n        {\r\n          this.weeklySavingsTotal = 0;\r\n        }   \r\n      \r\n        }),\r\n      catchError(this.handleError<SavingsOverTime[]>(`getSavingsHistoryForCurrentWeek`))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n   private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for receipt consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { SpendingOverTime } from '../models/spendingOverTime'\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport { User } from '../models/user';\r\nimport { TimeService } from './time.service';\r\nimport { QuickReceipt } from '../models/simReceipt';\r\nimport { Receipt } from '../models/receipt';\r\nimport { ReceiptTrackService } from '../widget/services/receipt-track.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpendingHistoryService {\r\n\r\n  private apiUrl = 'api/spend_history';  // URL to web api\r\n  private cumUrl = 'api/cum_spend_history';\r\n  user: User | null = null;\r\n  private weeklySpendingTotal: number;\r\n  private cumSpenByMonth: SpendingOverTime[];\r\n  private spenByMonth: SpendingOverTime[];\r\n  private catSpendByMonth: SpendingOverTime[];\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(private http: HttpClient, \r\n    private rs: ReceiptTrackService,\r\n    private auServ: AuthService, private tiServ: TimeService) { \r\n    this.auServ.currentUser.subscribe(x => this.user = <User>x);\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n  get weekSpend()\r\n  {\r\n    return this.weeklySpendingTotal;\r\n  }\r\n\r\n  set weekSpend(value)\r\n  {\r\n    this.weeklySpendingTotal = value;\r\n  }\r\n\r\n  get cumSpendingsByMonth()\r\n  {\r\n    return this.cumSpenByMonth;\r\n  }\r\n\r\n  get spendByMonth()\r\n  {\r\n    return this.spenByMonth;\r\n  }\r\n\r\n  get catSpenByMonth()\r\n  {\r\n    return this.catSpendByMonth;\r\n  }\r\n\r\n  //Update amounts given new receipt\r\n  updateValues(re: Receipt, mode: string)\r\n  {\r\n    let date = new Date(re.receipt.receipt_date)\r\n    let month = date.getMonth() + 1\r\n    let total = this.rs.getTotal(re)\r\n    switch (mode)\r\n    {\r\n      case \"delete\":\r\n        total = -1 * total;\r\n        break;\r\n      case \"update\":\r\n        total = total - re.preTotal\r\n        break;\r\n    }\r\n\r\n    if (!re.receipt.receipt_is_income)\r\n    {\r\n      if (date.getFullYear() == this.tiServ.year && month == this.tiServ.month)\r\n      {\r\n        if (this.tiServ.getWeek(date) == this.tiServ.week)\r\n        {\r\n          this.weeklySpendingTotal += total;\r\n        }    \r\n      }\r\n      for (let exp of re.expenses)\r\n      {\r\n        let i = this.catSpendByMonth.findIndex(val => val.year == date.getFullYear() && val.month == month && \r\n        val.category_id == exp.category_id)\r\n        if (i >= 0)\r\n        {\r\n          this.catSpendByMonth[i].totalSpent += exp.expense_price;\r\n        }\r\n        else\r\n        {\r\n          this.catSpendByMonth.push({year: date.getFullYear(), month: month, category_id: exp.category_id, totalSpent: exp.expense_price})\r\n        }\r\n      }\r\n\r\n      let i = this.spenByMonth.findIndex(val => val.year == date.getFullYear() && val.month == month)\r\n      if (i >= 0)\r\n      {\r\n        this.spenByMonth[i].totalSpent += total;\r\n      }\r\n      else\r\n      {\r\n        this.spenByMonth.push({year: date.getFullYear(), month: month, totalSpent: total})\r\n      }\r\n     \r\n      var found = false;\r\n      for (let i in this.cumSpenByMonth)\r\n      {\r\n        if ((this.cumSpenByMonth[i].year == date.getFullYear() && this.cumSpenByMonth[i].month >= month)\r\n          || this.cumSpenByMonth[i].year > date.getFullYear())\r\n        {\r\n          found = true;\r\n          this.cumSpenByMonth[i].totalSpent += total;\r\n        }\r\n      }\r\n      if (!found)\r\n      {\r\n        this.cumSpenByMonth.push({year: date.getFullYear(), month: month, totalSpent: total})\r\n      }\r\n      \r\n    }\r\n    \r\n    \r\n\r\n  }\r\n\r\n  /**GET spending by category within each month */\r\n  getSpendCatBreakdown(): Observable<SpendingOverTime[]>\r\n  {\r\n    const url = `${this.apiUrl}/${this.user.user_id}/?period=monthly&category_breakdown=true`\r\n\r\n    return this.http.get<SpendingOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {\r\n          console.log(`Fetched spending totals with category breakdown by month`);\r\n          this.catSpendByMonth = out;\r\n        }\r\n      \r\n        ),\r\n      catchError(this.handleError<SpendingOverTime[]>(`getSpendingsHistory`))\r\n    );\r\n  }\r\n\r\n  /**GET cumulative spending growth by month.*/\r\n  getByMonthCumSpendings(): Observable<SpendingOverTime[]>\r\n  {\r\n    const url = `${this.cumUrl}/${this.user.user_id}/?period=monthly`\r\n\r\n    return this.http.get<SpendingOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {\r\n          console.log(`Fetched cumulative spending totals by month`);\r\n          this.cumSpenByMonth = out;\r\n        }\r\n      \r\n        ),\r\n      catchError(this.handleError<SpendingOverTime[]>(`getSpendingsHistory`))\r\n    );\r\n  }\r\n\r\n  /**GET spending by month.*/\r\n  getByMonthSpendings(): Observable<SpendingOverTime[]>\r\n  {\r\n    const url = `${this.apiUrl}/${this.user.user_id}/?period=monthly`\r\n\r\n    return this.http.get<SpendingOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {\r\n          console.log(`Fetched spending totals by month`);\r\n          this.spenByMonth = out;\r\n        }\r\n      \r\n        ),\r\n      catchError(this.handleError<SpendingOverTime[]>(`getSpendingsHistory`))\r\n    );\r\n  }\r\n\r\n  /** GET total spending for current week */\r\n  getCurWeekSpend(): Observable<SpendingOverTime[]> {\r\n\r\n    const url = `${this.apiUrl}/${this.user.user_id}/?year=${this.tiServ.year}&month=${this.tiServ.month}&week=${this.tiServ.week}`\r\n    console.log(url)\r\n\r\n    return this.http.get<SpendingOverTime[]>(url).pipe(\r\n      tap(out => \r\n        {console.log(`Fetched current weekly spending total`);\r\n        if (out.length > 0)\r\n        {\r\n          this.weeklySpendingTotal = out[0].totalSpent;\r\n        }\r\n        else\r\n        {\r\n          this.weeklySpendingTotal = 0;\r\n        }   \r\n      \r\n        }),\r\n      catchError(this.handleError<SpendingOverTime[]>(`getSpendOverTimeForCurrentWeek`))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n   private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for receipt consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { WeeklySpendingComponent } from '../widget/weekly-spending/weekly-spending.component';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TimeService {\r\n\r\n  private now: Date = new Date()\r\n  private curWeek: number;\r\n  private curMonth: number;\r\n  private curYear: number;\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  minYear: number;\r\n  maxYear: number;\r\n\r\n  constructor(private authServ: AuthService) { \r\n    this.minDate = new Date(this.authServ.currentUserValue.user_registration_date)\r\n    this.minYear = this.minDate.getFullYear()\r\n    this.maxDate = this.now;\r\n    this.maxYear = this.year;\r\n  }\r\n\r\n  get week()\r\n  {\r\n    if(this.curWeek == null)\r\n    {\r\n      this.curWeek = this.getWeek(new Date(this.now.getTime()))\r\n    }\r\n    return this.curWeek\r\n  }\r\n\r\n  get month()\r\n  {\r\n    if(this.curMonth == null)\r\n    {\r\n      this.curMonth = this.getMonth()\r\n    }\r\n    return this.curMonth;\r\n  }\r\n\r\n  get year()\r\n  {\r\n    if(this.curYear == null)\r\n    {\r\n      this.curYear = this.getYear()\r\n    }\r\n    return this.curYear;\r\n  }\r\n\r\n  getToday()\r\n  {\r\n    return this.now;\r\n  }\r\n\r\n  // Returns the ISO week of the date.\r\n  getWeek(date: Date) {\r\n    //var date = new Date(this.now.getTime());\r\n    date.setHours(0, 0, 0, 0);\r\n    // Thursday in current week decides the year.\r\n    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n    // January 4 is always in week 1.\r\n    var week1 = new Date(date.getFullYear(), 0, 4);\r\n    // Adjust to Thursday in week 1 and count number of weeks from date to week1.\r\n    return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000\r\n                          - 3 + (week1.getDay() + 6) % 7) / 7);\r\n  }\r\n\r\n  getDate(w: number, y: number)\r\n  {\r\n    var simple = new Date(y, 0, 1 + (w - 1) * 7);\r\n    var dow = simple.getDay();\r\n    var ISOweekStart = simple;\r\n    if (dow <= 4)\r\n        ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\r\n    else\r\n        ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\r\n    return ISOweekStart;\r\n  }\r\n\r\n  //return number of days in specified month\r\n  getNumDays(year: number, month: number)\r\n  {\r\n    return new Date(year, month, 0).getDate()\r\n  }\r\n\r\n  // Returns ISO month of the date\r\n  getMonth()\r\n  {\r\n    return this.now.getMonth() + 1;\r\n  }\r\n\r\n  // Returns ISO year of the date\r\n  getYear()\r\n  {\r\n    return this.now.getFullYear();\r\n  }\r\n}\r\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Budget } from '../models/budget';\r\nimport { Category } from '../models/category';\r\nimport { Challenge } from '../models/Challenge';\r\nimport { Receipt } from '../models/receipt';\r\nimport { QuickReceipt } from '../models/simReceipt';\r\nimport { BudgetService } from './budget.service';\r\nimport { ChallengesService } from './challenges.service';\r\nimport { IncomeHistoryService } from './income-history.service';\r\nimport { SavingsHistoryService } from './savings-history.service';\r\nimport { SpendingHistoryService } from './spending-history.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TriggerService {\r\n\r\n  // Observable sources\r\n  private expenReceiptChange = new Subject<Receipt>();\r\n  private incomReceiptChange = new Subject<Receipt>();\r\n\r\n  private challAnnounce = new Subject<void>();\r\n  private levelAnnounce = new Subject<void>();\r\n  private budgetUpdateAnnounce = new Subject<Budget[]>();\r\n  private favoritesAnnounce = new Subject<void>();\r\n  private challComplete = new Subject<Challenge>();\r\n\r\n  //Observable streams\r\n  levelGained$ = this.levelAnnounce.asObservable();\r\n  expenReceiptChanged$ = this.expenReceiptChange.asObservable();\r\n  incomReceiptChanged$ = this.incomReceiptChange.asObservable();\r\n  favoritesAnnounced$ = this.favoritesAnnounce.asObservable();\r\n  budgetUpdatedAnnounced$ = this.budgetUpdateAnnounce.asObservable();\r\n  challAnnounced$ = this.challAnnounce.asObservable();\r\n  challCompletedAnnounced$ = this.challComplete.asObservable();\r\n\r\n  async announceChallengeUpdate()\r\n  {\r\n    await (this.challServ.getChallenges().toPromise());\r\n    this.challAnnounce.next();\r\n\r\n    this.findNewCompleted(this.challServ.pre_Inv, this.challServ.challenges);\r\n  }\r\n\r\n  async announceChallengeComplete(chall: Challenge)\r\n  {\r\n    this.challComplete.next(chall);\r\n\r\n    if (this.challServ.preLev_Prog.level < this.challServ.levProgress.level)\r\n    {\r\n      this.announceLevelGain();\r\n    }\r\n  }\r\n\r\n  async announceLevelGain()\r\n  {\r\n    this.levelAnnounce.next();\r\n  }\r\n\r\n  announceBudgetUpdate(budgets: Budget[])\r\n  {\r\n    this.budServ.updateValues(budgets)\r\n    \r\n    this.budgetUpdateAnnounce.next();\r\n  }\r\n\r\n  announceFavoritesChange(favorites: Category[], shouldUpWid: boolean)\r\n  {\r\n    this.budServ.updateFavorites(favorites)\r\n    if (shouldUpWid)\r\n    {\r\n      this.budgetUpdateAnnounce.next();\r\n    }\r\n  }\r\n\r\n announceReceiptDelete(rec: Receipt)\r\n{\r\n  this.recDeleteProcess(rec);\r\n\r\n  rec.operation = \"delete\"\r\n\r\n  rec.receipt.receipt_is_income ? this.incomReceiptChange.next(rec) : this.expenReceiptChange.next(rec)\r\n  \r\n}\r\n\r\n  recDeleteProcess(rec: Receipt)\r\n  {\r\n    if (rec.receipt.receipt_is_income)\r\n    {\r\n      this.incHis.updateValues(rec, \"delete\");\r\n    }\r\n    else\r\n    {\r\n      this.spenHis.updateValues(rec, \"delete\");\r\n    }\r\n    this.savHis.updateValues(rec, \"delete\");\r\n  }\r\n\r\n  recAddProcess(rec: Receipt)\r\n  {\r\n    if (rec.receipt.receipt_is_income)\r\n    {\r\n      this.incHis.updateValues(rec, \"new\");\r\n    }\r\n    else\r\n    {\r\n      this.spenHis.updateValues(rec, \"new\")\r\n    }\r\n    this.savHis.updateValues(rec, \"new\")\r\n  }\r\n\r\n announceReceiptUpdate(oldReceipt: Receipt, rec: Receipt)\r\n  {\r\n\r\n      this.recDeleteProcess(oldReceipt)\r\n      this.recAddProcess(rec);  \r\n\r\n       rec.operation = \"update\"\r\n\r\n      rec.receipt.receipt_is_income ? this.incomReceiptChange.next(rec) : this.expenReceiptChange.next(rec)\r\n  }\r\n\r\n  announceExpenReceiptSubmit(rec: Receipt)\r\n  {\r\n\r\n    this.checkTrigger('record_expense')\r\n\r\n    this.recAddProcess(rec)\r\n\r\n    rec.operation = \"new\"\r\n\r\n    this.expenReceiptChange.next(rec);\r\n  }\r\n\r\n  announceIncomReceiptSubmit(rec: Receipt)\r\n  {\r\n\r\n    this.checkTrigger('record_income')\r\n    \r\n    this.recAddProcess(rec)\r\n    rec.operation = \"new\"\r\n\r\n    this.incomReceiptChange.next(rec);\r\n  }\r\n\r\n  checkTrigger(type: string)\r\n  {\r\n    if (this.challServ.trigs.has(type))\r\n    {\r\n      this.announceChallengeUpdate();\r\n    }\r\n  }\r\n\r\n  //Compares old and new challenge inventory to check whether any challenges that were previously active and still in progress\r\n  // are now complete.\r\n  findNewCompleted(oldInv: Challenge[], newInv: Challenge[]): void\r\n  {\r\n    let candidates = oldInv.filter(val => val.is_active && val.completion_date == null).map(val => val.id)\r\n\r\n    newInv.filter(val => val.is_active && val.completion_date != null).forEach((val) => {\r\n      if (candidates.includes(val.id))\r\n      {\r\n        this.announceChallengeComplete(val);\r\n      }\r\n    })\r\n  }\r\n\r\n  constructor(private spenHis: SpendingHistoryService, private savHis: SavingsHistoryService,\r\n    private incHis: IncomeHistoryService, private challServ: ChallengesService,\r\n    private budServ: BudgetService) { }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { UIChart } from 'primeng/chart';\r\nimport {Chart} from 'chart.js';\r\nimport { Category } from 'src/app/models/category';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { IncomeHistoryService } from 'src/app/services/income-history.service';\r\nimport { TimeService } from 'src/app/services/time.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport { BudgetCategory } from 'src/app/models/formModels/budgetCategory';\r\nimport { Budget } from 'src/app/models/budget';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-actual-vs-est-income',\r\n  templateUrl: './actual-vs-est-income.component.html',\r\n  styleUrls: ['./actual-vs-est-income.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class ActualVsEstIncomeComponent implements OnInit {\r\n  chartData: any;\r\n  chartOptions: any;\r\n  selection: boolean = true;\r\n  dataExists: boolean = false;\r\n  categories: string[] = []\r\n  catOptions: Budget[] = []\r\n  selectedCats: Budget[] = []\r\n  estIncValues: number[];\r\n  actIncValues: number[] = []\r\n  selDate: Date = new Date();\r\n  today: Date = new Date();\r\n  regDate: Date;\r\n  yearRange: string;\r\n\r\n  @ViewChild('chart3') chart: UIChart;\r\n\r\n  constructor(private budServ: BudgetService,\r\n    private incServ: IncomeHistoryService,\r\n    private athServ: AuthService,\r\n    private catServ: CategoryService,\r\n    private trigServ: TriggerService, public ts: TimeService) { \r\n      this.regDate = new Date(this.athServ.currentUserValue.user_registration_date)\r\n      this.yearRange = this.regDate.getFullYear() + \":\" + this.today.getFullYear()\r\n      Chart.register(ChartDataLabels)\r\n      this.catOptions = this.budServ.inBudByCat.filter(val => val.year == this.ts.year && val.month == this.ts.month)\r\n\r\n      this.refreshFavorites();\r\n\r\n      this.trigServ.incomReceiptChanged$.subscribe(() =>\r\n      {\r\n          this.getNewData();\r\n      })\r\n\r\n      this.trigServ.budgetUpdatedAnnounced$.subscribe(() =>\r\n      {\r\n        this.catOptions = this.budServ.inBudByCat.filter(val => val.year == this.ts.year && val.month == this.ts.month)\r\n\r\n        this.refreshFavorites();\r\n\r\n        this.getNewData();\r\n      })\r\n  }\r\n\r\n  refreshFavorites()\r\n  {\r\n    this.selectedCats = this.catOptions.filter(val => val.is_favorite);\r\n\r\n    if (this.budServ.noIncFavorites)\r\n    {\r\n      this.selection = false;\r\n    }\r\n  }\r\n\r\n  setupValues()\r\n  {\r\n\r\n    this.actIncValues = []\r\n    this.estIncValues = []\r\n    this.categories = []\r\n\r\n    let estIncData = this.budServ.inBudByCat.filter(value => value.year == this.selDate.getFullYear() && value.month == this.selDate.getMonth() + 1)\r\n\r\n    let acIncdData = this.incServ.catIncomeByMonth.filter(value => value.year == this.selDate.getFullYear() && value.month == this.selDate.getMonth() + 1)\r\n    for (let i of this.selectedCats)\r\n    {\r\n      let acIncValue = acIncdData.find(value => value.category_id == i.category_id)\r\n      let estIncValue = estIncData.find(value => value.categoryTitle == i.categoryTitle)\r\n\r\n      if (acIncValue || estIncValue)\r\n      {\r\n        this.categories.push(i.categoryTitle)\r\n        acIncValue ? this.actIncValues.push(acIncValue.totalIncomeReceived) : this.actIncValues.push(0)\r\n        estIncValue ? this.estIncValues.push(estIncValue.altered_amount) : this.estIncValues.push(0)\r\n      }\r\n      \r\n    }\r\n\r\n    if (estIncData.length == 0 && acIncdData.length == 0)\r\n    {\r\n      this.dataExists = false;\r\n    }\r\n    else\r\n    {\r\n      this.dataExists = true;\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  \r\n    this.setupValues();\r\n\r\n    //TODO: Implement http request\r\n    this.chartData = {\r\n      labels: this.categories,\r\n      datasets: [\r\n          {\r\n              label: 'Actual Income',\r\n              data: this.actIncValues,\r\n              fill: true,\r\n              barPercentage: 0.9,\r\n              backgroundColor: (context) => {   \r\n                  let sum = this.actIncValues[context.dataIndex]\r\n                  let value = this.estIncValues[context.dataIndex]\r\n                  let percentage = (sum*100 / value);\r\n                  return this.getColorLight(percentage)\r\n              },\r\n              tension: 0,\r\n              \r\n          },\r\n          {\r\n            label: 'Estimated Income',\r\n            data: this.estIncValues,\r\n            fill: true,\r\n            backgroundColor: 'rgba(78, 197, 202, 0.15)',\r\n            barPercentage: 1,\r\n            tension: 0,\r\n            \r\n        },\r\n      ]\r\n  };\r\n\r\n  this.chartOptions = {\r\n    plugins: {\r\n        datalabels: {\r\n          align: 'center',\r\n          anchor: 'center',\r\n          backgroundColor: (context) => {\r\n           \r\n              let sum = this.actIncValues[context.dataIndex]\r\n              let value = this.estIncValues[context.dataIndex]\r\n              let percentage = (sum*100 / value);\r\n              return this.getColor(percentage)\r\n            \r\n        },\r\n          borderRadius: 4,\r\n          font: {\r\n            weight: 'bold'\r\n          },\r\n          display: (context) => {\r\n           // console.log(context)\r\n              if (context.dataset.label == 'Estimated Income' && this.estIncValues[context.dataIndex] > this.actIncValues[context.dataIndex])\r\n              {\r\n                return true;\r\n              }\r\n              else if (context.dataset.label == 'Actual Income' && this.actIncValues[context.dataIndex] > this.estIncValues[context.dataIndex])\r\n              {\r\n                return true;\r\n              }\r\n              return false;\r\n              \r\n          },\r\n          formatter: (value, context) => {\r\n             \r\n               // console.log(value)\r\n                let sum = this.actIncValues[context.dataIndex]\r\n                let val = this.estIncValues[context.dataIndex]\r\n                let percentage = (sum*100 / val).toFixed(2)+\"%\";\r\n                return percentage;\r\n          },\r\n          color: 'white',\r\n      },\r\n        legend: {\r\n            display: true,\r\n        }\r\n    },\r\n    scales: {\r\n        x: {\r\n          stacked: true,\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Categories',\r\n                font: {\r\n                    size: 20\r\n                }\r\n            },\r\n            grid: { display: false }\r\n        },\r\n        y: {\r\n          stacked: false,\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Amount (in $)',\r\n                font: {\r\n                    size: 20\r\n                }\r\n            },\r\n            grid: { display: false }\r\n        }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n    async getNewData()\r\n    {\r\n        this.setupValues()\r\n        this.chartData.labels = this.categories\r\n        this.chartData.datasets[0].data = this.actIncValues\r\n        this.chartData.datasets[1].data = this.estIncValues\r\n        this.chart.refresh();\r\n    }\r\n\r\n    getColor(num: number)\r\n    {\r\n      if (num <= 100)\r\n      {\r\n        return 'rgba(44, 28, 150, 1)'\r\n\r\n      }\r\n      else\r\n      {\r\n        return 'rgba(76, 192, 94, 1)'\r\n      }\r\n    }\r\n\r\n    getColorLight(num: number)\r\n    {\r\n      if (num <= 100)\r\n      {\r\n        return 'rgba(44, 28, 150, 0.35)'\r\n\r\n      }\r\n      else\r\n      {\r\n        return 'rgba(76, 192, 94, 0.35)'\r\n      }\r\n    }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Actual vs. Estimated Income</h2> \r\n        </div>\r\n\r\n        <div style=\"position: relative;\">\r\n            <div *ngIf=\"!dataExists\" class=\"centerUn\">\r\n                <span>There is no data to display because there are neither logged incomes nor estimated budget incomes for the selected month.</span>\r\n            </div>\r\n            <div *ngIf=\"selectedCats.length == 0\" class=\"centerUn\">\r\n                <span>Please select at least one category.</span>\r\n            </div>\r\n            <p-chart [ngStyle]=\"{'visibility': selectedCats.length > 0 && dataExists ? 'visible' : 'hidden'}\" #chart3 type=\"bar\" [data]=\"chartData\" [options]=\"chartOptions\"></p-chart>\r\n          \r\n        </div>\r\n        \r\n        <div class=\"formgroup-inline\" style=\"margin-top: 15px;\"> \r\n           \r\n                <label class=\"col-fixed\" style=\"width:65px; margin-top: 3px;\" for=\"month\" >Month</label>\r\n                <p-calendar id=\"month\" inputId=\"month\" \r\n                class=\"inputfield\" [(ngModel)]=\"selDate\" view=\"month\" [showOtherMonths]=\"false\" [minDate]=\"ts.minDate\" [maxDate]=\"ts.maxDate\" (onSelect)=\"getNewData()\" dateFormat=\"mm/yy\"></p-calendar>\r\n           \r\n            <div class=\"field\">\r\n                <label for=\"cat\" >Categories</label>\r\n                <p-multiSelect [options]=\"catOptions\" class=\"inputfield\" [(ngModel)]=\"selectedCats\"\r\n                [maxSelectedLabels]=\"0\" [selectedItemsLabel]=\"'{0} items selected'\" \r\n                (onChange)=\"getNewData()\" \r\n                inputId=\"cat\"\r\n                optionLabel=\"categoryTitle\"></p-multiSelect>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-available-challenges',\r\n  templateUrl: './available-challenges.component.html',\r\n  styleUrls: ['./available-challenges.component.scss','./../small-widget/small-widget.component.scss']\r\n})\r\nexport class AvailableChallengesComponent implements OnInit {\r\n\r\n  challenges: any[] //will be of type ChallengePackage (but too complicated to implement w/out just retrieving data)\r\n\r\n  constructor() {\r\n      //TO DO: implement w/ API\r\n      this.challenges = [\r\n        {\r\n          challenge__challenge_completion_amount: 7,\r\n          challenge_value_label: 'days',\r\n          challenge__challenge_description: 'Track spending every day for one week',\r\n          challenge__challenge_is_active: true,\r\n          challenge__challenge_name: \"Daily Tracker\",\r\n          challenge__challenge_start_amount: 0,\r\n          challenge__challenge_time_given: 7,\r\n          user_challenge_current_amount: 5,\r\n          currentProgress: Math.floor((5 / 7) * 100),\r\n          user_challenge_completion_date: \"3/27/22\"\r\n        },\r\n        {\r\n          challenge__challenge_completion_amount: 4,\r\n          challenge_value_label: 'weeks',\r\n          challenge__challenge_description: 'Stay 25% under budget each week for one month',\r\n          challenge__challenge_is_active: true,\r\n          challenge__challenge_name: \"Savvy Saver\",\r\n          challenge__challenge_start_amount: 0,\r\n          challenge__challenge_time_given: 31,\r\n          user_challenge_current_amount: 1,\r\n          currentProgress: Math.floor((1 / 4) * 100),\r\n          user_challenge_completion_date: \"4/12/22\"\r\n        }\r\n      ]\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Available Challenges</h2> \r\n        </div>\r\n        <div *ngFor=\"let x of challenges\" style=\"text-align: left;\">\r\n            <h3 style=\"width: 100%\">{{x.challenge__challenge_name}}</h3>\r\n            <p>{{x.challenge__challenge_description}}</p>\r\n            <button style=\"width: 100%; background-color:#003486; border-color:#003486;\">Activate</button>\r\n            <br>\r\n        </div>\r\n        <br>\r\n    </div>\r\n</div>\r\n","import { AvatarEditor } from './../../models/avatarEditor';\r\nimport { UserService } from './../../services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-avatar-editor',\r\n  templateUrl: './avatar-editor.component.html',\r\n  styleUrls: ['./avatar-editor.component.scss']\r\n})\r\nexport class AvatarEditorComponent implements OnInit {\r\n  currentAvatar: string = ''\r\n  hatOptions: AvatarEditor[];\r\n  glassesOptions: AvatarEditor[];\r\n  accessoryOptions: AvatarEditor[];\r\n\r\n  hat: AvatarEditor;\r\n  glasses: AvatarEditor;\r\n  accessory: AvatarEditor;\r\n  colorOptions: string[];\r\n  color: string;\r\n\r\n\r\n  constructor() { \r\n\r\n    this.currentAvatar = './../../../assets/accessories/blueCap-blueGlasses@4x.png'\r\n\r\n    this.colorOptions = [\r\n      'Red', 'Blue'\r\n    ]\r\n\r\n    this.hatOptions = [\r\n      {name: 'Cap', item: 'blueCap'},\r\n      {name: 'Top Hat', item: 'topHat'},\r\n      {name: 'Flower', item: 'flower'},\r\n      {name: 'None', item: 'none'},\r\n    ]\r\n\r\n    this.glassesOptions = [\r\n      {name: 'Glasses', item: 'glasses'},\r\n      {name: 'No Glasses', item: 'none'}\r\n\r\n    ]\r\n\r\n    this.accessoryOptions = [\r\n      {name: 'None', item: 'none'},\r\n      {name: 'Bow Tie', item: 'bowtie'}\r\n    ]\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  pickPicture(){\r\n    this.currentAvatar = './../../../assets/accessories/'\r\n\r\n    if(this.color == 'Red'){\r\n\r\n      if(this.hat.item == 'cap'){\r\n\r\n        if(this.glasses.item == 'glasses'){\r\n          if(this.accessory.item == 'bowtie'){\r\n            //red hat, glassess, bowtie\r\n            this.currentAvatar += 'redCap-redGlasses-redBowtie@4x.png'\r\n          } else {\r\n            //red hat, glasses, no accessory\r\n            this.currentAvatar += 'redCap-redGlasses@4x.png'\r\n          }\r\n        }\r\n\r\n        else {\r\n          //red hat, no glasses \r\n          if(this.accessory.item == 'bowtie'){\r\n            //red hat, glassess, bowtie\r\n            this.currentAvatar += 'redCap-redGlasses-redBowtie@4x.png'\r\n          } else {\r\n            //red hat, glasses, no accessory\r\n            this.currentAvatar += 'redCap-redGlasses@4x.png'\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div style=\"width:25vw; display: inline-flex\">\r\n    <img [src]=\"currentAvatar\" style=\"width: 15vw; margin-left: 5vw\">\r\n    <div style=\"width: 8vw; margin-left: 5vw\">\r\n        <h3>Color</h3>\r\n        <p-dropdown [options]=\"colorOptions\"></p-dropdown>\r\n        <br>\r\n        <h3>Hat</h3>\r\n        <p-dropdown [options]=\"hatOptions\" optionLabel=\"name\" optionValue=\"item\"></p-dropdown>\r\n        <br>\r\n        <h3>Glasses</h3>\r\n        <p-dropdown [options]=\"glassesOptions\" optionLabel=\"name\" optionValue=\"item\"></p-dropdown>\r\n        <h3>Acccessory</h3>\r\n        <p-dropdown [options]=\"accessoryOptions\" optionLabel=\"name\" optionValue=\"item\"></p-dropdown>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Badge } from 'src/app/models/badge';\r\nimport { BadgesEarned } from 'src/app/models/badgesEarned';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { BadgesEarnedService } from 'src/app/services/badgesEarned.service';\r\nimport { ChallengesService } from 'src/app/services/challenges.service';\r\n\r\n@Component({\r\n  selector: 'app-badges-widget',\r\n  templateUrl: './badges-widget.component.html',\r\n  styleUrls: ['./badges-widget.component.scss', './../small-widget/small-widget.component.scss']\r\n})\r\nexport class BadgesWidgetComponent implements OnInit {\r\n  badges!: Badge[];\r\n  allVisible = false;\r\n\r\n  constructor(private chaServ: ChallengesService, au: AuthService) { \r\n\r\n    let userId = au.currentUserValue.user_id;\r\n\r\n\r\n    this.badges = chaServ.challenges.filter(val => val.completion_date != null && val.no_badge == false)\r\n      .map(val => (<Badge>{badge_name: val.badge_name, badge_description: val.description}))\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  viewAll(){\r\n    this.allVisible = true;\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div>\r\n        <div class=\"content-area\">\r\n        <div>\r\n            <h2>Badges</h2> \r\n        </div>\r\n    </div>\r\n       <div class=\"badges\" *ngFor=\"let badge of badges | slice:badges.length - 3; let i=index\">\r\n        <div style=\"display: inline-flex\">\r\n            <img src=\"../../../assets/icons/badge-icon.png\"/>\r\n        <div class=\"descriptions\">\r\n            <p class=\"name\">{{badge.badge_name}}</p>\r\n            <p class=\"description\">{{badge.badge_description}}</p>\r\n        </div>\r\n        </div>\r\n    </div>\r\n        <p class=\"minorButton\" (click)=\"viewAll()\">View All →</p>\r\n    </div>\r\n    \r\n</div>\r\n\r\n<p-dialog class=\"customdialog\" header=\"About\" [(visible)]=\"allVisible\" [style]=\"{width: '10vw'}\" style=\"text-align: center\">\r\n    <div>\r\n        <div>\r\n        <div>\r\n            <h2>Badges</h2> \r\n        </div>\r\n    </div>\r\n       <div class=\"badges\" *ngFor=\"let badge of badges\">\r\n        <div style=\"display: inline-flex; padding-left: 6vw\">\r\n            <img src=\"../../../assets/icons/badge-icon.png\"/>\r\n        <div class=\"descriptions\">\r\n            <p class=\"name\">{{badge.badge_name}}</p>\r\n            <p class=\"description\" style=\"max-width: 20vw !important\">{{badge.badge_description}}</p>\r\n        </div>\r\n        </div>\r\n    </div>\r\n        <p class=\"minorButton\" (click)=\"viewAll()\">View All →</p>\r\n    </div>\r\n</p-dialog>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-basic-widget',\r\n  templateUrl: './basic-widget.component.html',\r\n  styleUrls: ['./basic-widget.component.scss']\r\n})\r\nexport class BasicWidgetComponent implements OnInit {\r\n  @Input() image: string | undefined;\r\n  @Input() title: string = '';\r\n  @Input() subtitle: string | undefined;\r\n  @Input() smallSize: boolean = false;\r\n\r\n  \r\n  imageUrl: string ='';\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  overlay(){\r\n    console.log('click')\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2 *ngIf='title'>{{ title }}</h2> \r\n            <p *ngIf=\"subtitle\" >{{ subtitle }}</p>\r\n        </div>\r\n        <img *ngIf=\"image\" src={{image}}>\r\n    </div>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { UIChart } from 'primeng/chart';\nimport {Chart, ChartItem} from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\n@Component({\n  selector: 'app-budget-breakdown-chart',\n  templateUrl: './budget-breakdown-chart.component.html',\n  styleUrls: ['./budget-breakdown-chart.component.scss']\n})\nexport class BudgetBreakdownChartComponent implements OnInit {\n  stackedData: any;\n  stackedOptions: any;\n\n  categories = ['want', 'need', 'saving']\n\n  selectedCategory = \"\";\n\n  @Input() defaultBreakdown: {want: number, need: number, debt: number}\n  myChart: Chart \n\n  constructor() { \n    Chart.register(ChartDataLabels)\n  }\n\n  refresh(breakdown: {want: number, need: number, debt: number})\n  {\n    this.myChart.data.datasets[0].data = [breakdown.want, breakdown.need, breakdown.debt]\n    this.myChart.update()\n  }\n    \n    \n\n  ngOnInit(): void {\n    const ctx = document.getElementById('chart') as ChartItem;\n    this.myChart = new Chart(ctx, {\n      type: 'pie',\n      data: { \n        labels: ['Wants', 'Needs', 'Savings'], \n      datasets: [\n          {\n              label: 'Spending',\n              data: [this.defaultBreakdown.want, this.defaultBreakdown.need, this.defaultBreakdown.debt],\n              backgroundColor: [\n                \"#003486 \",\n                \"#4ec5ca\",\n                \"#4eca9f\",\n                \"#03fca9\",\n                \"#93d9f5\",\n                \"#008048\"\n            ],\n            \n            datalabels: {\n              labels: {\n                name: {\n                  align: 'top',\n                  color: 'black',\n                  backgroundColor: 'white'\n                  ,\n                  borderColor: 'white',\n                  borderWidth: 2,\n                  borderRadius: 4,\n                  font: {size: 20},\n                  formatter: function(value, ctx) {\n                    return ctx.chart.data.labels[ctx.dataIndex];\n                  }\n                },\n                value: {\n                  align: 'bottom',\n                  backgroundColor: 'white',\n                  font: {size: 20},\n                  borderColor: 'white',\n                  borderWidth: 2,\n                  borderRadius: 4,\n                  color: 'black',\n                  formatter: function(value, ctx) {\n                    let dataset = ctx.dataset.data as number[]\n                    let sum = dataset.reduce((a, b) => a + b, 0)\n                    let percen = Math.round(value*100 / sum)+\"%\";\n                    return percen;\n                  },\n                  padding: 4,\n                  offset: 2\n                }\n              }\n            }\n          }]\n\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n        },\n          datalabels: {\n            color: 'white',\n            display: true,\n            font: {\n              weight: 'bold',\n            },\n            offset: 0,\n            padding: 0\n          }\n        }\n      }\n    })\n  }\n\n}\n\n\n","<!--<p-chart #chart id=\"chart\" type=\"pie\" [data]=\"stackedData\" [options]=\"stackedOptions\" style=\"text-align: center; margin-left: -200px\"></p-chart>-->\r\n<canvas id=\"chart\" width=\"400\" height=\"400\"></canvas>","import { Budget } from 'src/app/models/budget';\r\nimport { BudgetCategory } from '../../models/formModels/budgetCategory';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport { TimeService } from 'src/app/services/time.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport { BudgetBreakdownChartComponent } from '../budget-breakdown-chart/budget-breakdown-chart.component';\r\nimport { Category } from 'src/app/models/category';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-budget-slider',\r\n  templateUrl: './budget-slider.component.html',\r\n  styleUrls: [ './budget-slider.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class BudgetSliderComponent implements OnInit {\r\n\r\n  @ViewChild('chart') chart: BudgetBreakdownChartComponent;\r\n\r\n  budgetCategories: Budget[];\r\n  filteredCats: Budget[];\r\n  curTotalBudget: number = 2000;\r\n  configTotal: number;\r\n  actualBreakdown: {want: number, need: number, debt: number}\r\n  percenUsed: number;\r\n  maxTotalBudget: number;\r\n  show: boolean = false; //whether to display buttons\r\n  refresh: boolean = true;\r\n  tempValue = 0;\r\n  \r\n  constructor(private budServ: BudgetService, private ts: TimeService, private trigServ: TriggerService) { \r\n    this.trigServ.budgetUpdatedAnnounced$.subscribe(() =>\r\n    {\r\n      this.ngOnInit();\r\n      this.show = false;\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.curTotalBudget = this.budServ.curBudCalcs.monthlyBudgetTotal;\r\n    this.configTotal = this.curTotalBudget;\r\n    this.maxTotalBudget = this.budServ.curBudCalcs.monthlyEstIncome;\r\n\r\n    this.tempValue = 0;\r\n\r\n    this.budgetCategories = this.budServ.exBudByCat.filter(val => val.year == this.ts.year && val.month == this.ts.month)\r\n      .map(val => {\r\n        val.visible = val.is_favorite;\r\n        return val;})\r\n      .sort((a, b) => (a.category_id > b.category_id) ? 1 : -1)\r\n    this.filteredCats = this.budgetCategories.filter(val => val.visible);\r\n    \r\n    this.refreshNewValues();\r\n\r\n    this.updateParameters( this.curTotalBudget);\r\n\r\n    this.actualBreakdown = this.getCurBreakDown();\r\n\r\n   }\r\n\r\n   updateParameters(total: number)\r\n   {\r\n    this.updateMaxes(total);\r\n\r\n    this.updatePercenUsed(total);\r\n   }\r\n\r\n  updateCategories()\r\n  {\r\n    this.budgetCategories.forEach((val) => {\r\n      if (this.filteredCats.find(val2 => val2.category_id == val.category_id))\r\n      {\r\n        val.visible = true;\r\n      }\r\n      else\r\n      {\r\n        val.visible = false;\r\n      }\r\n    })\r\n  }\r\n\r\n getConfigTotal(): number\r\n   {\r\n     return this.budgetCategories.reduce(function (accumulator, item) {\r\n       return accumulator + item.new_amount;\r\n     }, 0);\r\n   }\r\n\r\n   sliderChange()\r\n   {\r\n     console.log(\"Slider value has been changed\")\r\n     this.configTotal = this.getConfigTotal();\r\n     //this.updateMaxes(this.configTotal);\r\n     this.show = true;\r\n   }\r\n\r\n   getWants()\r\n   {\r\n     return this.budgetCategories.filter(val => val.category_type == \"want\")\r\n   }\r\n\r\n   getNeeds()\r\n   {\r\n     return this.budgetCategories.filter(val => val.category_type == \"need\")\r\n   }\r\n\r\n   getSavings()\r\n   {\r\n     return this.budgetCategories.filter(val => val.category_type == \"saving\")\r\n   }\r\n\r\n   getCurBreakDown(): any\r\n   {\r\n      var want = 0;\r\n      var need = 0;\r\n      var debt = 0;\r\n      for (let bud of this.budgetCategories)\r\n      {\r\n        switch (bud.category_type)\r\n        {\r\n          case \"want\": \r\n            want += bud.new_amount;\r\n            break;\r\n          case \"need\":\r\n            need += bud.new_amount;\r\n            break;\r\n          case \"saving\":\r\n            debt += bud.new_amount;\r\n            break;\r\n        }\r\n      }\r\n      return {want: want, need: need, debt: debt}\r\n   }\r\n\r\n   updateMaxes(total: number)\r\n   {\r\n    let available = this.maxTotalBudget - total;\r\n    for (let bud in this.budgetCategories)\r\n    {\r\n      let cur = this.budgetCategories[bud].new_amount\r\n      this.budgetCategories[bud].max = available + cur;\r\n    }\r\n   }\r\n\r\n   refreshNewValues()\r\n   {\r\n    for (let bud in this.budgetCategories)\r\n    {\r\n      this.budgetCategories[bud].new_amount = this.budgetCategories[bud].altered_amount;\r\n    }\r\n   }\r\n\r\n   reset()\r\n   {\r\n     this.refreshNewValues();\r\n     this.updateVisibility();\r\n     this.show = false;\r\n   }\r\n\r\n   updateVisibility(): void {\r\n    this.refresh = false;\r\n    this.configTotal = this.getConfigTotal();\r\n    this.updateParameters(this.configTotal);\r\n    this.chart.refresh(this.getCurBreakDown()); //refresh chart\r\n    setTimeout(() => this.refresh = true, 0);\r\n  }\r\n\r\n  updatePercenUsed(total: number): void {\r\n    this.percenUsed = Math.round(total/this.maxTotalBudget * 100);\r\n  }\r\n\r\n  applyChanges()\r\n  {\r\n    var budCopy: Budget[] = JSON.parse(JSON.stringify(this.budgetCategories))\r\n    let send: any[] = []\r\n    for (let i in budCopy)\r\n    {\r\n      budCopy[i].altered_amount = budCopy[i].new_amount\r\n      send.push({category: budCopy[i].category_id, \r\n        user_category_budget_altered_amount: budCopy[i].new_amount})\r\n    }\r\n\r\n    this.budServ.updateBudget(send).subscribe((\r\n      (val: string) => {\r\n        if (val != \"error\")\r\n        {\r\n          this.trigServ.announceBudgetUpdate(budCopy);\r\n        }\r\n      }\r\n    ))\r\n  }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n","<div class=\"panel\" style=\"width: 73vw\">\r\n    <div style=\"width: 100%\">\r\n        <div class=\"content-area\">\r\n            <div class=\"header\">\r\n                <h2>My Budget</h2>\r\n                <div class=\"field\">\r\n                    <p-multiSelect [options]=\"budgetCategories\" class=\"inputfield\" [(ngModel)]=\"filteredCats\"\r\n                    [maxSelectedLabels]=\"0\" [selectedItemsLabel]=\"'{0} items selected'\" placeholder=\"Select Categories\"\r\n                    (onChange)=\"updateCategories()\" inputId=\"cat\" optionLabel=\"categoryTitle\" style=\"width: 10vw;\"></p-multiSelect>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"grid\" style=\"justify-content:center;\">\r\n\r\n                <!--Pie Graph-->\r\n                <div class=\"col-6\" style=\"text-align: center; width: 37vw; justify-content: center; display: flex; background-color: #4ec5ca50; padding: 2vw; width: 33vw; border-color: gainsboro; border-radius: 1px; border-style: solid;\">\r\n                    <div class=\"grid\">\r\n                        <div class=\"col-12\" style=\"height: 25vh; padding: 2vw\">\r\n                            <app-budget-breakdown-chart #chart [defaultBreakdown]=\"actualBreakdown\"></app-budget-breakdown-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        \r\n                <!--Scroll Area-->\r\n                <div class=\"col-6\" style=\"border-color: gainsboro; border-radius: 1px; border-style: solid; min-height: 50vh; padding: 0px; width: 37vw\">\r\n                    <div class=\"grid\">\r\n                        <div class=\"col-12\" style=\"padding: 0px\">\r\n                            <div  class=\"content-area scrollbox\" style=\"min-height: 50vh; padding-left: 2vw\">\r\n                                <div *ngFor=\"let cat of budgetCategories\">\r\n                                    <div class=\"sliderArea\" *ngIf=\"cat.visible != false\">\r\n                                        <p style=\"color: #003486; text-align: left; font-weight: bold;\">{{cat.categoryTitle}}: <span style=\"font-weight: lighter;\">${{cat.new_amount}}/${{cat.max}} ({{cat.new_amount/configTotal | percent:'1.0-2'}})</span></p>\r\n                                        <p-slider *ngIf=\"refresh\" (onChange)=\"sliderChange()\" (onSlideEnd)=\"this.updateVisibility();\" [(ngModel)]=cat.new_amount [min]=\"0\" [max]=cat.max [animate]=\"true\" [step]=\"5\" ptoolT></p-slider>\r\n                                        <p-slider *ngIf=\"!refresh\" (onChange)=\"sliderChange()\" [(ngModel)]=cat.new_amount [min]=\"0\" [max]=cat.max [animate]=\"true\" [step]=\"5\" ptoolT></p-slider>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div *ngIf=\"filteredCats.length == 0\" class=\"catFilter\">\r\n                        <span>Please select at least one category.</span>\r\n                    </div>\r\n                </div>\r\n        \r\n                <!--Percentage Bar-->\r\n                <div class=\"col-12\" style=\"padding: 2vw; border-color: gainsboro; border-radius: 1px; border-style: solid; width: 70vw\">\r\n                    <p-progressBar [value]=\"percenUsed\"></p-progressBar>\r\n                    <p style=\"margin: 1vw; color: #003486; font-size: 1.4em; font-weight: lighter; float: right\"><span style=\"font-weight: bold;\">${{configTotal}}/${{maxTotalBudget}}</span></p>\r\n\r\n                    <div style=\"text-align: right; justify-content: end;\" class=\"grid\">\r\n\r\n                            <button (click)=\"applyChanges()\" style=\"width:8vw; margin-right: .5vw\"> Apply Changes</button>\r\n                            <button style=\"margin-right: 0.5vw; width:8vw\" (click)=\"reset()\" class=\"button-secondary\">Reset</button>\r\n                              \r\n                    </div>\r\n                </div>\r\n                </div>\r\n                   \r\n                \r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \r\n    \r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { UIChart } from 'primeng/chart';\r\nimport { Category } from 'src/app/models/category';\r\nimport {Chart} from 'chart.js';\r\n\r\nimport { BudgetCategory } from 'src/app/models/formModels/budgetCategory';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { IncomeHistoryService } from 'src/app/services/income-history.service';\r\nimport { SpendingHistoryService } from 'src/app/services/spending-history.service';\r\nimport { TimeService } from 'src/app/services/time.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport { getLocaleDateFormat } from '@angular/common';\r\nimport { Budget } from 'src/app/models/budget';\r\n\r\n@Component({\r\n  selector: 'app-budget-vs-spending',\r\n  templateUrl: './budget-vs-spending.component.html',\r\n  styleUrls: ['./budget-vs-spending.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class BudgetVsSpendingComponent implements OnInit {\r\n  dataExists: boolean = false;\r\n  chartData: any;\r\n  chartOptions: any;\r\n  selection: boolean = true;\r\n  categories: string[] = []\r\n  catOptions: Budget[] = []\r\n  typeOptions: SelectItem[] = []\r\n  selectedCats: Budget[] = []\r\n  selectedTypes: string[] = ['want', 'need', 'saving']\r\n  budgetValues: number[];\r\n  spendingValues: number[] = []\r\n  selDate: Date = new Date();\r\n\r\n  @ViewChild('chart3') chart: UIChart;\r\n\r\n  constructor(private spenServ: SpendingHistoryService, private budServ: BudgetService,\r\n    private incServ: IncomeHistoryService,\r\n    private catServ: CategoryService,\r\n    private trigServ: TriggerService, public ts: TimeService) { \r\n      Chart.register(ChartDataLabels)\r\n    \r\n\r\n      \r\n      this.typeOptions = this.budServ.types;\r\n\r\n      this.catOptions = this.budServ.exBudByCat.filter(val => val.year == this.ts.year && val.month == this.ts.month)\r\n\r\n      this.refreshFavorites();\r\n\r\n      this.trigServ.expenReceiptChanged$.subscribe(() =>\r\n      {\r\n          this.getNewData();\r\n      })\r\n\r\n\r\n      this.trigServ.budgetUpdatedAnnounced$.subscribe(() =>\r\n      {\r\n        this.catOptions = this.budServ.exBudByCat.filter(val => val.year == this.ts.year && val.month == this.ts.month)\r\n\r\n        this.refreshFavorites();\r\n\r\n        this.getNewData();\r\n      })\r\n  }\r\n\r\n  refreshFavorites()\r\n  {\r\n    this.selectedCats = this.catOptions.filter(val => val.is_favorite);\r\n\r\n    if (this.budServ.noExpFavorites)\r\n    {\r\n      this.selection = false;\r\n    }\r\n\r\n  }\r\n\r\n  setupValues()\r\n  {\r\n\r\n    this.spendingValues = []\r\n    this.budgetValues = []\r\n    this.categories = []\r\n\r\n    let budgetData = this.budServ.exBudByCat.filter(value => value.year == this.selDate.getFullYear() && value.month == this.selDate.getMonth() + 1\r\n        && this.selectedTypes.includes(value.category_type))\r\n\r\n    let spendData = this.spenServ.catSpenByMonth.filter(value => value.year == this.selDate.getFullYear() && value.month == this.selDate.getMonth() + 1\r\n      && this.selectedTypes.includes(value.category__category_type))\r\n    for (let i of this.selectedCats)\r\n    {\r\n      let spenValue = spendData.find(value => value.category_id == i.category_id)\r\n      let budgetValue = budgetData.find(value => value.categoryTitle == i.categoryTitle)\r\n      var spend;\r\n      if (spenValue == null)\r\n      {\r\n        spend = 0\r\n      }\r\n      else\r\n      {\r\n        spend = spenValue.totalSpent;\r\n      }\r\n      if (budgetValue)\r\n      {\r\n        this.categories.push(i.categoryTitle)\r\n        this.spendingValues.push(spend)\r\n        this.budgetValues.push(budgetValue.altered_amount)\r\n      }\r\n      \r\n    }\r\n\r\n    if (spendData.length == 0 && budgetData.length == 0)\r\n    {\r\n      this.dataExists = false;\r\n    }\r\n    else\r\n    {\r\n      this.dataExists = true;\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  \r\n    this.setupValues();\r\n\r\n    //TODO: Implement http request\r\n    this.chartData = {\r\n      indexAxis: 'y',\r\n      labels: this.categories,\r\n      datasets: [\r\n          {\r\n              label: 'Actual Expenses',\r\n              data: this.spendingValues,\r\n              fill: true,\r\n              borderColor: 'rgba(0, 0, 255, 0.5)',\r\n              barPercentage: 0.9,\r\n              backgroundColor: (context) => {   \r\n                  let sum = this.spendingValues[context.dataIndex]\r\n                  let value = this.budgetValues[context.dataIndex]\r\n                  let percentage = (sum*100 / value);\r\n                  return this.getColorLight(percentage)\r\n              },\r\n              tension: 0,\r\n              \r\n          },\r\n          {\r\n            label: 'Estimated Expenses',\r\n            data: this.budgetValues,\r\n            fill: true,\r\n            borderColor: 'rgba(0, 0, 0, 0.5)',\r\n            borderWidth: 1,\r\n            barPercentage: 1,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n            tension: 0,\r\n            \r\n        },\r\n      ]\r\n  };\r\n\r\n  this.chartOptions = {\r\n    plugins: {\r\n        legend: {\r\n            display: true,\r\n           \r\n        },\r\n        datalabels: {\r\n          align: 'center',\r\n          anchor: 'center',\r\n          backgroundColor: (context) => {\r\n       \r\n              let sum = this.spendingValues[context.dataIndex]\r\n              let value = this.budgetValues[context.dataIndex]\r\n              let percentage = (sum*100 / value);\r\n              return this.getColor(percentage)\r\n  \r\n        },\r\n          borderRadius: 4,\r\n          font: {\r\n            weight: 'bold'\r\n          },\r\n          display: (context) => {\r\n           // console.log(context)\r\n           if (context.dataset.label == 'Estimated Expenses' && this.budgetValues[context.dataIndex] > this.spendingValues[context.dataIndex])\r\n           {\r\n             return true;\r\n           }\r\n           else if (context.dataset.label == 'Actual Expenses' && this.spendingValues[context.dataIndex] > this.budgetValues[context.dataIndex])\r\n           {\r\n             return true;\r\n           }\r\n           return false;\r\n          },\r\n          formatter: (value, context) => {\r\n   \r\n                let sum = this.spendingValues[context.dataIndex]\r\n                let val = this.budgetValues[context.dataIndex]\r\n                let percentage = (sum*100 / val).toFixed(2)+\"%\";\r\n                return percentage;\r\n          },\r\n          color: 'white',\r\n      }\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n        ticks: {\r\n          color: '#495057'\r\n      },\r\n      title: {\r\n          display: true,\r\n          text: 'Months',\r\n          font: {\r\n              size: 20\r\n          }\r\n      },\r\n      grid: { display: false }\r\n      },\r\n      y: {\r\n        stacked: false,\r\n        ticks: {\r\n          color: '#495057',\r\n      },\r\n      title: {\r\n          display: true,\r\n          text: 'Amount (in $)',\r\n          font: {\r\n              size: 20\r\n          }\r\n      },\r\n      grid: { display: false }\r\n      }  \r\n    }\r\n  }\r\n}\r\n\r\n    async getNewData()\r\n    {\r\n        this.setupValues()\r\n        this.chartData.labels = this.categories\r\n        this.chartData.datasets[0].data = this.spendingValues\r\n        this.chartData.datasets[1].data = this.budgetValues\r\n        this.chart.refresh();\r\n    }\r\n\r\n    getColor(num: number)\r\n    {\r\n      if (num <= 100)\r\n      {\r\n        return 'rgba(76, 192, 94, 1)'\r\n\r\n      }\r\n      else\r\n      {\r\n        return 'rgba(255, 0, 0, 1)'\r\n      }\r\n    }\r\n\r\n    getColorLight(num: number)\r\n    {\r\n      if (num <= 100)\r\n      {\r\n        return 'rgba(76, 192, 94, 0.35)'\r\n\r\n      }\r\n      else\r\n      {\r\n        return 'rgba(255, 0, 0, 0.35)'\r\n      }\r\n    }\r\n\r\n}\r\n","<div class=\"panel\" style=\"width: 73vw\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\" style=\"justify-content: space-between; align-items: flex-start; margin-bottom: 2vh\">\r\n            <h2>Estimated vs. Actual Expenses</h2> \r\n            <div style=\"display: inline-flex; justify-content: space-evenly;\">\r\n                <div class=\"field\"> \r\n                    <label for=\"month\" >Month</label>\r\n                    <p-calendar id=\"month\" inputId=\"month\" class=\"inputfield\" [(ngModel)]=\"selDate\" view=\"month\" \r\n                    (onSelect)=\"getNewData()\" dateFormat=\"mm/yy\"></p-calendar>\r\n               </div>\r\n               \r\n                <div class=\"field\">\r\n                    <label for=\"cat\" >Categories</label>\r\n                    <p-multiSelect [options]=\"catOptions\" class=\"inputfield\" [(ngModel)]=\"selectedCats\" placeholder=\"Select a Category\"\r\n                    [maxSelectedLabels]=\"0\" [selectedItemsLabel]=\"'{0} items selected'\" (onChange)=\"getNewData()\" inputId=\"cat\" optionLabel=\"categoryTitle\"></p-multiSelect>\r\n                </div>\r\n    \r\n                <div class=\"field\">\r\n                    <label for=\"cat\">Type</label>\r\n                    <p-multiSelect [options]=\"typeOptions\" class=\"inputfield\" [(ngModel)]=\"selectedTypes\"\r\n                    [maxSelectedLabels]=\"0\" [selectedItemsLabel]=\"'{0} items selected'\" \r\n                    (onChange)=\"getNewData()\" \r\n                    inputId=\"cat\"\r\n                    ></p-multiSelect>\r\n                </div>\r\n            </div>\r\n\r\n       \r\n        </div>\r\n        <p-chart #chart3 type=\"bar\" [data]=\"chartData\" [options]=\"chartOptions\"></p-chart>\r\n        \r\n    </div>\r\n</div>","import { Challenge } from '../../models/Challenge';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ChallengesService } from 'src/app/services/challenges.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-challenge-progress',\r\n  templateUrl: './challenge-progress.component.html',\r\n  styleUrls: ['./challenge-progress.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class ChallengeProgressComponent implements OnInit {\r\n\r\n  challenges: Challenge[] //will be of type ChallengePackage (but too complicated to implement w/out just retrieving data)\r\n\r\n  constructor(private chalServ: ChallengesService, private trigServ: TriggerService, private cp: CurrencyPipe) {\r\n      this.challenges = this.getInProgress(this.chalServ.challenges);\r\n\r\n      this.trigServ.challAnnounced$.subscribe(() => this.challenges = this.getInProgress(this.chalServ.challenges))\r\n      //TO DO: implement w/ API\r\n\r\n      /*\r\n      this.challenges = [\r\n        {\r\n          goal: 7,\r\n          label: 'days',\r\n          description: 'Track spending every day for one week',\r\n          name: \"Daily Tracker\",\r\n          start_amount: 0,\r\n          time_given: -1,\r\n          progress: 5,\r\n          currentProgress: Math.floor((5 / 7) * 100),\r\n          user_challenge_completion_date: \"3/27/22\"\r\n        },\r\n        {\r\n          challenge__challenge_completion_amount: 4,\r\n          challenge_value_label: 'weeks',\r\n          challenge__challenge_description: 'Stay 25% under budget each week for one month',\r\n          challenge__challenge_is_active: true,\r\n          challenge__challenge_name: \"Savvy Saver\",\r\n          challenge__challenge_start_amount: 0,\r\n          challenge__challenge_time_given: 31,\r\n          user_challenge_current_amount: 1,\r\n          currentProgress: Math.floor((1 / 4) * 100),\r\n          user_challenge_completion_date: \"4/12/22\"\r\n        }\r\n      ]\r\n      */\r\n   }\r\n\r\n   getInProgress(inven: Challenge[])\r\n   {\r\n     return inven.filter(val => val.is_active && val.completion_date == null).map(val => \r\n      {\r\n        var prog: any = val.progress\r\n        var goal: any = val.goal\r\n        var label: any = val.label;\r\n        if (val.label == 'dollars')\r\n        {\r\n          prog = this.cp.transform(val.progress)\r\n          goal = this.cp.transform(val.goal)\r\n          label = \"\"\r\n        }\r\n        return {...val, fracCompl: Math.round(val.fracCompl), displayProg: prog, label: label, displayGoal: goal}\r\n      }\r\n    )\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>My Challenges</h2> \r\n        </div>\r\n        <div *ngFor=\"let x of challenges\">\r\n            <h3 style=\"width: 100%\">{{x.name}} <span style=\"font-weight: 200; font-size: smaller; margin-left: .5em\">{{x.description}}</span></h3>\r\n            <p-progressBar [ngClass]=\"x.fracCompl > 100 ? 'over' : 'under'\"  class=\"progress-bar\" [value]=\"x.fracCompl\"></p-progressBar>\r\n            <p style=\"margin-top: 6px\"> <span style=\" float: left\">{{x.completion_date | date:'shortDate'}}</span> {{x.displayProg }} / {{ x.displayGoal }} {{x.label}}</p>\r\n        </div>\r\n        <br>\r\n    </div>\r\n</div>","import { ButtonModule } from 'primeng/button';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { componentFactoryName } from '@angular/compiler';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Category } from 'src/app/models/category';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { CategoryService } from '../../services/category.service';\r\nimport {SelectItem} from 'primeng/api';\r\nimport { ReceiptService } from 'src/app/services/receipt.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Receipt } from 'src/app/models/receipt';\r\nimport { WidgetService } from '../widget.service';\r\nimport { ReceiptTrackService } from '../services/receipt-track.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport { QuickReceipt } from 'src/app/models/simReceipt';\r\n\r\n@Component({\r\n  selector: 'app-income-tracking',\r\n  templateUrl: './income-tracking.component.html',\r\n  styleUrls: ['./../tracking/tracking.component.scss', './../small-widget/small-widget.component.scss']\r\n})\r\nexport class IncomeTrackingComponent implements OnInit {\r\nform: FormGroup = <FormGroup>{};\r\n  catOptions!: Category[];\r\n  frequencyOptions!: SelectItem[];\r\n\r\n  constructor(private ms: MessageService,\r\n    private rs: ReceiptTrackService,\r\n    private auServ: AuthService,\r\n    private ws: WidgetService,\r\n    private trigServ: TriggerService,\r\n    private fb: FormBuilder,\r\n    private cs: CategoryService) { \r\n\r\n      this.catOptions = this.cs.incomeCats;\r\n    \r\n      //TODO: Implement w/ API\r\n      this.frequencyOptions = this.ws.frequencyOptions;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      income_name: ['', Validators.required],\r\n      receipt_date: ['', Validators.required],\r\n      income_amount: ['', Validators.required],\r\n      category: ['', Validators.required],\r\n      reocurring: ['']\r\n});\r\n\r\n  }\r\n\r\n  track() {\r\n    if (this.form.invalid) {\r\n      this.ms.addInfo(\"Invalid Entry\", \"Some fields are incomplete or invalid.\")\r\n      return;\r\n    }\r\n\r\n    let out: QuickReceipt =\r\n    {\r\n      user_id: this.auServ.currentUserValue.user_id,\r\n      receipt_amount: this.form.value['income_amount'],\r\n      receipt_name: this.form.value['income_name'],\r\n      category: this.form.value['category'],\r\n      receipt_date: this.form.value['receipt_date'],\r\n      reccuring: false,\r\n      is_income: true\r\n    }\r\n\r\n    this.rs.addQuickReceipt(out)\r\n      .subscribe((res: any)=> {\r\n        this.form.reset()\r\n        out.receipt_id = res.receipt_id\r\n        this.trigServ.announceIncomReceiptSubmit(this.rs.convert(out));\r\n      }\r\n      )\r\n  }\r\n\r\n}","\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"track()\">\r\n        <div class=\"content-area\">\r\n            <p>Name</p>\r\n            <input formControlName=\"income_name\" type=\"text\" pInputText/>\r\n            <br>\r\n            <p>Date</p>\r\n            <p-calendar formControlName=\"receipt_date\"></p-calendar>\r\n            <br>\r\n            <p>Type of Income</p>\r\n            <p-dropdown [options]=\"catOptions\" optionLabel=\"category_name\" optionValue=\"category_id\" \r\n            [autoDisplayFirst]=false\r\n            formControlName=\"category\"></p-dropdown>\r\n            <br>\r\n            <p>Amount</p>\r\n            <p-inputNumber formControlName=\"income_amount\" \r\n            mode=\"currency\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n            <br>\r\n            <p>Monthly Recurrence</p>\r\n            <p-dropdown [options]=\"frequencyOptions\"\r\n            [autoDisplayFirst]=false\r\n            placeholder=\"Optional\"\r\n            formControlName=\"reocurring\"></p-dropdown>\r\n            <br>\r\n            <button style=\"margin-top: 2em\" class=\"track\" pButton type=\"submit\" label='Track'></button>\r\n        </div>\r\n    </form>\r\n   ","import { Component, OnInit } from '@angular/core';\r\nimport { BudgetScoreService } from 'src/app/services/budget_score.service';\r\n\r\n@Component({\r\n  selector: 'app-letter-grade',\r\n  templateUrl: './letter-grade.component.html',\r\n  styleUrls: ['./letter-grade.component.scss', './../small-widget/small-widget.component.scss']\r\n})\r\nexport class LetterGradeComponent implements OnInit {\r\n\r\n  budgetScore: string = '';\r\n  status: string = \"error loading report card\";\r\n\r\n\r\n  constructor(private budScServ: BudgetScoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    //fetch budget score via api\r\n    this.budgetScore = this.budScServ.letterGrade;\r\n    this.getMessage()\r\n  }\r\n\r\n  getMessage(){\r\n    if (this.budgetScore.includes('A')) {\r\n      this.status = \"Great Job! Keep up the good work!\";\r\n    } else if (this.budgetScore.includes('B')) {\r\n      this.status = \"Nice Job! Keep following your budget!\";\r\n    } else if (this.budgetScore.includes('C')) {\r\n      this.status = \"Keep going! Try making small changes to help you save!\";\r\n    } else if (this.budgetScore.includes('D')) {\r\n      this.status = \"Needs improvement. Maybe we should rethink our budget plan\";\r\n    } else if (this.budgetScore.includes('F')) {\r\n      this.status = \"Oh no! Maybe we should rethink our finances. Try using the 20-30-50 rule!\"\r\n    } else {\r\n      this.status = \"Unable to retrieve status.\"\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Report Card</h2> \r\n        </div>\r\n        <div class=\"emphasis\">{{ budgetScore }}</div>\r\n        <p style=\"font-weight: bolder !important\">{{ status }}</p>\r\n    </div>\r\n</div>","import { Receipt } from 'src/app/models/receipt';\r\nimport { Component, OnInit, SecurityContext } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { CategoryService } from '../../services/category.service';\r\nimport { Category } from 'src/app/models/category';\r\nimport { MessageService, SelectItem } from 'primeng/api';\r\nimport { WidgetService } from '../widget.service';\r\nimport { ReceiptTrackService } from '../services/receipt-track.service';\r\nimport { ReceiptUploadService } from 'src/app/services/receipt-upload.service';\r\nimport { getLocaleDateFormat } from '@angular/common';\r\nimport { tap, throwIfEmpty } from 'rxjs/operators';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport { QuickReceipt } from 'src/app/models/simReceipt';\r\n\r\n@Component({\r\n  selector: 'app-receipt-tracking',\r\n  templateUrl: './receipt-tracking.component.html',\r\n  styleUrls: ['./receipt-tracking.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class ReceiptTrackingComponent implements OnInit {\r\n\r\n  viewAllReceipts = false;\r\n  userReceipts: Receipt[] = [];\r\n  noUpload = './../../../assets/icons/budget-icons/receipt.png'\r\n  imageUpload: any = this.noUpload;\r\n  inProgress: boolean[] = []\r\n  receipts: any[] = [];\r\n  loading: boolean = false;\r\n  load: boolean[] = []\r\n  numComp: number = 0;\r\n  inSel: number = 0;\r\n  totals: number[] = []\r\n  updateObserv: Subscription;\r\n  selectedReceipt: Receipt;\r\n  showReceipt = false;\r\n  receiptUploaded = false;\r\n  form: FormArray = <FormArray>{};\r\n  catOptions!: Category[];\r\n  incCatOptions: Category[];\r\n  frequencyOptions!: SelectItem[];\r\n  uploadedReceipt: Receipt;\r\n  editReceipt = false;\r\n  deleteReceipt = false;\r\n  tyOptions: SelectItem<boolean>[] = [{label: \"Income\", value: true}, {label: \"Spending\", value: false}]\r\n\r\n\r\n\r\n  //mock receipt list\r\n\r\n  constructor(private ms: MessageService,\r\n    private ws: WidgetService,\r\n    private as: AuthService,\r\n    private fb: FormBuilder,\r\n    private ts: TriggerService,\r\n    public upServ: ReceiptUploadService,\r\n    public rs: ReceiptTrackService,\r\n    private cs: CategoryService) { \r\n\r\n      this.catOptions = this.cs.expenseCats\r\n      this.incCatOptions = this.cs.incomeCats;\r\n\r\n  \r\n      \r\n      //TODO: Implement w/ API\r\n      this.uploadedReceipt = {receipt: null, expenses: null};\r\n\r\n      this.frequencyOptions = this.ws.frequencyOptions;\r\n\r\n      this.userReceipts = this.rs.receipts\r\n\r\n      this.ts.expenReceiptChanged$.subscribe((rec: Receipt) =>\r\n      {\r\n        if (rec.operation == \"new\")\r\n        {\r\n          this.loadTable(rec);\r\n        }        \r\n      })\r\n\r\n      this.ts.incomReceiptChanged$.subscribe((rec: Receipt) => {\r\n        if (rec.operation == \"new\")\r\n        {\r\n          this.loadTable(rec);\r\n        }\r\n   \r\n      })\r\n\r\n    this.selectedReceipt = this.getBlankReceipt();\r\n    \r\n  }\r\n\r\n  //Remove the oldest item in the table and replace it with the new receipt\r\n  loadTable(rec: Receipt | QuickReceipt)\r\n  {\r\n    if ((rec as Receipt).incomes || (rec as Receipt).expenses)\r\n    {\r\n      //This is a standard receipt\r\n      this.userReceipts.push(rec);\r\n    }\r\n    else\r\n    {\r\n      //This is a quick receipt\r\n      let convert = this.rs.convert(rec as QuickReceipt);\r\n      this.userReceipts.push({...rec, quick: true})\r\n    }     \r\n  }\r\n\r\n  getBlankReceipt(): Receipt\r\n  {\r\n    return {\r\n        \r\n      receipt: {\r\n          receipt_date: null,\r\n          receipt_is_reccuring: 0,\r\n          receipt_is_income: false,\r\n          receipt_name: null,\r\n      },\r\n      receipt_id: null,\r\n      expenses: [\r\n        {\r\n          expense_name: null,\r\n          expense_id: null,\r\n          expense_price: null,\r\n          category_id: null\r\n        }\r\n      ]\r\n  };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    console.log(this.userReceipts)\r\n    this.resetForm();\r\n  }\r\n\r\n  getReceipt(i: number)\r\n  {\r\n    return this.form.controls[i] as FormGroup;\r\n  }\r\n\r\n  updateTotal(recInd: number)\r\n  {\r\n    var sum = 0\r\n    for (let prod of this.getItems(recInd).controls)\r\n    {\r\n      sum += prod.get('item_amount').value\r\n    }\r\n    this.totals[recInd] = sum\r\n  }\r\n\r\n  getItems(recIn: number)\r\n  {\r\n    return this.getReceipt(recIn).get('items') as FormArray;\r\n  }\r\n\r\n  getItem(recIn: number, i: number)\r\n  {\r\n    return this.getItems(recIn).controls[i] as FormGroup;\r\n  }\r\n\r\n  addReceipt(cat: number, rec: boolean, date: string, name: string, id: number, is_income: boolean)\r\n  {\r\n    this.form.push(\r\n      this.fb.group({\r\n        items: this.fb.array(Array<FormGroup>()),      \r\n        receipt_category: [cat, Validators.required],\r\n        receipt_date: [date.length > 0 ? new Date(date) : new Date(), Validators.required],\r\n        receipt_name: [name, Validators.required],\r\n        receipt_is_income: [is_income, Validators.required],\r\n        receipt_id: [id]\r\n    })\r\n    )\r\n  }\r\n\r\n  addEmptyItem(recIn: number) {\r\n    this.getItems(recIn).push(\r\n      this.fb.group({\r\n        item_name: ['', Validators.required],\r\n        item_amount: ['', Validators.required]\r\n      })\r\n    )\r\n  }\r\n\r\n  addItem(recIn: number, name: string, amount: number, id: number) {\r\n    this.getItems(recIn).push(\r\n      this.fb.group({\r\n        item_name: [name, Validators.required],\r\n        item_amount: [amount, Validators.required],\r\n        item_id: [id]\r\n      })\r\n    )\r\n  }\r\n\r\n  removeItem(recIn: number, index: number)\r\n  {\r\n    this.getItems(recIn).removeAt(index);\r\n  }\r\n\r\n  resetForm()\r\n  {\r\n    this.updateObserv ? this.updateObserv.unsubscribe() : null;\r\n    this.form = this.fb.array([\r\n    ]);\r\n  }\r\n\r\n  onUpload(event) {\r\n    console.log(event)\r\n    this.loading = false;\r\n    let out = event.originalEvent.body;     \r\n\r\n    this.resetForm();\r\n    this.totals = Array(event.files.length)\r\n    this.inProgress = Array(event.files.length).fill(true);\r\n    this.load = Array(event.files.length).fill(false)\r\n    this.numComp = 0;\r\n    for(const [i, receipt] of event.files.entries()) {\r\n        let data = out[receipt.name]\r\n        let rec: Receipt = data\r\n        //set the type to spending\r\n        rec.receipt.receipt_is_income = false;\r\n        this.loadForm(rec, i)\r\n        this.updateTotal(i)\r\n\r\n    }\r\n    this.receiptUploaded = true;\r\n\r\n    this.updateObserv = this.form.valueChanges.pipe(\r\n      tap(() => {\r\n        for (let i = 0; i < this.totals.length; i++)\r\n        {\r\n          this.updateTotal(i);\r\n        }\r\n      })\r\n    ).subscribe()\r\n\r\n    \r\n    \r\n  }\r\n\r\n  loadForm(receipt: Receipt, coun: number)\r\n  {\r\n    var category = undefined\r\n    if (receipt.receipt.receipt_is_income && receipt.incomes.length > 0)\r\n    {\r\n      category = receipt.incomes[0].category_id\r\n    }\r\n    else if (receipt.expenses.length > 0)\r\n    {\r\n      category = receipt.expenses[0].category_id;\r\n    }\r\n\r\n    this.addReceipt(category, false, receipt.receipt.receipt_date,\r\n      receipt.receipt.receipt_name, receipt.receipt_id, receipt.receipt.receipt_is_income\r\n    )\r\n\r\n    if (receipt.expenses && receipt.expenses.length > 0)\r\n    {\r\n      for (let ex of receipt.expenses)\r\n      {\r\n        this.addItem(coun, ex.expense_name, ex.expense_price, ex.expense_id)\r\n      }\r\n    }\r\n\r\n    if (receipt.incomes && receipt.incomes.length > 0)\r\n    {\r\n      for (let inc of receipt.incomes)\r\n      {\r\n        this.addItem(coun, inc.income_name, inc.income_amount, inc.income_id)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  fromFormToReceipt(i: number): Receipt\r\n  {\r\n    let f = this.getReceipt(i)\r\n    let pr = this.getItems(i)\r\n\r\n    if (f.valid)\r\n    {\r\n      var receipt: Receipt = {\r\n        userid: this.as.currentUserValue.user_id,\r\n        receipt_id: f.get('receipt_id').value,\r\n        receipt:\r\n        {\r\n          receipt_date: f.get('receipt_date').value,\r\n          receipt_is_income: f.get('receipt_is_income').value,\r\n          receipt_is_reccuring: 0,\r\n          receipt_name: f.get('receipt_name').value\r\n        },\r\n        expenses: []\r\n      }\r\n\r\n      if (receipt.receipt.receipt_is_income)\r\n      {\r\n        receipt.incomes = []\r\n        for (let j = 0; j < pr.length; j++)\r\n        {\r\n          let item = this.getItem(i, j);\r\n          receipt.incomes.push(\r\n            {\r\n              income_name: item.get('item_name').value,\r\n              income_id: item.get('item_id') ? item.get('item_id').value : undefined,\r\n              income_amount: item.get('item_amount').value,\r\n              category_id: f.get('receipt_category').value\r\n            }\r\n          )\r\n        }\r\n      }\r\n      else\r\n      {\r\n        receipt.expenses = []\r\n        for (let j = 0; j < pr.length; j++)\r\n        {\r\n          let item = this.getItem(i, j);\r\n          receipt.expenses.push(\r\n            {\r\n              expense_name: item.get('item_name').value,\r\n              expense_id: item.get('item_id') ? item.get('item_id').value : undefined,\r\n              expense_price: item.get('item_amount').value,\r\n              category_id: f.get('receipt_category').value\r\n            }\r\n          )\r\n        }\r\n      }\r\n\r\n      \r\n    }\r\n    return receipt;\r\n  }\r\n\r\n  track(i: number)\r\n  {\r\n      this.load[i] = true;\r\n      let receipt = this.fromFormToReceipt(i);\r\n      this.rs.addReceipt(receipt).subscribe(\r\n        (val: Receipt) =>\r\n        {\r\n          receipt.receipt_id = val.receipt_id;\r\n          this.userReceipts.push(receipt)\r\n          this.rs.receipts.push(receipt)\r\n          this.inSel = (this.inSel == this.form.controls.length - 1) ? 0 : this.inSel + 1;\r\n          this.inProgress[i] = false\r\n          this.load[i] = true\r\n          this.numComp += 1;\r\n          if (this.numComp == this.form.controls.length)\r\n          {\r\n            this.receiptUploaded = false;\r\n          }\r\n          if (receipt.receipt.receipt_is_income)\r\n          {\r\n            this.ts.announceIncomReceiptSubmit(receipt)\r\n          }\r\n          else\r\n          {\r\n            this.ts.announceExpenReceiptSubmit(receipt);\r\n          } \r\n        }\r\n      )\r\n    }\r\n\r\n  setTotalUpdates()\r\n  {\r\n    this.updateObserv = this.form.valueChanges.pipe(\r\n      tap(() => {\r\n        for (let i = 0; i < this.totals.length; i++)\r\n        {\r\n          this.updateTotal(i);\r\n        }\r\n      })\r\n    ).subscribe()\r\n  }\r\n\r\n\r\n  selectReceipt(x: Receipt) {\r\n    console.log(\"hello\")\r\n    this.showReceipt = false;\r\n    this.selectedReceipt = null;\r\n    this.selectedReceipt = x;\r\n    this.showReceipt = true;\r\n  }\r\n\r\n  prepareFormForEdit()\r\n  {\r\n    this.resetForm();\r\n    this.totals = Array(1)\r\n    this.inProgress = Array(1).fill(true);\r\n    this.load = Array(1).fill(false)\r\n\r\n    \r\n  }\r\n\r\n  openReceiptEditor(x: Receipt) {\r\n    this.editReceipt = false;\r\n    this.showReceipt = false;\r\n    this.selectedReceipt = null;\r\n    this.selectedReceipt = x;\r\n    this.prepareFormForEdit();\r\n    this.loadForm(this.selectedReceipt, 0)\r\n    this.setTotalUpdates();\r\n    this.updateTotal(0);\r\n    this.editReceipt = true;\r\n  }\r\n\r\n  openDeleteReceipt(x: Receipt) {\r\n    this.editReceipt = false;\r\n    this.showReceipt = false;\r\n    this.selectedReceipt = null;\r\n    this.selectedReceipt = x;\r\n    this.deleteReceipt = true;\r\n  }\r\n\r\n  getOptions(receiptId: number)\r\n  {\r\n    let is_income = this.getReceipt(receiptId).get('receipt_is_income').value\r\n    if (is_income)\r\n    {\r\n      return this.incCatOptions;\r\n    }\r\n    else\r\n    {\r\n      return this.catOptions;\r\n    }\r\n  }\r\n\r\n  updateReceipt(){\r\n    //TO DO: update receipt API call\r\n    this.load[0] = true;\r\n    let receipt = this.fromFormToReceipt(0);\r\n    this.rs.updateReceipt(receipt).subscribe(() =>\r\n      {\r\n       \r\n        this.selectedReceipt = receipt;\r\n        let index = this.userReceipts.findIndex(i => i.receipt_id == receipt.receipt_id)\r\n    \r\n        let oldReceipt = this.userReceipts[index]\r\n       \r\n        this.userReceipts[index] = receipt;\r\n        //update master data\r\n        let index2 = this.rs.receipts.findIndex(i => i.receipt_id == receipt.receipt_id)\r\n        this.rs.receipts[index2] = receipt;\r\n\r\n        this.editReceipt = false;\r\n        this.load[0] = false;\r\n\r\n        this.ts.announceReceiptUpdate(oldReceipt, receipt)\r\n      })\r\n  }\r\n\r\n  confirmDeleteReceipt(){\r\n    //TO DO: delete receipt API call\r\n    this.rs.deleteReceipt(this.selectedReceipt.receipt_id).subscribe(\r\n      (val) => {\r\n        let index = this.userReceipts.findIndex(i => i.receipt_id == this.selectedReceipt.receipt_id)\r\n        this.userReceipts.splice(index, 1)\r\n\r\n        //update master data\r\n        let index2 = this.rs.receipts.findIndex(i => i.receipt_id == this.selectedReceipt.receipt_id)\r\n        this.rs.receipts.splice(index2, 1)\r\n\r\n        //grab the next oldest receipt record (if it exists)\r\n        let nexIn = this.rs.receipts.length - 5\r\n        if (nexIn >= 0)\r\n        {\r\n          this.userReceipts.push(this.rs.receipts[nexIn])\r\n        }\r\n\r\n        this.ts.announceReceiptDelete(this.selectedReceipt)\r\n        this.selectedReceipt = this.getBlankReceipt();\r\n        this.deleteReceipt = false;\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  denyDeleteReceipt(){\r\n    this.deleteReceipt=false;\r\n  }\r\n\r\n  showAllReceipts() {\r\n    this.viewAllReceipts = true;\r\n  }\r\n\r\n}\r\n","<div class=\"panel\" style=\"height: 70vh\">\r\n    <div class=\"content-area\" style=\"margin-left: 0; \">\r\n        <div class=\"header\">\r\n            <h2>Receipts</h2>\r\n            <button pButton pRipple pTooltip=\"View All Receipts\" tooltipPosition=\"bottom\" type=\"button\" class=\"p-button-rounded p-button-outlined viewAll\"(click)=\"showAllReceipts()\">View All Receipts</button>\r\n        </div>\r\n        <div style=\"display: inline-flex; width: 100%\">\r\n            <div #receiptList style= \"height: 52vh; overflow-y: scroll; overflow-x:hidden; max-width: 25vw; border: gainsboro;border-width: 1px; border-style: solid;\">\r\n                <div *ngFor=\"let item of userReceipts\" style=\"display: inline-flex;\">\r\n                    <div *ngIf=\"item == selectedReceipt\" class=\"receipt-list selected\" style=\"position: relative\">\r\n                        <p style=\"font-weight: bolder; font-size: 800; text-align: left; \r\n                        height: 1.3em; overflow-y: hidden; overflow-x: hidden; width: 22vw\">{{item.receipt.receipt_name}} <img class=\"edit-button\" \r\n                        src=\"../../../assets/icons/trash.png\" style=\"width:1em; top: 0.5em; position: absolute; right: 1em; border-radius: 100\" \r\n                        (click)=\"openDeleteReceipt(item)\"><img class=\"edit-button\" src=\"../../../assets/icons/edit-icon.png\" \r\n                        style=\"width:1em; top: 0.5em; position: absolute; right: 2.5em; border-radius: 100\" (click)=\"openReceiptEditor(item)\"></p>\r\n\r\n                        <p style=\"margin-top: -15px; display: flex; justify-content: space-between;\">{{rs.getTotal(item) | currency}} \r\n                            <span>{{item.receipt.receipt_date | date:'shortDate'}}</span></p>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"item != selectedReceipt\" class=\"receipt-list\" (click)=\"selectReceipt(item)\" style=\"position: relative\">\r\n                        <p style=\"font-weight: bolder; font-size: 800; text-align: left; \r\n                        height: 1.3em; overflow-y: hidden; overflow-x: hidden; width: 22vw\">{{item.receipt.receipt_name}} <img class=\"edit-button\" \r\n                        src=\"../../../assets/icons/trash.png\" style=\"width:1em; top: 0.5em; position: absolute; right: 1em; border-radius: 100\" \r\n                        (click)=\"openDeleteReceipt(item)\"><img class=\"edit-button\" src=\"../../../assets/icons/edit-icon.png\" \r\n                        style=\"width:1em; top: 0.5em; position: absolute; right: 2.5em; border-radius: 100\" (click)=\"openReceiptEditor(item)\"></p>\r\n\r\n                        <p style=\"margin-top: -15px; display: flex; justify-content: space-between;\">{{rs.getTotal(item) | currency}} \r\n                            <span>{{item.receipt.receipt_date | date:'shortDate'}}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"image-area\" style=\"display: block; text-align: center; margin: 3vw;\">\r\n                <img src=\"{{imageUpload}}\">\r\n                <div *ngIf=\"imageUpload == noUpload\" style=\"text-align: center;\">\r\n                    <p-button class=\"viewAll\" (click)=\"op.toggle($event)\">Upload Receipt</p-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <p-overlayPanel [showTransitionOptions]=\"'0ms'\" [hideTransitionOptions]=\"'0ms'\" #op [dismissable]=\"true\" [showCloseIcon]=\"true\">\r\n            <ng-template pTemplate>\r\n                <p-fileUpload name=\"files\" [url]=\"upServ.recUplURL\" [multiple]=\"true\" (onProgress)=\"loading = true\"  (onUpload)=\"onUpload($event)\"\r\n                    accept=\"image/*\">\r\n              \r\n                    <ng-template pTemplate=\"content\">\r\n                        <div *ngIf=\"loading\">\r\n                            <p-progressSpinner></p-progressSpinner>\r\n                        </div>\r\n                         <ul *ngIf=\"receipts.length && !loading\">\r\n                            <li *ngFor=\"let file of receipts\">{{file.name}} - {{file.size}} bytes</li>\r\n                         </ul>\r\n              \r\n                     </ng-template>\r\n                </p-fileUpload>\r\n              \r\n            </ng-template>\r\n        </p-overlayPanel> \r\n        <p-dialog *ngIf=\"editReceipt\" header=\"Edit: {{selectedReceipt.receipt.receipt_name}}\" [(visible)]=\"editReceipt\" [appendTo]=\"receiptList\" style=\"width:fit-content\">\r\n                    <p-progressSpinner *ngIf=\"load[0]\"></p-progressSpinner>\r\n                    <div *ngIf=\"!load[0]\">\r\n                        <div *ngIf=\"selectedReceipt\" class=\"upload-verification\">\r\n                            <form #f [formGroup]=\"getReceipt(0)\" (ngSubmit)=\"updateReceipt()\">\r\n                                <div class=\"center\">\r\n                                    <p>Receipt Name</p>\r\n                                    <input formControlName=\"receipt_name\" type=\"text\" pInputText/>\r\n                                    <br>\r\n                                    <p>Date of Transaction</p>\r\n                                    <p-calendar formControlName=\"receipt_date\"></p-calendar>\r\n                                    <br>\r\n                                   \r\n                                </div>\r\n                                <div formArrayName=\"items\" style=\"margin-top: 5px;\" class=\"grid\" >\r\n                                \r\n                                                               \r\n                                    <div class=\"col-12\">\r\n                                        <ng-container *ngFor=\"let item of getItems(0).controls; let i=index\" >\r\n                                            <div [formGroup]=\"getItem(0, i)\" class=\"grid center\">\r\n                                                <div *ngIf=\"i==0\" class=\"col-4 adjust\" >\r\n                                                    <p class=\"adjust\">Item Name</p>\r\n                                                </div>\r\n                                                <div *ngIf=\"i==0\" class=\"col-8\">\r\n                                                    <p class=\"adjust\">Amount</p>\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <input type=\"text\" class=\"inputfield\" formControlName=\"item_name\" placeholder=\"Name\"pInputText/>\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <p-inputNumber class=\"item\" placeholder=\"Amount\" formControlName=\"item_amount\" \r\n                                                    mode=\"currency\" [maxFractionDigits]=\"2\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                                                </div>\r\n                                                <div class=\"col-1\">\r\n                                                    <button type=\"button\" (click)=\"removeItem(0, i)\"pButton label=\"Delete\" class=\"p-button-danger\"></button>\r\n                                                </div> \r\n                                            </div>\r\n                                            \r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <button type=\"button\" (click)=\"addEmptyItem(0)\" class=\"p-button-info addButton\">+ Add another item</button>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n                                        <p>Total: {{totals[0] | currency}}</p>\r\n                                    </div>\r\n  \r\n                                </div>\r\n\r\n                                <p>Is this an income or a spending transaction?</p>\r\n                                <p-dropdown [options]=\"tyOptions\" \r\n                                [autoDisplayFirst]=false\r\n                                optionLabel=\"label\"\r\n                                dataKey=\"value\"\r\n                                optionValue=\"value\"\r\n                                formControlName=\"receipt_is_income\"></p-dropdown>\r\n\r\n                                <div *ngIf=\"getReceipt(0).get('receipt_is_income').value != null\">\r\n                                    <p>How would you categorize this receipt?</p>\r\n                                    <p-dropdown [options]=\"getOptions(0)\" optionLabel=\"category_name\" optionValue=\"category_id\" \r\n                                    [autoDisplayFirst]=false\r\n                                    formControlName=\"receipt_category\"></p-dropdown>\r\n                                 </div>\r\n\r\n                                <button class=\"track trackAdj\" pButton type=\"submit\" label='Update'></button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n        </p-dialog>\r\n\r\n        <p-dialog header=\"All Receipts\" [(visible)]=\"viewAllReceipts\" [style]=\"{width: '20vw', height: '56vh'}\">\r\n            <div #receiptList style= \"height: 44vh; overflow-y: scroll; width: 100%\">\r\n                <div *ngFor=\"let item of userReceipts\" style=\"display: inline-flex;\">\r\n                    <div *ngIf=\"item == selectedReceipt\" class=\"receipt-list selected\" style=\"position: relative\">\r\n                        <p style=\"font-weight: bolder; font-size: 800; text-align: left; height: 1.3em; overflow-y: hidden; overflow-x: hidden; width: 115px;\">{{item.receipt.receipt_name}} \r\n                            <img class=\"edit-button\" src=\"../../../assets/icons/trash.png\" \r\n                            style=\"width:1em; position: absolute; top: 0.5em; right: 1em; border-radius: 100\" (click)=\"openDeleteReceipt(item)\">\r\n                            <img class=\"edit-button\" src=\"../../../assets/icons/edit-icon.png\" \r\n                            style=\"width:1em; position: absolute; top: 0.5em; right: 2.5em; border-radius: 100\" (click)=\"openReceiptEditor(item)\"></p>\r\n                        <p style=\"margin-top: -15px;\">{{rs.getTotal(item) | currency}} <span style=\"text-align: left; margin-left: 2.5em\">{{item.receipt.receipt_date | date:'shortDate'}}</span></p>\r\n                    </div>\r\n                    <div *ngIf=\"item != selectedReceipt\" class=\"receipt-list\" (click)=\"selectReceipt(item)\" style=\"position: relative\">\r\n                        <p style=\"font-weight: bolder; font-size: 800; text-align: left; \r\n                        height: 1.3em; overflow-y: hidden; overflow-x: hidden; width: 115px;\">{{item.receipt.receipt_name}} <img class=\"edit-button\" \r\n                        src=\"../../../assets/icons/trash.png\" style=\"width:1em; top: 0.5em; position: absolute; right: 1em; border-radius: 100\" \r\n                        (click)=\"openDeleteReceipt(item)\"><img class=\"edit-button\" src=\"../../../assets/icons/edit-icon.png\" \r\n                        style=\"width:1em; top: 0.5em; position: absolute; right: 2.5em; border-radius: 100\" (click)=\"openReceiptEditor(item)\"></p>\r\n                        <p style=\"margin-top: -15px;\">{{rs.getTotal(item) | currency}} \r\n                            <span style=\"text-align: left; margin-left: 2.5em\">{{item.receipt.receipt_date | date:'shortDate'}}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </p-dialog>\r\n        \r\n        <p-dialog header=\"{{selectedReceipt.receipt.receipt_name}}\" [(visible)]=\"showReceipt\" [appendTo]=\"receiptList\" style=\"width:fit-content\">\r\n            <div>\r\n                <div *ngIf=\"selectedReceipt\">\r\n                    <p style=\"text-align: left;\"><span style=\"font-weight: bolder;\">Receipt ID: </span>{{selectedReceipt.receipt_id}}</p>\r\n                    <p style=\"text-align: left;\"><span style=\"font-weight: bolder;\">Date: </span>{{selectedReceipt.receipt.receipt_date | date:'shortDate'}}</p>\r\n                    <p style=\"text-align: left;\"><span style=\"font-weight: bolder;\">Amount: </span>{{rs.getTotal(selectedReceipt) | currency}}</p>\r\n                </div>\r\n            </div>\r\n        </p-dialog>\r\n        <p-dialog header=\"Delete: {{selectedReceipt.receipt.receipt_name}}\" [(visible)]=\"deleteReceipt\" [appendTo]=\"receiptList\" style=\"width:fit-content\">\r\n            <div style=\"text-align: center;\">\r\n                <h3 class=\"message\">Are you sure? <br> You are about to delete:<br><br><span style=\"color:#4ec5ca; font-size: larger;\"> {{selectedReceipt.receipt.receipt_name}}</span><br><br>\r\n                This cannot be undone.</h3>\r\n            \r\n                <button style=\"margin: 1em; display: inline-flex; text-align: center;\" class=\"track\" pButton type=\"submit\" label='Yes, Delete' (click)=\"confirmDeleteReceipt()\"></button>\r\n                <button style=\"margin: 1em; display: inline-flex; text-align: center;\" class=\"button-secondary\"pButton type=\"submit\" label='No, Keep' (click)=\"denyDeleteReceipt()\"></button>\r\n            </div>\r\n        </p-dialog>\r\n        <p-dialog header=\"Verify Upload Values\" [(visible)]=\"receiptUploaded\" [appendTo]=\"receiptList\" style=\"width:fit-content\">\r\n            <p-tabView [(activeIndex)]=\"inSel\">\r\n                <p-tabPanel [disabled]=\"!inProgress[j]\" [header]=\"getReceipt(j).get('receipt_name').value\" *ngFor=\"let receipt of form.controls; let j = index\" [selected]=\"j == inSel\">\r\n                    <p-progressSpinner *ngIf=\"load[j]\"></p-progressSpinner>\r\n                    <div *ngIf=\"!load[j]\">\r\n                        <div *ngIf=\"receiptUploaded && inProgress[j]\" class=\"upload-verification\">\r\n                            <form #f [formGroup]=\"getReceipt(j)\" (ngSubmit)=\"track(j)\">\r\n                                <div class=\"center\">\r\n                                    <p>Receipt Name</p>\r\n                                    <input formControlName=\"receipt_name\" type=\"text\" pInputText/>\r\n                                    <br>\r\n                                    <p>Date of Transaction</p>\r\n                                    <p-calendar formControlName=\"receipt_date\"></p-calendar>\r\n                                    <br>\r\n                                   \r\n                                </div>\r\n                                <div formArrayName=\"items\" style=\"margin-top: 5px;\" class=\"grid\" >\r\n                                \r\n                                                               \r\n                                    <div class=\"col-12\">\r\n                                        <ng-container *ngFor=\"let item of getItems(j).controls; let i=index\" >\r\n                                            <div [formGroup]=\"getItem(j, i)\" class=\"grid center\">\r\n                                                <div *ngIf=\"i==0\" class=\"col-4 adjust\" >\r\n                                                    <p class=\"adjust\">Item Name</p>\r\n                                                </div>\r\n                                                <div *ngIf=\"i==0\" class=\"col-8\">\r\n                                                    <p class=\"adjust\">Amount</p>\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <input type=\"text\" class=\"inputfield\" formControlName=\"item_name\" placeholder=\"Name\"pInputText/>\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <p-inputNumber class=\"item\" placeholder=\"Amount\" formControlName=\"item_amount\" \r\n                                                    mode=\"currency\" [maxFractionDigits]=\"2\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                                                </div>\r\n                                                <div class=\"col-1\">\r\n                                                    <button type=\"button\" (click)=\"removeItem(j, i)\"pButton label=\"Delete\" class=\"p-button-danger\"></button>\r\n                                                </div> \r\n                                            </div>\r\n                                            \r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <button type=\"button\" (click)=\"addEmptyItem(j)\" class=\"p-button-info addButton\">+ Add another item</button>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n                                        <p>Total: {{totals[j] | currency}}</p>\r\n                                    </div>\r\n\r\n                                   \r\n                                    \r\n                                </div>\r\n\r\n                                <p>Is this an income or a spending transaction?</p>\r\n                                <p-dropdown [options]=\"tyOptions\" \r\n                                [autoDisplayFirst]=false\r\n                                optionLabel=\"label\" optionValue=\"value\" dataKey=\"value\"\r\n                                formControlName=\"receipt_is_income\"></p-dropdown>\r\n\r\n                                <div *ngIf=\"getReceipt(j).get('receipt_is_income').value != null\">\r\n                                    <p>How would you categorize this receipt?</p>\r\n                                    <p-dropdown [options]=\"getOptions(j)\" optionLabel=\"category_name\" optionValue=\"category_id\" \r\n                                    [autoDisplayFirst]=false\r\n                                    formControlName=\"receipt_category\"></p-dropdown>\r\n                                 </div>\r\n                                <button class=\"track trackAdj\" pButton type=\"submit\" label='Track'></button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n        </p-dialog> \r\n        \r\n</div>\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UIChart } from 'primeng/chart';\r\nimport { SavingsOverTime } from 'src/app/models/savingsOverTime';\r\nimport { SavingsHistoryService } from 'src/app/services/savings-history.service';\r\nimport { TimeService } from 'src/app/services/time.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\n\r\n@Component({\r\n  selector: 'app-savings-over-time',\r\n  templateUrl: './savings-over-time.component.html',\r\n  styleUrls: ['./savings-over-time.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class SavingsOverTimeComponent implements OnInit {\r\n  chartData: any;\r\n  dataExists: boolean = false;\r\n  allTime: boolean = true;\r\n  rangeDates: Date[] = [this.ts.minDate, this.ts.maxDate]\r\n  types: any[] = \r\n  [\r\n     { name: \"Yearly\", value: \"yearly\"},\r\n     { name: \"Monthly\", value: \"monthly\"},\r\n     { name: \"Weekly\", value: \"weekly\"}\r\n  ]\r\n  selectedType: string = \"monthly\"\r\n  chartOptions: any;\r\n  yearSel: number = this.ts.year //default to current year\r\n  monthNames: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n  @ViewChild('chart') chart: UIChart;\r\n\r\n  constructor(private dp: DatePipe, private savServ: SavingsHistoryService, private trigServ: TriggerService, public ts: TimeService) { \r\n      this.trigServ.incomReceiptChanged$.subscribe(() =>\r\n      {\r\n          this.getNewData();\r\n      })\r\n\r\n      this.trigServ.expenReceiptChanged$.subscribe(() =>\r\n      {\r\n          this.getNewData();\r\n      })\r\n\r\n      var minDate = new Date();\r\n      this.savServ.cumSavings.forEach((value) =>\r\n      {\r\n        let date = this.ts.getDate(value.week, value.year)\r\n        if (date < minDate)\r\n        {\r\n            minDate = date;\r\n        }\r\n      })\r\n      this.rangeDates[0] = minDate;\r\n  }\r\n\r\n  syncData()\r\n  {\r\n    let newData = this.savServ.cumSavings.filter((value) => {\r\n        let date = this.ts.getDate(value.week, value.year)\r\n        return date >= this.rangeDates[0] && date <= this.rangeDates[1]\r\n       })\r\n\r\n\r\n\r\n    var result: SavingsOverTime[] = [];\r\n    var labels = []\r\n    var groups = []\r\n    var xTitle: string;\r\n    var grouped = {};\r\n    if (this.selectedType == \"yearly\")\r\n    {\r\n        result = this.groupByAndMax(newData, \"yearly\")\r\n\r\n        labels = result.map(val => val.year)\r\n\r\n        xTitle = \"Years\"\r\n    }\r\n    else if (this.selectedType == \"monthly\")\r\n    {\r\n\r\n        result = this.groupByAndMax(newData, \"monthly\")\r\n        xTitle = \"Months\"\r\n\r\n        labels = result.map(val => `${this.monthNames[val.month - 1]} ${val.year}`)\r\n    }\r\n    else\r\n    {\r\n        result = this.groupByAndMax(newData, \"weekly\")\r\n        xTitle = \"Weeks\"\r\n        labels = result.map(val => this.ts.getDate(val.week, val.year).toISOString().substring(0, 10))\r\n    }\r\n\r\n    if (result.length > 1)\r\n    {\r\n        this.dataExists = true;\r\n    }\r\n    else\r\n    {\r\n        this.dataExists = false;\r\n    }\r\n\r\n\r\n    let values = result.map((value) => value.totalSavings)\r\n\r\n    return {labels: labels, values: values, xTitle: xTitle}\r\n  }\r\n\r\n  groupByAndMax(data: SavingsOverTime[], type: string): SavingsOverTime[]\r\n  {\r\n    const result: SavingsOverTime[] = [...data.reduce((r, o) => {\r\n        var key: string;\r\n        switch (type)\r\n        {\r\n            case \"yearly\":\r\n                key = `${o.year}`; \r\n                break;\r\n            case \"monthly\":\r\n                key = o.year + \"-\" + o.month;\r\n                break;\r\n            case \"weekly\":\r\n                key = o.year + \"-\" + o.month + \"-\" + o.week;\r\n        }\r\n         \r\n        const item = r.get(key) || Object.assign({}, o, {\r\n          totalSavings: 0,\r\n        });\r\n        \r\n        if (o.totalSavings > item.totalSavings)\r\n        {\r\n            item.totalSavings = o.totalSavings;\r\n        }\r\n        \r\n        return r.set(key, item);\r\n      }, new Map).values()];\r\n\r\n      return result\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let data = this.syncData();\r\n\r\n\r\n    //TODO: Implement http request\r\n    this.chartData = {\r\n      labels: data.labels,\r\n      datasets: [\r\n          {\r\n              label: 'Savings',\r\n              data: data.values,\r\n              fill: true,\r\n              borderColor: '#4ec5ca80',\r\n              backgroundColor: '#4ec5ca50',\r\n              tension: 0,\r\n              \r\n          },\r\n      ]\r\n  };\r\n\r\n  this.chartOptions = {\r\n    plugins: {\r\n        datalabels: { display: false },\r\n        legend: {\r\n            display: false,\r\n        }\r\n    },\r\n    scales: {\r\n        x: {\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: data.xTitle,\r\n                font: {\r\n                    size: 20\r\n                }\r\n            },\r\n            grid: { display: false }\r\n        },\r\n        y: {\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Amount (in $)',\r\n                font: {\r\n                    size: 20\r\n                }\r\n            },\r\n            grid: { display: false }\r\n        }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n    getNewData()\r\n    {\r\n        let data = this.syncData();\r\n\r\n        this.chartData.labels = data.labels;\r\n        this.chartData.datasets[0].data = data.values;\r\n        this.chartOptions.scales.x.title.text = data.xTitle;\r\n        this.chart.refresh();\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Savings Over Time</h2> \r\n        </div>\r\n\r\n        <div style=\"position: relative;\">\r\n            <div *ngIf=\"!dataExists\" class=\"centerUn\">\r\n                <span>There is no data to display because there are neither logged expenses nor estimated budget expenses for the selected filters.</span>\r\n            </div>\r\n            <p-chart [ngStyle]=\"{'visibility': dataExists ? 'visible' : 'hidden'}\" #chart type=\"line\" [data]=\"chartData\" [options]=\"chartOptions\"></p-chart>\r\n          \r\n        </div>\r\n        \r\n        <div class=\"field grid\"> \r\n            <label for=\"horizontal\" class=\"col-fixed\" style=\"width:120px\" >Date Range</label>\r\n            <div class=\"col-fixed\" style=\"width:250px\">\r\n                <p-calendar [(ngModel)]=\"rangeDates\" class=\"inputfield\" (onInput)=\"getNewData()\" (onSelect)=\"getNewData()\" (onBlur)=\"getNewData()\" selectionMode=\"range\" [maxDate]=\"ts.maxDate\" [readonlyInput]=\"true\" inputId=\"range\"></p-calendar>\r\n            </div>\r\n        </div>\r\n        <div class=\"field grid\"> \r\n            <label for=\"horizontal\" class=\"col-fixed\" style=\"width:120px\" >Interval</label>\r\n            <div class=\"col-fixed\" style=\"width:450px\">\r\n                <p-selectButton [options]=\"types\" [(ngModel)]=\"selectedType\" (onChange)=\"getNewData()\" optionLabel=\"name\" optionValue=\"value\"></p-selectButton>\r\n            </div>\r\n        </div>\r\n        <br>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Receipt } from 'src/app/models/receipt';\r\nimport { QuickReceipt } from 'src/app/models/simReceipt';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReceiptTrackService {\r\n\r\n  private apiUrl = 'api/receipt_track/';  // URL to web api\r\n  private userReceipts: Receipt[]\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  get receipts()\r\n  {\r\n    return this.userReceipts;\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient, private as: AuthService) { }\r\n\r\n  /**GET receipts */\r\n  getReceipts(): Observable<Receipt[]> {\r\n    return this.http.get<Receipt[]>(`${this.apiUrl}users/${this.as.currentUserValue.user_id}/`).pipe(\r\n      tap((receipts: Receipt[]) => {\r\n        this.userReceipts = receipts;\r\n        console.log(\"Fetched receipts\")\r\n      }),\r\n      catchError(this.handleError<Receipt[]>('fetchReceipts'))\r\n    )\r\n  }\r\n\r\n  /**DELETE a receipt and its contents */\r\n  deleteReceipt(id: number): Observable<Receipt>\r\n  {\r\n    return this.http.delete(`${this.apiUrl}${id}/`).pipe(\r\n      tap((receipt: Receipt) => {\r\n        console.log(`Receipt deleted with id ${id}`)\r\n      }),\r\n      catchError(this.handleError<Receipt>('deleteReceipt'))\r\n    )\r\n  }\r\n\r\n  /** POST: add a new receipt to the server */\r\n  addReceipt(receipt: Receipt): Observable<Receipt> {\r\n    return this.http.post<Receipt>(this.apiUrl, receipt, this.httpOptions).pipe(\r\n      tap((newReceipt: Receipt) => console.log(`added receipt w/ id=${newReceipt.receipt_id}`)),\r\n      catchError(this.handleError<Receipt>('addReceipt'))\r\n    );\r\n  }\r\n\r\n    /** POST: add a new simple receipt with only a total amount */\r\n    addQuickReceipt(receipt: QuickReceipt): Observable<QuickReceipt> {\r\n      return this.http.post<QuickReceipt>(`${this.apiUrl}Simple`, receipt, this.httpOptions).pipe(\r\n        tap((newReceipt: QuickReceipt) => console.log(`added receipt w/ id=${newReceipt.receipt_id}`)),\r\n        catchError(this.handleError<QuickReceipt>('addReceipt'))\r\n      );\r\n    }\r\n\r\n    updateReceipt(receipt: Receipt): Observable<any> {\r\n      return this.http.put<Receipt>(`${this.apiUrl}/${receipt.receipt_id}/`, receipt, this.httpOptions).pipe(\r\n        tap(_ => console.log(`updated receipt w/ id=${receipt.receipt_id}`)),\r\n        catchError(this.handleError<Receipt>('updateReceipt'))\r\n      );\r\n    }\r\n\r\n    convert(rec: QuickReceipt): Receipt\r\n    {\r\n      let trans: Receipt = <Receipt>{}\r\n      trans.quick = true;\r\n      trans.receipt_id = rec.receipt_id\r\n      trans.userid = rec.user_id\r\n      trans.receipt = {\r\n        receipt_date: rec.receipt_date,\r\n        receipt_is_income: rec.is_income,\r\n        receipt_name: rec.receipt_name,\r\n        receipt_is_reccuring: 0\r\n\r\n      }\r\n      if (rec.is_income)\r\n      {\r\n        trans.incomes = []\r\n        trans.incomes.push({income_amount: rec.receipt_amount,\r\n        income_name: rec.receipt_name, income_id: undefined, category_id: rec.category})\r\n      }\r\n      else\r\n      {\r\n        trans.expenses = []\r\n        trans.expenses.push({expense_price: rec.receipt_amount,\r\n          expense_name: rec.receipt_name, expense_id: undefined, category_id: rec.category})\r\n      }\r\n      return trans;\r\n    }\r\n\r\n    getTotal(receipt: Receipt)\r\n    {\r\n      if (receipt.receipt.receipt_is_income && receipt.incomes.length > 0)\r\n      {\r\n        return receipt.incomes.map(i => i.income_amount).reduce((a,b)=>a+b);\r\n      }\r\n      else if (receipt.expenses.length > 0)\r\n      {\r\n        return receipt.expenses.map(i => i.expense_price).reduce((a,b)=>a+b);\r\n      }\r\n      else\r\n      {\r\n        return 0;\r\n      }\r\n     \r\n    }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n   private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      //console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-small-widget',\r\n  templateUrl: './small-widget.component.html',\r\n  styleUrls: ['./small-widget.component.scss']\r\n})\r\nexport class SmallWidgetComponent implements OnInit {\r\n  @Input() image: string | undefined;\r\n  @Input() title: string = '';\r\n  @Input() subtitle: string | undefined;\r\n  @Input() smallSize: boolean = false;\r\n  @Input() button: string | undefined;\r\n\r\n  imageUrl: string ='';\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  overlay(){\r\n    console.log('overlay');\r\n  }\r\n\r\n}","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>{{ title }}</h2> \r\n            <p *ngIf=\"subtitle\" >{{ subtitle }}</p>\r\n        </div>\r\n        <br>\r\n        <img *ngIf=\"image\" src={{image}}>\r\n        <br>\r\n        <button *ngIf=\"button\" class=\"button\" pButton type=\"button\" label={{ button }} (click)=\"overlay()\"></button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SelectMultipleControlValueAccessor } from '@angular/forms';\r\nimport { Chart } from 'chart.js';\r\nimport annotationPlugin from 'chartjs-plugin-annotation';\r\nimport {ChartModule, UIChart} from 'primeng/chart';\r\nimport { Category } from 'src/app/models/category';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { SpendingHistoryService } from 'src/app/services/spending-history.service';\r\nimport { TimeService } from 'src/app/services/time.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\n\r\n@Component({\r\n  selector: 'app-spending-by-category',\r\n  templateUrl: './spending-by-category.component.html',\r\n  styleUrls: ['./spending-by-category.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class SpendingByCategoryComponent implements OnInit {\r\n\r\n  dataExists: boolean = false;\r\n  data: any;\r\n  chartOptions: any;\r\n  catOptions: Category[] = [];\r\n  categories: string[] = []\r\n  curMonthSpendByCat: number[] = [];\r\n  selDate: Date = new Date();\r\n\r\n  @ViewChild('chart3') chart: UIChart;\r\n\r\n  constructor(private spenServ: SpendingHistoryService, private catServ: CategoryService, public ts: TimeService, private trigServ: TriggerService) { \r\n    Chart.register(annotationPlugin)\r\n    this.catOptions = this.catServ.expenseCats\r\n\r\n    this.trigServ.expenReceiptChanged$.subscribe(() =>\r\n    {\r\n        this.getNewData();\r\n    })\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setupValues();\r\n\r\n    this.data = {\r\n      labels: this.categories, \r\n      datasets: [\r\n          {\r\n              label: 'Spending',\r\n              data: this.curMonthSpendByCat,\r\n              backgroundColor: [\r\n                \"#003486 \",\r\n                \"#4ec5ca\",\r\n                \"#4eca9f\",\r\n                \"#03fca9\",\r\n                \"#93d9f5\",\r\n                \"#008048\"\r\n            ],\r\n          },\r\n      ]\r\n    }\r\n\r\n    this.chartOptions = {\r\n      plugins: {\r\n          datalabels: { display: false },\r\n          annotation: {\r\n            annotations: {\r\n              label1: {\r\n                type: 'label',\r\n                font: {\r\n                  size: 18\r\n                },\r\n                textAlign: 'center',\r\n                backgroundColor: 'rgba(245,245,245)',\r\n                display: true,\r\n                content: ['There is no data to display because there are no logged purchases for the selected month.']\r\n              }\r\n            }\r\n\r\n          }\r\n      }}\r\n }\r\n\r\n  setupValues()\r\n  {\r\n    this.curMonthSpendByCat = []\r\n    this.categories = []\r\n    let spendData = this.spenServ.catSpenByMonth.filter(value => value.year == this.selDate.getFullYear() \r\n    && value.month == this.selDate.getMonth() + 1)\r\n    for (let i of this.catOptions)\r\n    {\r\n      let spenValue = spendData.find(value => value.category_id == i.category_id)\r\n\r\n      if (spenValue)\r\n      {\r\n        this.categories.push(i.category_name)\r\n        spenValue ? this.curMonthSpendByCat.push(spenValue.totalSpent) : this.curMonthSpendByCat.push(0)\r\n      }  \r\n    }\r\n\r\n    if (spendData.length > 0)\r\n    {\r\n      this.dataExists = true\r\n    }\r\n    else\r\n    {\r\n      this.dataExists = false;\r\n    }\r\n  }\r\n\r\n  getNewData()\r\n  {\r\n    this.setupValues()\r\n    this.data.labels = this.categories\r\n    this.data.datasets[0].data = this.curMonthSpendByCat;\r\n    this.chart.refresh()\r\n  }\r\n\r\n}","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Spending By Category</h2> \r\n        </div>\r\n\r\n        <div style=\"position: relative;\">\r\n            <div *ngIf=\"!dataExists\" class=\"centerUn\">\r\n                <span>There is no data to display because there are no logged purchases for the selected month.</span>\r\n            </div>\r\n            <div [style]=\"{'width': '50%'}\">\r\n                 <p-chart [ngStyle]=\"{'visibility': dataExists ? 'visible' : 'hidden'}\" #chart3 type=\"pie\"  [options]=\"chartOptions\" [data]=\"data\"></p-chart>\r\n             </div>\r\n        </div>\r\n\r\n        \r\n        <div class=\"formgroup-inline\" style=\"margin-top: 15px;\"> \r\n           \r\n            <label class=\"col-fixed\" style=\"width:65px; margin-top: 3px;\" \r\n            for=\"month\" >Month</label>\r\n            <p-calendar id=\"month\" inputId=\"month\" \r\n            [minDate]=\"ts.minDate\" [maxDate]=\"ts.maxDate\"\r\n            class=\"inputfield\" [(ngModel)]=\"selDate\" view=\"month\" \r\n            (onSelect)=\"getNewData()\" \r\n            dateFormat=\"mm/yy\"></p-calendar>\r\n    </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UIChart } from 'primeng/chart';\r\nimport { IncomeHistoryService } from 'src/app/services/income-history.service';\r\nimport { SpendingHistoryService } from 'src/app/services/spending-history.service';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport {Chart} from 'chart.js';\r\nimport { TimeService } from 'src/app/services/time.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\n\r\n@Component({\r\n  selector: 'app-spending-vs-income',\r\n  templateUrl: './spending-vs-income.component.html',\r\n  styleUrls: ['./spending-vs-income.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class SpendingVsIncomeComponent implements OnInit {\r\n  chartData: any;\r\n  dataExists: boolean = false;\r\n  chartOptions: any;\r\n  values: number[] = []\r\n  values2: number[] = []\r\n  monthValues: string[] = []\r\n  yearSel: number = this.ts.year //default to current year\r\n  monthLabels: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n  @ViewChild('chart3') chart: UIChart;\r\n\r\n  constructor(private spenServ: SpendingHistoryService, \r\n    private incServ: IncomeHistoryService,\r\n    private trigServ: TriggerService, public ts: TimeService) { \r\n      Chart.register(ChartDataLabels)\r\n      this.trigServ.incomReceiptChanged$.subscribe(() =>\r\n      {\r\n          this.getNewData();\r\n      })\r\n\r\n      this.trigServ.expenReceiptChanged$.subscribe(() =>\r\n      {\r\n          this.getNewData();\r\n      })\r\n  }\r\n\r\n  setupValues()\r\n  {\r\n    this.values = []\r\n    this.values2 = []\r\n    this.monthValues = []\r\n    let data = this.spenServ.spendByMonth.filter((value) => value.year == this.yearSel)\r\n    let data2 = this.incServ.incomeByMonth.filter((value) => value.year == this.yearSel)\r\n\r\n    for (let i in this.monthLabels)\r\n    {\r\n      let val1 = data.find((value) => value.month == parseInt(i) + 1)\r\n      let val2 = data2.find((value) => value.month == parseInt(i) + 1)\r\n      if (val1 != null || val2 != null)\r\n      {\r\n        this.monthValues.push(this.monthLabels[i])\r\n        this.values.push(val1 ? val1.totalSpent : 0)\r\n        this.values2.push(val2 ? val2.totalIncomeReceived : 0)\r\n      }  \r\n    }\r\n\r\n    if (data.length == 0 && data2.length == 0)\r\n    {\r\n      this.dataExists = false;\r\n    }\r\n    else\r\n    {\r\n      this.dataExists = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.setupValues()\r\n\r\n    //TODO: Implement http request\r\n    this.chartData = {\r\n      labels: this.monthValues,\r\n      datasets: [\r\n          {\r\n              label: 'Spending',\r\n              data: this.values,\r\n              fill: true,\r\n              barPercentage: 0.9,\r\n              backgroundColor: (context) => {   \r\n                  let sum = this.values[context.dataIndex]\r\n                  let value = this.values2[context.dataIndex]\r\n                  let percentage = (sum*100 / value);\r\n                  return this.getColorLight(percentage)\r\n              },\r\n              tension: 0,\r\n              \r\n          },\r\n          {\r\n            label: 'Income',\r\n            data: this.values2,\r\n            fill: true,\r\n            barPercentage: 1,\r\n            backgroundColor: 'rgba(78, 197, 202, 0.15)',\r\n            tension: 0,\r\n            \r\n        },\r\n      ]\r\n  };\r\n\r\n  this.chartOptions = {\r\n        plugins: {\r\n            datalabels: {\r\n              align: 'center',\r\n              anchor: 'center',\r\n              backgroundColor: (context) => {\r\n                \r\n                  let sum = this.values[context.dataIndex]\r\n                  let value = this.values2[context.dataIndex]\r\n                  let percentage = (sum*100 / value);\r\n                  if (value == 0 || value == undefined)\r\n                  {\r\n                    return \"rgba(0, 0, 0, 0.72)\"\r\n                  }\r\n                  return this.getColor(percentage)\r\n               \r\n            },\r\n              borderRadius: 4,\r\n              font: {\r\n                weight: 'bold'\r\n              },\r\n              display: (context) => {\r\n               // console.log(context)\r\n               if (context.dataset.label == 'Income' && this.values2[context.dataIndex] > this.values[context.dataIndex])\r\n               {\r\n                 return true;\r\n               }\r\n               else if (context.dataset.label == 'Spending' && this.values[context.dataIndex] > this.values2[context.dataIndex])\r\n               {\r\n                 return true;\r\n               }\r\n               return false;\r\n              },\r\n              formatter: (value, context) => {\r\n                  \r\n                   // console.log(value)\r\n                    let sum = this.values[context.dataIndex]\r\n                    let val = this.values2[context.dataIndex]\r\n                    if (val == 0 || val == undefined)\r\n                    {\r\n                      return \"No Income Data\"\r\n                    } \r\n                    else\r\n                    {\r\n                      let percentage = (sum*100 / val).toFixed(2)+\"%\";\r\n                      return percentage;\r\n                    }\r\n              },\r\n              color: 'white',\r\n          },\r\n        \r\n        legend: {\r\n            display: true,\r\n        }\r\n  },\r\n    scales: {\r\n        x: {\r\n            stacked: true,\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Months',\r\n                font: {\r\n                    size: 20\r\n                }\r\n            },\r\n            grid: { display: false }\r\n        },\r\n        y: {\r\n          stacked: false,\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Amount (in $)',\r\n                font: {\r\n                    size: 20\r\n                }\r\n            },\r\n            grid: { display: false }\r\n        }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n    async getNewData()\r\n    {\r\n        this.setupValues()\r\n        this.chartData.labels = this.monthValues\r\n        this.chartData.datasets[0].data = this.values;\r\n        this.chartData.datasets[1].data = this.values2;\r\n        this.chart.refresh();\r\n    }\r\n\r\n    getColor(num: number)\r\n    {\r\n      if (num <= 100)\r\n      {\r\n        return 'rgba(76, 192, 94, 1)'\r\n\r\n      }\r\n      else\r\n      {\r\n        return 'rgba(255, 0, 0, 1)'\r\n      }\r\n    }\r\n\r\n    getColorLight(num: number)\r\n    {\r\n      if (num <= 100)\r\n      {\r\n        return 'rgba(76, 192, 94, 0.35)'\r\n\r\n      }\r\n      else\r\n      {\r\n        return 'rgba(255, 0, 0, 0.35)'\r\n      }\r\n    }\r\n\r\n}\r\n","<div class=\"panel\"> \r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Spending vs. Income</h2> \r\n            <div class=\"field grid\" style=\"float: right; right:0\"> \r\n                <label for=\"horizontal\" class=\"col-fixed\" style=\"font-size: 1.25em; padding-top: .75vh; color: #707070\" >Year</label>\r\n                <div class=\"col-fixed\" style=\"width:8vw\">\r\n                    <p-inputNumber [(ngModel)]=\"yearSel\" [useGrouping]=\"false\" [showButtons]=\"true\" \r\n                    [min]=\"1900\" [max]=\"2100\" (onInput)=\"getNewData()\" class=\"inputfield\"\r\n                    buttonLayout=\"horizontal\" spinnerMode=\"horizontal\" inputId=\"horizontal\"\r\n                    decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\" incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\">\r\n                    </p-inputNumber>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <p-chart #chart3 type=\"bar\" [data]=\"chartData\" [options]=\"chartOptions\"></p-chart>\r\n        \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tracking-type',\r\n  templateUrl: './tracking-type.component.html',\r\n  styleUrls: ['./tracking-type.component.scss', './../small-widget/small-widget.component.scss']\r\n})\r\nexport class TrackingTypeComponent implements OnInit {\r\n\r\n  type: string = \"spending\"\r\n  options: any[] = [{display: 'Spending', code: 'spending'}, {display: 'Income', code: 'income'}]\r\n\r\n  constructor() { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"header\" style=\"display: block;\">\r\n        <h2>Track Manually</h2> \r\n        <p-dropdown [options]=\"options\" [(ngModel)]=\"type\" optionLabel=\"display\" optionValue=\"code\" placeholder=\"Select Type\"></p-dropdown>\r\n    </div>\r\n    <br>\r\n    <div *ngIf=\"type == 'spending'\">\r\n        <app-tracking></app-tracking>\r\n    </div>\r\n    <div *ngIf=\"type == 'income'\">\r\n        <app-income-tracking></app-income-tracking>\r\n    </div>\r\n   \r\n\r\n</div>\r\n","import { ButtonModule } from 'primeng/button';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { componentFactoryName } from '@angular/compiler';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Category } from 'src/app/models/category';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { CategoryService } from '../../services/category.service';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Receipt } from 'src/app/models/receipt';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ReceiptTrackService } from '../services/receipt-track.service';\r\nimport { WidgetService } from '../widget.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\nimport { QuickReceipt } from 'src/app/models/simReceipt';\r\n\r\n@Component({\r\n  selector: 'app-tracking',\r\n  templateUrl: './tracking.component.html',\r\n  styleUrls: ['./tracking.component.scss']\r\n})\r\nexport class TrackingComponent implements OnInit {\r\n  form: FormGroup = <FormGroup>{};\r\n  catOptions!: Category[];\r\n  frequencyOptions!: SelectItem[];\r\n\r\n  constructor(private ms: MessageService,\r\n    private fb: FormBuilder,\r\n    private rs: ReceiptTrackService,\r\n    private trigServ: TriggerService,\r\n    private ws: WidgetService,\r\n    private auServ: AuthService,\r\n    private cs: CategoryService) { \r\n      this.catOptions = this.cs.expenseCats;\r\n\r\n      this.frequencyOptions = this.ws.frequencyOptions;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      receipt_date: ['', Validators.required],\r\n      product_price: ['', Validators.required],\r\n      product_name: ['', Validators.required],\r\n      category: ['', Validators.required],\r\n      reocurring: ['']\r\n});\r\n\r\n  }\r\n\r\n  track() {\r\n\r\n    if (this.form.invalid) {\r\n      this.ms.addInfo(\"Invalid Entry\", \"Some fields are incomplete or invalid.\")\r\n      return;\r\n    }\r\n\r\n    let out: QuickReceipt =\r\n    {\r\n      user_id: this.auServ.currentUserValue.user_id,\r\n      receipt_amount: this.form.value['product_price'],\r\n      receipt_name: this.form.value['product_name'],\r\n      category: this.form.value['category'],\r\n      receipt_date: this.form.value['receipt_date'],\r\n      reccuring: false,\r\n      is_income: false\r\n    }\r\n\r\n    this.rs.addQuickReceipt(out)\r\n      .subscribe((res: any)=> {\r\n        this.form.reset()\r\n        out.receipt_id = res.receipt_id\r\n        this.trigServ.announceExpenReceiptSubmit(this.rs.convert(out));\r\n      }\r\n      )\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"track()\">\r\n            <div class=\"content-area\">\r\n                <p>Name</p>\r\n                <input formControlName=\"product_name\" type=\"text\" pInputText/>\r\n                <br>\r\n                <p>Date</p>\r\n                <p-calendar formControlName=\"receipt_date\"></p-calendar>\r\n                <br>\r\n                <p>Category</p>\r\n                <p-dropdown [options]=\"catOptions\" optionLabel=\"category_name\" optionValue=\"category_id\" \r\n                [autoDisplayFirst]=false\r\n                formControlName=\"category\"></p-dropdown>\r\n                <br>\r\n                <p>Cost</p>\r\n                <p-inputNumber formControlName=\"product_price\" \r\n                mode=\"currency\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                <br>\r\n                <p>Monthly Recurrence</p>\r\n                <p-dropdown [options]=\"frequencyOptions\"\r\n                [autoDisplayFirst]=false\r\n                placeholder=\"Optional\"\r\n                formControlName=\"reocurring\"></p-dropdown>\r\n                <br>\r\n                <button style=\"margin-top: 2em\" class=\"track\" pButton type=\"submit\" label='Track'></button>\r\n            </div>\r\n</form>\r\n       \r\n","import { Trophy } from './../../models/trophy';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-trophies',\r\n  templateUrl: './trophies.component.html',\r\n  styleUrls: ['./trophies.component.scss', './../small-widget/small-widget.component.scss']\r\n})\r\nexport class TrophiesComponent implements OnInit {\r\n\r\n  trophies: Trophy[];\r\n\r\n  constructor(au: AuthService) { \r\n\r\n    let userId = au.currentUserValue.user_id;\r\n    //TODO: retrieve trophies from api\r\n\r\n    this.trophies = [\r\n    {trophy_id: 1, trophy_name: 'Savvy Saver', trophy_description: 'Tracked spending the most for one month'},\r\n    {trophy_id: 2, trophy_name: 'First Place', trophy_description: 'Beat your friends at a challenge'},\r\n    ]\r\n\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div>\r\n        <div class=\"content-area\">\r\n        <div>\r\n            <h2>Trophies</h2> \r\n        </div>\r\n    </div>\r\n       <div class=\"badges\" *ngFor=\"let trophy of trophies\">\r\n        <div style=\"display: inline-flex\">\r\n            <img src=\"../../../assets/icons/Icon ionic-md-trophy.png\"/>\r\n        <div class=\"descriptions\">\r\n            <p class=\"name\">{{trophy.trophy_name}}</p>\r\n            <p class=\"description\">{{trophy.trophy_description}}</p>\r\n        </div>\r\n        </div>\r\n    </div> \r\n    </div>\r\n    \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport { SpendingHistoryService } from 'src/app/services/spending-history.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\n\r\n@Component({\r\n  selector: 'app-weekly-spending-small',\r\n  templateUrl: './weekly-spending-small.component.html',\r\n  styleUrls: ['./weekly-spending-small.component.scss', './../small-widget/small-widget.component.scss']\r\n})\r\nexport class WeeklySpendingSmallComponent implements OnInit {\r\n\r\n  value: number = 0;\r\n  weeklyBudget: number = 0;\r\n  weeklySpent: number = 0;\r\n  status: string = \"error loading status\";\r\n\r\n\r\n  constructor(private budServ: BudgetService,\r\n    private spenHis: SpendingHistoryService, private trigServ: TriggerService) { \r\n      this.trigServ.expenReceiptChanged$.subscribe(() =>\r\n    {\r\n      this.ngOnInit();\r\n    })\r\n\r\n    this.trigServ.budgetUpdatedAnnounced$.subscribe(() =>\r\n    {\r\n      this.ngOnInit();\r\n    })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.value = 0;\r\n    //fetch value from database (calculate percentage)\r\n   this.weeklyBudget = this.budServ.curBudCalcs.weeklyBudgetTotal; //need to retreive via api\r\n   this.weeklySpent = this.spenHis.weekSpend; //api retrieval\r\n\r\n   let interval = setInterval(() => {\r\n    this.value = this.value + Math.floor(this.weeklySpent);\r\n    if (this.value >= this.weeklySpent) {\r\n        this.value = this.weeklySpent;\r\n    }\r\n  }, 100);\r\n\r\n  this.pickMessage();\r\n\r\n\r\n  }\r\n\r\n  pickMessage() {\r\n    if(this.weeklyBudget>this.weeklySpent){\r\n      this.status = \"Under budget!\"\r\n    } else if (this.weeklyBudget < this.weeklySpent) {\r\n      this.status = \"Over budget!\"\r\n    } else if (this.weeklyBudget == this.weeklySpent){\r\n      this.status = \"Right on track!\"\r\n  }\r\n\r\n  }\r\n}","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Weekly Spending</h2> \r\n        </div>\r\n        <div class=\"emphasis\">{{ value | currency}}</div>\r\n        <p style=\"font-weight: bolder !important\">{{ status }}</p>\r\n    </div>\r\n</div>","import { getSupportedInputTypes } from '@angular/cdk/platform';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BudgetService } from 'src/app/services/budget.service';\r\nimport { SpendingHistoryService } from 'src/app/services/spending-history.service';\r\nimport { TriggerService } from 'src/app/services/trigger.service';\r\n\r\n@Component({\r\n  selector: 'app-weekly-spending',\r\n  templateUrl: './weekly-spending.component.html',\r\n  styleUrls: ['./weekly-spending.component.scss', './../basic-widget/basic-widget.component.scss']\r\n})\r\nexport class WeeklySpendingComponent implements OnInit {\r\n\r\n  value: number = 0;\r\n  weeklyBudget: number = 0;\r\n  weeklySpent: number = 0;\r\n  percentage: number = 0;\r\n\r\n\r\n  constructor(private spenHis: SpendingHistoryService, private trigServ: TriggerService,\r\n    private budServ: BudgetService) { \r\n\r\n    this.trigServ.expenReceiptChanged$.subscribe(() =>\r\n    {\r\n      this.ngOnInit();\r\n    })\r\n\r\n    this.trigServ.budgetUpdatedAnnounced$.subscribe(() =>\r\n    {\r\n      this.ngOnInit();\r\n    })\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n        //fetch value from database (calculate percentage)\r\n        this.value = 0;\r\n        this.weeklyBudget = Math.round(this.budServ.curBudCalcs.weeklyBudgetTotal);\r\n     \r\n        this.weeklySpent = this.spenHis.weekSpend;\r\n        this.percentage = Math.round(this.weeklySpent/this.weeklyBudget *100);\r\n  \r\n     let interval = setInterval(() => {\r\n      this.value = this.value + 10;\r\n      if (this.value >= this.percentage) {\r\n          this.value = this.percentage;\r\n      }\r\n  }, 70);\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"content-area\">\r\n        <div class=\"header\">\r\n            <h2>Weekly Spending</h2> \r\n        </div>\r\n        <p-progressBar class=\"progress-bar\" [value]=\"value\"></p-progressBar>\r\n            <p class=\"subtitle\">{{ weeklySpent | currency}} / <span style=\"font-weight:bold\">{{ weeklyBudget | currency}}</span></p>\r\n    </div>\r\n</div>","import { DialogModule } from 'primeng/dialog';\r\nimport { WeeklySpendingSmallComponent } from './weekly-spending-small/weekly-spending-small.component';\r\nimport { SmallWidgetComponent } from './small-widget/small-widget.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BasicWidgetComponent } from './basic-widget/basic-widget.component';\r\nimport { ReceiptTrackingComponent } from './receipt-tracking/receipt-tracking.component';\r\nimport { TrackingComponent } from './tracking/tracking.component';\r\nimport { PrimengModule } from '../primeng/primeng.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { WeeklySpendingComponent } from './weekly-spending/weekly-spending.component';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\nimport { IncomeTrackingComponent } from './income-tracking/income-tracking.component';\r\nimport {ChartModule} from 'primeng/chart';\r\nimport { SavingsOverTimeComponent } from './savings-over-time/savings-over-time.component';\r\nimport { BadgesWidgetComponent } from './badges-widget/badges-widget.component';\r\nimport { BudgetSliderComponent } from './budget-slider/budget-slider.component';\r\nimport {OverlayPanel, OverlayPanelModule} from 'primeng/overlaypanel';\r\nimport {FileUploadModule} from 'primeng/fileupload';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { SpendingVsIncomeComponent } from './spending-vs-income/spending-vs-income.component';\r\nimport { BudgetVsSpendingComponent } from './budget-vs-spending/budget-vs-spending.component';\r\nimport { ActualVsEstIncomeComponent } from './actual-vs-est-income/actual-vs-est-income.component';\r\nimport { SpendingByCategoryComponent } from './spending-by-category/spending-by-category.component';\r\nimport { LetterGradeComponent } from './letter-grade/letter-grade.component';\r\nimport { BudgetBreakdownChartComponent } from './budget-breakdown-chart/budget-breakdown-chart.component';\r\nimport { TrophiesComponent } from './trophies/trophies.component';\r\nimport { ChallengeProgressComponent } from './challenge-progress/challenge-progress.component';\r\nimport { AvailableChallengesComponent } from './available-challenges/available-challenges.component';\r\nimport { AvatarEditorComponent } from './avatar-editor/avatar-editor.component';\r\nimport { TrackingTypeComponent } from './tracking-type/tracking-type.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BasicWidgetComponent,\r\n    SmallWidgetComponent,\r\n    ReceiptTrackingComponent,\r\n    TrackingComponent,\r\n    WeeklySpendingComponent,\r\n    WeeklySpendingSmallComponent,\r\n    IncomeTrackingComponent,\r\n    SavingsOverTimeComponent,\r\n    BadgesWidgetComponent,\r\n    BudgetSliderComponent,\r\n    SpendingVsIncomeComponent,\r\n    BudgetVsSpendingComponent,\r\n    ActualVsEstIncomeComponent,\r\n    SpendingByCategoryComponent,\r\n    LetterGradeComponent,\r\n    BudgetBreakdownChartComponent,\r\n    TrophiesComponent,\r\n    ChallengeProgressComponent,\r\n    AvailableChallengesComponent,\r\n    AvatarEditorComponent,\r\n    TrackingTypeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PrimengModule,\r\n    ReactiveFormsModule,\r\n    ProgressBarModule,\r\n    ChartModule,\r\n    FormsModule,\r\n    OverlayPanelModule,\r\n    FileUploadModule,\r\n    HttpClientModule,\r\n    DialogModule\r\n  ],\r\n  exports: [BasicWidgetComponent,\r\n    SmallWidgetComponent,\r\n    ReceiptTrackingComponent,\r\n    TrackingComponent,\r\n    WeeklySpendingComponent,\r\n    WeeklySpendingSmallComponent,\r\n    IncomeTrackingComponent,\r\n    SavingsOverTimeComponent,\r\n    BadgesWidgetComponent,\r\n    BudgetSliderComponent,\r\n    SpendingVsIncomeComponent,\r\n    BudgetVsSpendingComponent,\r\n    ActualVsEstIncomeComponent,\r\n    SpendingByCategoryComponent,\r\n    BudgetBreakdownChartComponent,\r\n    TrophiesComponent,\r\n    LetterGradeComponent,\r\n    ChallengeProgressComponent,\r\n  AvailableChallengesComponent, \r\n  AvatarEditorComponent,\r\n  TrackingTypeComponent\r\n]\r\n})\r\nexport class WidgetModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { EMPTY, Observable, of } from 'rxjs';\r\nimport { catchError, concatMap, map, share, tap } from 'rxjs/operators';\r\n\r\nimport { User } from '../models/user';\r\nimport { MessageService } from '../services/message.service';\r\nimport { ReceiptService } from '../services/receipt.service';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Receipt } from '../models/receipt';\r\nimport { BasicManualSpend } from '../models/formModels/basicManualSpend';\r\nimport { Income } from '../models/income';\r\nimport { BasicManualIncome } from '../models/formModels/basicManualIncome';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\n\r\n@Injectable({ providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n\r\n   frequencyOptions: SelectItem[] = [\r\n    {label: 'Every 1st Day of 1st Week', value: 1},\r\n    {label: 'Every 1st Day of 2nd Week', value: 2,},\r\n    {label: 'Every 1st Day of 3rd Week', value: 3},\r\n    {label: 'Every 1st Day of 4th Week', value: 4}\r\n  ]\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService,\r\n    private as: AuthService,\r\n    private rs: ReceiptService,\r\n    private cs: CategoryService,\r\n    private dp: DatePipe) { \r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    /*use for testing purposes of manual spending function\r\n    testFunction()\r\n    {\r\n        let inp: BasicManualSpend = {  receipt_date: new Date(),\r\n        product_price: 25.23,\r\n        product_name: \"Soap\",\r\n        category: 1}\r\n        this.basicSpendingTransaction(inp).pipe(share())\r\n    }\r\n\r\n    /**\r\n   * This is designed to input a spending transaction for an individual product on its own receipt.  It will be used\r\n   * by the spending-tracking widget.  In the desktop interface, we may add a non-widget for spending that would allow the input of multiple \r\n   * products for a given receipt.\r\n   */\r\n  /*\r\n    basicSpendingTransaction(inp: BasicManualSpend): Observable<Product>\r\n    {\r\n        return this.rs.addReceipt({\r\n            receipt_date: this.dp.transform(inp.receipt_date, 'yyyy-MM-dd HH:mm:ss'),\r\n            is_income: false, reccuring: inp.reocurring,\r\n            receipt_amount: inp.product_price,\r\n            user: this.as.currentUserValue.user_id})\r\n            .pipe(\r\n              concatMap((rec: Receipt) =>\r\n              {\r\n                return this.ps.addProduct({\r\n                  product_name: inp.product_name,\r\n                  product_price: inp.product_price,\r\n                  category: inp.category,\r\n                  receipt: rec.receipt_id\r\n                })\r\n              }),\r\n            map((res: Product) => {\r\n                this.messageService.addSuccess('Spending Recorded Successfully', \"\");\r\n            }),\r\n            catchError(err => \r\n              {\r\n                this.messageService.addError('Spending Failed to Be Recorded!', \"\");\r\n                return of('error', err);\r\n              }));\r\n        \r\n    }\r\n\r\n     /**\r\n   * This is designed to input an income transaction for an individual income source on its own receipt.  It will be used\r\n   * by the income-tracking widget. \r\n   */\r\n  /*\r\n      basicIncomeTransaction(inp: BasicManualIncome): Observable<Income>\r\n      {\r\n          return this.rs.addReceipt({\r\n              receipt_date: this.dp.transform(inp.receipt_date, 'yyyy-MM-dd HH:mm:ss'),\r\n              is_income: true, reccuring: inp.reocurring,\r\n              receipt_amount: inp.income_amount,\r\n              user: this.as.currentUserValue.user_id})\r\n              .pipe(\r\n                concatMap((rec: Receipt) =>\r\n                {\r\n                  return this.is.addIncome({\r\n                    income_name: inp.income_name,\r\n                    income_amount: inp.income_amount,\r\n                    category: inp.category,\r\n                    receipt: rec.receipt_id\r\n                  })\r\n                }),\r\n              map((res: Income) => {\r\n                  this.messageService.addSuccess('Income Recorded Successfully', \"\");\r\n              }),\r\n              catchError(err => \r\n                {\r\n                  this.messageService.addError('Income Failed to Be Recorded!', \"\");\r\n                  return of('error', err);\r\n                }));\r\n          \r\n      }\r\n\r\n  \r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a UserService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.addInfo(`UserService: ${message}`, \"\");\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["Subject","TriggerService","constructor","spenHis","savHis","incHis","challServ","budServ","levelAnnounce","asObservable","expenReceiptChange","incomReceiptChange","favoritesAnnounce","budgetUpdateAnnounce","challAnnounce","challComplete","announceChallengeUpdate","getChallenges","toPromise","next","findNewCompleted","pre_Inv","challenges","announceChallengeComplete","chall","preLev_Prog","level","levProgress","announceLevelGain","announceBudgetUpdate","budgets","updateValues","announceFavoritesChange","favorites","shouldUpWid","updateFavorites","announceReceiptDelete","rec","recDeleteProcess","operation","receipt","receipt_is_income","recAddProcess","announceReceiptUpdate","oldReceipt","announceExpenReceiptSubmit","checkTrigger","announceIncomReceiptSubmit","type","trigs","has","oldInv","newInv","candidates","filter","val","is_active","completion_date","map","id","forEach","includes","i0","factory","providedIn","Chart","ChartDataLabels","ActualVsEstIncomeComponent","incServ","athServ","catServ","trigServ","ts","Date","regDate","currentUserValue","user_registration_date","yearRange","getFullYear","today","register","catOptions","inBudByCat","year","month","refreshFavorites","incomReceiptChanged$","subscribe","getNewData","budgetUpdatedAnnounced$","selectedCats","is_favorite","noIncFavorites","selection","setupValues","actIncValues","estIncValues","categories","estIncData","value","selDate","getMonth","acIncdData","catIncomeByMonth","i","acIncValue","find","category_id","estIncValue","categoryTitle","push","totalIncomeReceived","altered_amount","length","dataExists","ngOnInit","chartData","labels","datasets","label","data","fill","barPercentage","backgroundColor","context","sum","dataIndex","percentage","getColorLight","tension","chartOptions","plugins","datalabels","align","anchor","getColor","borderRadius","font","weight","display","dataset","formatter","toFixed","color","legend","scales","x","stacked","ticks","title","text","size","grid","y","chart","refresh","num","selectors","viewQuery","ctx","BudgetVsSpendingComponent","spenServ","typeOptions","types","exBudByCat","expenReceiptChanged$","noExpFavorites","spendingValues","budgetValues","budgetData","selectedTypes","category_type","spendData","catSpenByMonth","category__category_type","spenValue","budgetValue","spend","totalSpent","indexAxis","borderColor","borderWidth","responsive","SpendingVsIncomeComponent","values","values2","monthValues","spendByMonth","yearSel","data2","incomeByMonth","monthLabels","val1","parseInt","val2","undefined"],"sourceRoot":"webpack:///"}